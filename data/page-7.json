{
  "servers": [
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.minnas/mcp",
      "description": "Share prompts and context with your team and discover community collections.",
      "status": "active",
      "repository": {
        "url": "https://github.com/sensoris/minnas-service",
        "source": "github"
      },
      "version": "1.1.0",
      "remotes": [
        {
          "type": "sse",
          "url": "https://api.minnas.io/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "33e1232b-4b00-46fc-9460-452cae6bdcb5",
          "versionId": "c3bda903-da17-48a7-b7ec-e2195c38e78c",
          "publishedAt": "2025-09-18T16:40:24.146729603Z",
          "updatedAt": "2025-09-18T16:40:24.146729603Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.variflight/variflight-mcp",
      "description": "Variflight MCP Server",
      "status": "active",
      "repository": {
        "url": "https://github.com/variflight/variflight-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@variflight-ai/variflight-mcp",
          "version": "1.0.0",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your API key for the service",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "VARIFLIGHT_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "314291ab-1ff5-4c6b-9879-9a236748c272",
          "versionId": "c41fdf1c-b9b0-4101-ba38-7584f2e6135a",
          "publishedAt": "2025-09-09T13:30:29.381063731Z",
          "updatedAt": "2025-09-09T13:43:56.537303875Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.iggredible/vim-mcp",
      "description": "Connect Claude Code to Vim/Neovim - query state, execute commands, search help, record macros",
      "status": "active",
      "repository": {
        "url": "https://github.com/iggredible/vim-mcp",
        "source": "github"
      },
      "version": "0.1.2",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "vim-mcp",
          "version": "0.1.2",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "ca864f0d-6915-41cb-b140-e85aa129c987",
          "versionId": "c44d9512-b4f0-426b-b603-57c416ad9db9",
          "publishedAt": "2025-09-26T22:02:08.877551484Z",
          "updatedAt": "2025-09-26T22:02:08.877551484Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/lineex-pubmed-mcp-smithery",
      "description": "Search PubMed with precision using keyword and journal filters and smart sorting. Uncover MeSH ter…",
      "status": "active",
      "repository": {
        "url": "https://github.com/lineex/pubmed-mcp-smithery",
        "source": "github"
      },
      "version": "1.14.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@lineex/pubmed-mcp-smithery/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "c6aea640-d696-4be9-b86f-5e789e46d166",
          "versionId": "c477c6e2-388e-43a1-892d-250cbf90120c",
          "publishedAt": "2025-09-16T01:10:37.458958533Z",
          "updatedAt": "2025-09-16T01:10:37.458958533Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/adamamer20-paper-search-mcp-openai",
      "description": "Search and download academic papers from arXiv, PubMed, bioRxiv, medRxiv, Google Scholar, Semantic…",
      "status": "active",
      "repository": {
        "url": "https://github.com/adamamer20/paper-search-mcp-openai",
        "source": "github"
      },
      "version": "1.14.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@adamamer20/paper-search-mcp-openai/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "1b9d8596-bc91-4ff3-811e-e3a0d7964759",
          "versionId": "c4eee19a-f32f-4400-b996-0386fb66c46e",
          "publishedAt": "2025-09-18T10:21:35.77628635Z",
          "updatedAt": "2025-09-18T10:21:35.77628635Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.biodnd/agent-ip",
      "description": "Agent IP: MCP server with patents search tools",
      "repository": {
        "url": "https://github.com/markchiang/go-agents",
        "source": "github",
        "subfolder": "src/go_agents/agents/ip"
      },
      "version": "0.1.0",
      "remotes": [
        {
          "type": "sse",
          "url": "https://agent-ip.biodnd.com/sse"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "30c71c78-e9f2-480d-969f-a352e650a85c",
          "versionId": "c5d23469-63b2-4347-8fe8-f3b14875f334",
          "publishedAt": "2025-09-23T08:27:01.316623608Z",
          "updatedAt": "2025-09-23T09:08:13.513992098Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/kodey-ai-mapwise-mcp",
      "description": "Send friendly, personalized greetings on demand. Generate quick salutations with a simple prompt.…",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@kodey-ai/mapwise-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "5f480031-7f5d-472d-a622-0e42344857f2",
          "versionId": "c5e7c259-731f-42f5-959c-b2f423acbffc",
          "publishedAt": "2025-09-18T21:55:01.522892141Z",
          "updatedAt": "2025-09-18T21:55:01.522892141Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.OtherVibes/mcp-as-a-judge",
      "description": "MCP as a Judge: a behavioral MCP that strengthens AI coding assistants via explicit LLM evaluations",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.3.3",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "mcp-as-a-judge",
          "version": "0.3.3",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "e8b7a95e-e0b7-44d1-9830-1ef945eed29d",
          "versionId": "c5f3c013-d154-4bbf-ad6f-f68c247c3371",
          "publishedAt": "2025-09-18T20:23:31.611474327Z",
          "updatedAt": "2025-09-18T21:45:57.098844508Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/minionszyw-bazi",
      "description": "Generate BaZi charts from birth details. Explore Four Pillars, solar terms, and Luck Pillars for d…",
      "status": "active",
      "repository": {
        "url": "https://github.com/minionszyw/bazi",
        "source": "github"
      },
      "version": "1.14.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@minionszyw/bazi/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "fba076e0-91b9-4c9a-8cca-ded71a0adb61",
          "versionId": "c6a1f6a6-e9c1-47cc-a280-e67cf0015f96",
          "publishedAt": "2025-09-18T08:13:10.601277709Z",
          "updatedAt": "2025-09-18T08:13:10.601277709Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.cameroncooke/XcodeBuildMCP",
      "description": "XcodeBuildMCP provides tools for Xcode project management, simulator management, and app utilities.",
      "status": "active",
      "repository": {
        "url": "https://github.com/cameroncooke/XcodeBuildMCP",
        "source": "github"
      },
      "version": "1.12.8",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "xcodebuildmcp",
          "version": "1.12.8",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "18e95b25-4c50-4d4f-836b-0d47f4ef98f4",
          "versionId": "c6f34744-715a-490d-996c-7e87596b8681",
          "publishedAt": "2025-09-09T19:54:23.228606748Z",
          "updatedAt": "2025-09-09T19:54:23.228606748Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.jkawamoto/mcp-youtube-transcript",
      "description": "An MCP server retrieving transcripts of YouTube videos",
      "status": "active",
      "repository": {
        "url": "https://github.com/jkawamoto/mcp-youtube-transcript",
        "source": "github"
      },
      "version": "0.5.1",
      "packages": [
        {
          "registryType": "mcpb",
          "identifier": "https://github.com/jkawamoto/mcp-youtube-transcript/releases/download/v0.5.1/mcp-youtube-transcript.mcpb",
          "version": "0.5.1",
          "fileSha256": "3356e741d4dafa24b0e931e3afd773c64d503f6624338beec62885f0dde59695",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "3ea19f39-944b-44bd-8cc7-dfb2f5150768",
          "versionId": "c6fe5633-4091-4018-8fd7-57b555f568ec",
          "publishedAt": "2025-09-17T08:10:03.858868083Z",
          "updatedAt": "2025-09-29T19:06:38.710478174Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/arjunkmrm-local-test2",
      "description": "Send friendly greetings instantly. Learn the origin of 'Hello, World' to add a fun fact to your me…",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@arjunkmrm/local-test2/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "605d6df2-f8c7-4d6e-ac68-6e124a141c7b",
          "versionId": "c72962c7-0b39-47c4-854c-5191f55dbb57",
          "publishedAt": "2025-09-29T08:52:53.034799778Z",
          "updatedAt": "2025-09-29T08:52:53.034799778Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/devbrother2024-typescript-mcp-server-boilerplate",
      "description": "Kickstart development with a customizable TypeScript template featuring sample tools for greeting,…",
      "status": "active",
      "repository": {
        "url": "https://github.com/devbrother2024/typescript-mcp-server-boilerplate",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@devbrother2024/typescript-mcp-server-boilerplate/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "67692a7a-a90a-4b1f-8005-f224079d6a31",
          "versionId": "c90bf24a-325b-49d6-92ef-4a0a56a57ae4",
          "publishedAt": "2025-09-20T16:12:55.711868952Z",
          "updatedAt": "2025-09-20T16:12:55.711868952Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.estruyf/vscode-demo-time",
      "description": "Enables AI assistants to interact with Demo Time and helps build presentations and demos.",
      "status": "active",
      "repository": {
        "url": "https://github.com/estruyf/vscode-demo-time",
        "source": "github"
      },
      "version": "0.0.55",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@demotime/mcp",
          "version": "0.0.55",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "20dee53d-4ec0-45dd-b5e7-fb3c71fa6352",
          "versionId": "c965417f-fe89-47ce-bbd6-914ffdac121a",
          "publishedAt": "2025-09-19T07:45:12.638193269Z",
          "updatedAt": "2025-09-19T07:45:12.638193269Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.spences10/mcp-turso-cloud",
      "description": "MCP server for integrating Turso with LLMs",
      "status": "active",
      "repository": {
        "url": "https://github.com/spences10/mcp-turso-cloud",
        "source": "github"
      },
      "version": "0.0.9",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mcp-turso-cloud",
          "version": "0.0.9",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Turso Platform API token for authentication",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "TURSO_API_TOKEN"
            },
            {
              "description": "Turso organization name",
              "isRequired": true,
              "format": "string",
              "name": "TURSO_ORGANIZATION"
            },
            {
              "description": "Default database name (optional)",
              "format": "string",
              "name": "TURSO_DEFAULT_DATABASE"
            },
            {
              "description": "Token expiration time (default: 7d)",
              "format": "string",
              "name": "TOKEN_EXPIRATION"
            },
            {
              "description": "Default token permission level (default: full-access)",
              "format": "string",
              "name": "TOKEN_PERMISSION"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "6e207d30-93d4-4a85-b486-358dd6c50cc3",
          "versionId": "c9fd1a85-4447-4cac-8612-6b9d15f8329f",
          "publishedAt": "2025-09-26T21:22:07.399039955Z",
          "updatedAt": "2025-09-26T21:22:07.399039955Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.close/close-mcp",
      "description": "Close CRM to manage your sales pipeline. Learn more at https://close.com or https://mcp.close.com",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.close.com/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "770f5812-1f2f-46c7-bef9-e05f6d62f304",
          "versionId": "c9fdc775-1ff6-4c60-a696-58b5a07ab59e",
          "publishedAt": "2025-09-09T18:15:23.108331317Z",
          "updatedAt": "2025-09-22T21:07:57.610560832Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/arjunkmrm-ahoy2",
      "description": "Create friendly greetings by name, with an optional pirate tone. Explore the origin of 'Hello, Wor…",
      "status": "active",
      "repository": {
        "url": "https://github.com/arjunkmrm/ahoy",
        "source": "github"
      },
      "version": "1.13.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@arjunkmrm/ahoy2/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "d2eaf7dd-1510-4035-9779-7b4820662dbd",
          "versionId": "ca5f80fd-1eab-4967-b9a3-c921b0319446",
          "publishedAt": "2025-09-18T09:44:13.762613275Z",
          "updatedAt": "2025-09-18T09:44:13.762613275Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.cyanheads/mcp-ts-template",
      "description": "A production-grade TypeScript template for scalable MCP servers with built-in observability.",
      "status": "active",
      "repository": {
        "url": "https://github.com/cyanheads/mcp-ts-template",
        "source": "github"
      },
      "version": "2.1.7",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mcp-ts-template",
          "version": "2.1.7",
          "runtimeHint": "bun",
          "transport": {
            "type": "stdio"
          },
          "packageArguments": [
            {
              "value": "run",
              "type": "positional"
            },
            {
              "value": "start:stdio",
              "type": "positional"
            }
          ],
          "environmentVariables": [
            {
              "description": "Sets the minimum log level for output (e.g., 'debug', 'info', 'warn').",
              "format": "string",
              "default": "info",
              "name": "MCP_LOG_LEVEL"
            }
          ]
        },
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mcp-ts-template",
          "version": "2.1.7",
          "runtimeHint": "bun",
          "transport": {
            "type": "streamable-http",
            "url": "http://localhost:3010/mcp"
          },
          "packageArguments": [
            {
              "value": "run",
              "type": "positional"
            },
            {
              "value": "start:http",
              "type": "positional"
            }
          ],
          "environmentVariables": [
            {
              "description": "The hostname for the HTTP server.",
              "format": "string",
              "default": "127.0.0.1",
              "name": "MCP_HTTP_HOST"
            },
            {
              "description": "The port to run the HTTP server on.",
              "format": "string",
              "default": "3010",
              "name": "MCP_HTTP_PORT"
            },
            {
              "description": "The endpoint path for the MCP server.",
              "format": "string",
              "default": "/mcp",
              "name": "MCP_HTTP_ENDPOINT_PATH"
            },
            {
              "description": "Authentication mode to use: 'none', 'jwt', or 'oauth'.",
              "format": "string",
              "default": "none",
              "name": "MCP_AUTH_MODE"
            },
            {
              "description": "Sets the minimum log level for output (e.g., 'debug', 'info', 'warn').",
              "format": "string",
              "default": "info",
              "name": "MCP_LOG_LEVEL"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "b1a7bd6b-21e2-4cd8-8531-37dddc5fa3f4",
          "versionId": "ca715aa0-178c-40e2-a230-5ccc4bc46a0e",
          "publishedAt": "2025-09-27T22:01:57.920713864Z",
          "updatedAt": "2025-09-28T04:06:34.163937911Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.vercel/vercel-mcp",
      "description": "An MCP server for Vercel",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.0.2",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.vercel.com"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "b0265c63-b74d-4e92-bd28-89fd55a29545",
          "versionId": "ca97ce9f-45a6-4249-a6de-d2a1797adf0f",
          "publishedAt": "2025-09-17T21:29:22.383255285Z",
          "updatedAt": "2025-09-17T21:29:22.383255285Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.domdomegg/time-mcp-pypi",
      "description": "Get the current UTC time in RFC 3339 format.",
      "status": "active",
      "repository": {
        "url": "https://github.com/domdomegg/time-mcp-pypi.git",
        "source": "github"
      },
      "version": "1.0.6",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "time-mcp-pypi",
          "version": "1.0.6",
          "runtimeHint": "python",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "5edcfca6-43c2-4859-a7a5-19e0f2d17ef3",
          "versionId": "cc123f69-0820-4c87-b304-99e82175a541",
          "publishedAt": "2025-09-12T02:14:45.618237925Z",
          "updatedAt": "2025-09-12T02:14:45.618237925Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.pshivapr/selenium-mcp",
      "description": "Selenium Tools for MCP",
      "status": "active",
      "repository": {
        "url": "https://github.com/pshivapr/selenium-mcp",
        "source": "github"
      },
      "version": "0.3.9",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "selenium-webdriver-mcp",
          "version": "0.3.9",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your API key for the service",
              "format": "string",
              "isSecret": true,
              "name": "YOUR_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "e6648a72-6a2f-4b64-991e-4be3ed59ed3c",
          "versionId": "cc6f63b8-d592-4ca8-9440-9e3be35be2c8",
          "publishedAt": "2025-09-09T19:08:26.435100548Z",
          "updatedAt": "2025-09-11T13:43:51.367329854Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.ChiR24/unreal-engine-mcp",
      "description": "Production-ready MCP server for Unreal Engine with comprehensive game development tools",
      "repository": {
        "url": "https://github.com/ChiR24/Unreal_mcp.git",
        "source": "github"
      },
      "version": "0.3.0",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "unreal-engine-mcp-server",
          "version": "0.3.0",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Unreal Engine host address",
              "value": "127.0.0.1",
              "name": "UE_HOST"
            },
            {
              "description": "Remote Control HTTP port",
              "value": "30010",
              "name": "UE_RC_HTTP_PORT"
            },
            {
              "description": "Remote Control WebSocket port",
              "value": "30020",
              "name": "UE_RC_WS_PORT"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "49c64feb-2e4c-406d-b39f-1236bf2212a6",
          "versionId": "ccdf5061-3cb1-4dfe-a36a-f6bbbf6c3abf",
          "publishedAt": "2025-09-17T12:43:41.483739766Z",
          "updatedAt": "2025-09-19T06:42:00.165667265Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.mcpanalytics/analytics",
      "description": "MCP Analytics, searchable tools and reports with interactive HTML visualization",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://api.mcpanalytics.ai/auth0"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "219a2fa3-ba26-4574-9c45-44886d4ff9e8",
          "versionId": "cd5b8366-f0bb-42fd-98bb-e8e467db2554",
          "publishedAt": "2025-09-17T02:38:18.067163459Z",
          "updatedAt": "2025-09-17T03:00:38.275209785Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.schemacrawler/schemacrawler-ai",
      "description": "Enables natural language schema queries — explore tables, keys, procedures, and get SQL help fast",
      "status": "active",
      "repository": {
        "url": "https://github.com/schemacrawler/SchemaCrawler-AI",
        "source": "github"
      },
      "version": "v16.28.2-1",
      "packages": [
        {
          "registryType": "oci",
          "registryBaseUrl": "https://docker.io",
          "identifier": "schemacrawler/schemacrawler-ai",
          "version": "v16.28.2-1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Database user name. Can be optional depending on the database connection type.",
              "format": "string",
              "isSecret": true,
              "name": "SCHCRWLR_DATABASE_USER"
            },
            {
              "description": "Database user password. Can be optional depending on the database connection type.",
              "format": "string",
              "isSecret": true,
              "name": "SCHCRWLR_DATABASE_PASSWORD"
            },
            {
              "description": "JDBC URL for database connection. If this is provided, the server, host, port and database are not used.",
              "format": "string",
              "name": "SCHCRWLR_JDBC_URL"
            },
            {
              "description": "SchemaCrawler database plugin, for example, 'sqlserver' or 'sqlite'. Used only if the JDBC URL is not provided.",
              "format": "string",
              "name": "SCHCRWLR_SERVER"
            },
            {
              "description": "Database host. Defaults to localhost. Used only if the JDBC URL is not provided.",
              "format": "string",
              "name": "SCHCRWLR_HOST"
            },
            {
              "description": "Database port. Defaults to the default port for the server type. Used only if the JDBC URL is not provided.",
              "format": "string",
              "name": "SCHCRWLR_PORT"
            },
            {
              "description": "Database to connect to (optional). Used only if the JDBC URL is not provided.",
              "format": "string",
              "name": "SCHCRWLR_DATABASE"
            },
            {
              "description": "How much database metadata to retrieve. Values are 'minimum', 'standard', 'detailed' or 'maximum'.",
              "format": "string",
              "name": "SCHCRWLR_INFO_LEVEL"
            },
            {
              "description": "Logging verbosity level. Values are 'SEVERE', 'WARNING', 'INFO', 'CONFIG', or 'FINE'.",
              "format": "string",
              "name": "SCHCRWLR_LOG_LEVEL"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "3616e073-7a15-42cb-ae02-4c6d64c92905",
          "versionId": "ce887e38-e3cd-41e6-9823-baa601f36c7c",
          "publishedAt": "2025-09-20T13:17:42.501613163Z",
          "updatedAt": "2025-09-27T01:18:14.979887202Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.cloudflare.mcp/mcp",
      "description": "Cloudflare MCP servers",
      "status": "active",
      "repository": {
        "url": "https://github.com/cloudflare/mcp-server-cloudflare",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://docs.mcp.cloudflare.com/mcp"
        },
        {
          "type": "streamable-http",
          "url": "https://observability.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://bindings.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://builds.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://radar.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://containers.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://browser.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://logs.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://ai-gateway.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://autorag.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://auditlogs.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://dns-analytics.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://dex.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://casb.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://graphql.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://docs.mcp.cloudflare.com/sse"
        },
        {
          "type": "sse",
          "url": "https://observability.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://bindings.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://builds.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://radar.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://containers.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://browser.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://logs.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://ai-gateway.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://autorag.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://auditlogs.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://dns-analytics.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://dex.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://casb.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://graphql.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "ae4bba89-5a64-4d7d-8d8d-92b9b4b4d15b",
          "versionId": "ceb6f1e9-0f6b-4668-aa74-a7308963775f",
          "publishedAt": "2025-09-16T22:06:29.987728525Z",
          "updatedAt": "2025-09-16T22:06:29.987728525Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.cyanheads/pubmed-mcp-server",
      "description": "Comprehensive PubMed MCP Server to search, retrieve, and analyze biomedical literature from NCBI.",
      "status": "active",
      "repository": {
        "url": "https://github.com/cyanheads/pubmed-mcp-server",
        "source": "github"
      },
      "version": "1.4.4",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@cyanheads/pubmed-mcp-server",
          "version": "1.4.4",
          "runtimeHint": "node",
          "transport": {
            "type": "stdio"
          },
          "packageArguments": [
            {
              "value": "dist/index.js",
              "type": "positional"
            }
          ],
          "environmentVariables": [
            {
              "description": "Specifies the transport mechanism for the server.",
              "isRequired": true,
              "format": "string",
              "default": "stdio",
              "name": "MCP_TRANSPORT_TYPE"
            },
            {
              "description": "Sets the minimum log level for output (e.g., 'debug', 'info', 'warn').",
              "format": "string",
              "default": "info",
              "name": "MCP_LOG_LEVEL"
            },
            {
              "description": "Your NCBI API key for higher rate limits.",
              "format": "string",
              "name": "NCBI_API_KEY"
            }
          ]
        },
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@cyanheads/pubmed-mcp-server",
          "version": "1.4.4",
          "runtimeHint": "node",
          "transport": {
            "type": "streamable-http",
            "url": "http://localhost:3017/mcp"
          },
          "packageArguments": [
            {
              "value": "dist/index.js",
              "type": "positional"
            }
          ],
          "environmentVariables": [
            {
              "description": "Specifies the transport mechanism for the server.",
              "isRequired": true,
              "format": "string",
              "default": "http",
              "name": "MCP_TRANSPORT_TYPE"
            },
            {
              "description": "The host for the HTTP server.",
              "format": "string",
              "default": "localhost",
              "name": "MCP_HTTP_HOST"
            },
            {
              "description": "The port for the HTTP server.",
              "format": "string",
              "default": "3017",
              "name": "MCP_HTTP_PORT"
            },
            {
              "description": "The endpoint path for MCP requests.",
              "format": "string",
              "default": "/mcp",
              "name": "MCP_HTTP_ENDPOINT_PATH"
            },
            {
              "description": "Authentication mode: 'none', 'jwt', or 'oauth'.",
              "format": "string",
              "default": "none",
              "name": "MCP_AUTH_MODE"
            },
            {
              "description": "Sets the minimum log level (e.g., 'debug', 'info', 'warn').",
              "format": "string",
              "default": "info",
              "name": "MCP_LOG_LEVEL"
            },
            {
              "description": "Your NCBI API key for higher rate limits.",
              "format": "string",
              "name": "NCBI_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "3330804b-b80f-4333-93ae-c578e7848b26",
          "versionId": "cee0c5a8-9a97-455d-91c4-14135d905e43",
          "publishedAt": "2025-09-15T13:34:11.145838692Z",
          "updatedAt": "2025-09-15T13:34:11.145838692Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/neverinfamous-memory-journal-mcp",
      "description": "A MCP server built for developers enabling Git based project management with project and personal…",
      "status": "active",
      "repository": {
        "url": "https://github.com/neverinfamous/memory-journal-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@neverinfamous/memory-journal-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "04da7ca4-7f41-4cdb-98e5-12c4f7a5bd12",
          "versionId": "cf109d3d-025a-4fad-82ce-701c2741df50",
          "publishedAt": "2025-09-15T03:39:21.908030323Z",
          "updatedAt": "2025-09-15T03:39:21.908030323Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.himorishige/hatago-mcp-hub",
      "description": "Unified MCP Hub for managing multiple Model Context Protocol servers",
      "status": "active",
      "repository": {
        "url": "https://github.com/himorishige/hatago-mcp-hub",
        "source": "github"
      },
      "version": "0.0.16",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@himorishige/hatago-mcp-hub",
          "version": "0.0.16",
          "runtimeHint": "npx",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "27980499-f44a-453a-8b3c-6450b5c0947b",
          "versionId": "cf1ae9e0-e572-47a9-961b-21c516bb7606",
          "publishedAt": "2025-09-14T14:57:18.596180971Z",
          "updatedAt": "2025-09-14T14:57:18.596180971Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.driflyte/driflyte-mcp-server",
      "description": "Driflyte MCP server which lets AI assistants query topic-specific knowledge from web and GitHub.",
      "status": "active",
      "repository": {
        "url": "https://github.com/serkan-ozal/driflyte-mcp-server",
        "source": "github"
      },
      "version": "0.1.4",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@driflyte/mcp-server",
          "version": "0.1.4",
          "runtimeHint": "npx",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.driflyte.com/mcp"
        },
        {
          "type": "streamable-http",
          "url": "https://mcp.driflyte.com/openai"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "e4bf9279-bd3f-43d4-8c82-8b26d237876b",
          "versionId": "cfab0b0b-a41f-4f8f-9367-7505011310db",
          "publishedAt": "2025-09-29T07:47:32.615906587Z",
          "updatedAt": "2025-09-29T11:59:05.45659263Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.shawndurrani/mcp-merchant",
      "description": "Search-only commerce MCP server backed by Stripe (test)",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.1.0",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mcp-merchant",
          "version": "0.1.0",
          "runtimeHint": "npx",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Stripe secret key (test mode)",
              "isRequired": true,
              "isSecret": true,
              "name": "STRIPE_SECRET_KEY"
            },
            {
              "description": "Max products to cache",
              "default": "100",
              "name": "PRODUCT_LIMIT"
            },
            {
              "description": "Catalog refresh interval in seconds",
              "default": "600",
              "name": "REFRESH_INTERVAL_SEC"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "8681fb6c-725d-4896-b15e-1088ffe74743",
          "versionId": "cfe9b2c3-e001-4c33-8cb8-1a6aca43b309",
          "publishedAt": "2025-09-09T10:36:46.541849731Z",
          "updatedAt": "2025-09-14T02:22:00.59735517Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.pedro-rivas/android-puppeteer-mcp",
      "description": "MCP server for Android automation with UI interaction, screenshots, and device control",
      "status": "active",
      "repository": {
        "url": "https://github.com/pedro-rivas/android-puppeteer-mcp",
        "source": "github"
      },
      "version": "1.0.1",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "android-puppeteer-mcp",
          "version": "1.0.1",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "1358a9af-ccab-47f5-8176-1892168954f0",
          "versionId": "d01babcd-d7a6-44b9-b5bd-0e0b8f6cb969",
          "publishedAt": "2025-09-18T02:09:11.965570935Z",
          "updatedAt": "2025-09-18T02:09:11.965570935Z",
          "isLatest": true
        }
      }
    },
    {
      "name": "io.github.ruvnet/claude-flow",
      "description": "AI orchestration with hive-mind swarms, neural networks, and 87 MCP tools for enterprise dev.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "2.0.0-alpha.104",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "claude-flow",
          "version": "2.0.0-alpha.104",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "8362811b-c6cc-401d-92d9-6288295e9104",
          "versionId": "d04e69ef-3bd3-4216-8145-928c3c775ee8",
          "publishedAt": "2025-09-10T16:20:48.985187906Z",
          "updatedAt": "2025-09-10T16:46:39.972611608Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.timeslope/timeslope-mcp",
      "description": "Equip AI with tools for researching economic data from Federal Reserve Economic Data (FRED).",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.1.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.timeslope.com/mcp",
          "headers": [
            {
              "description": "Authorization Bearer header containing API key or OAuth token",
              "isRequired": true,
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "66353cf7-acae-4942-8828-0f7615f3a31c",
          "versionId": "d0551f52-173b-4443-8125-a58153f8f82e",
          "publishedAt": "2025-09-11T18:16:25.262687063Z",
          "updatedAt": "2025-09-11T18:16:25.262687063Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/brave",
      "description": "Visit https://brave.com/search/api/ for a free API key. Search the web, local businesses, images,…",
      "status": "active",
      "repository": {
        "url": "https://github.com/brave/brave-search-mcp-server",
        "source": "github"
      },
      "version": "2.0.6",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/brave/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "72fbc728-2894-4a60-aaf5-44d616ddd249",
          "versionId": "d0cdf20e-831c-4de3-b2eb-8dad26a1e866",
          "publishedAt": "2025-09-19T09:40:01.083925747Z",
          "updatedAt": "2025-09-19T11:31:51.128068889Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.driflyte/driflyte-mcp-server",
      "description": "Driflyte MCP server which lets AI assistants query topic-specific knowledge from web and GitHub.",
      "status": "active",
      "repository": {
        "url": "https://github.com/serkan-ozal/driflyte-mcp-server",
        "source": "github"
      },
      "version": "0.0.19",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@driflyte/mcp-server",
          "version": "0.0.19",
          "runtimeHint": "npx",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.driflyte.com/mcp"
        },
        {
          "type": "streamable-http",
          "url": "https://mcp.driflyte.com/openai"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "e4bf9279-bd3f-43d4-8c82-8b26d237876b",
          "versionId": "d0fe6fb4-46e7-466d-b031-907f3e2a104f",
          "publishedAt": "2025-09-20T16:12:47.912694714Z",
          "updatedAt": "2025-09-21T10:31:49.276749534Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.ycjcl868/mcp-server-fear-greed",
      "description": "An MCP server for mcp-server-fear-greed",
      "status": "active",
      "repository": {
        "url": "https://github.com/ycjcl868/mcp-server-fear-greed",
        "source": "github"
      },
      "version": "1.0.1",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mcp-server-fear-greed",
          "version": "1.0.1",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "44863cea-e132-4d11-a92d-e6f1d531b079",
          "versionId": "d1378e5e-f1cf-4eeb-bbb1-9e9527654acf",
          "publishedAt": "2025-09-09T03:01:43.052528327Z",
          "updatedAt": "2025-09-09T04:08:35.763104718Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.overstarry/qweather-mcp",
      "description": "a qweather mcp server",
      "status": "active",
      "repository": {
        "url": "https://github.com/overstarry/qweather-mcp",
        "source": "github"
      },
      "version": "1.0.12",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "qweather-mcp",
          "version": "1.0.12",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your qweather api host",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "QWEATHER_API_BASE"
            },
            {
              "description": "Your qweather api key",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "QWEATHER_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "76511fb8-3c99-44cd-903a-fe5ef2370b03",
          "versionId": "d19619da-84d8-4b62-a2f4-766eca866ea2",
          "publishedAt": "2025-09-10T14:28:10.30769765Z",
          "updatedAt": "2025-09-10T14:28:10.30769765Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.pubnub/mcp-server",
      "description": "PubNub MCP for Real-time messaging. API Access and SDK documentation.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.104",
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "1319578e-b112-443f-9938-68f2527a10b4",
          "versionId": "d1e7a64f-300f-4506-bf0f-30e8684b857b",
          "publishedAt": "2025-09-19T02:42:31.411220651Z",
          "updatedAt": "2025-09-19T21:08:36.529344207Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.supabase/mcp",
      "description": "MCP server for interacting with the Supabase platform",
      "status": "active",
      "repository": {
        "url": "https://github.com/supabase-community/supabase-mcp",
        "source": "github",
        "subfolder": "packages/mcp-server-supabase"
      },
      "version": "0.5.5",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@supabase/mcp-server-supabase",
          "version": "0.5.5",
          "runtimeHint": "npx",
          "transport": {
            "type": "stdio"
          },
          "runtimeArguments": [
            {
              "description": "Supabase project reference ID",
              "format": "string",
              "type": "named",
              "name": "--project-ref"
            },
            {
              "description": "Enable read-only mode",
              "format": "boolean",
              "type": "named",
              "name": "--read-only"
            },
            {
              "description": "Comma-separated list of features to enable",
              "format": "string",
              "type": "named",
              "name": "--features"
            },
            {
              "description": "Custom API URL",
              "format": "string",
              "type": "named",
              "name": "--api-url"
            }
          ],
          "environmentVariables": [
            {
              "description": "Personal access token for Supabase API",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "SUPABASE_ACCESS_TOKEN"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "b7c21a79-6a4a-42e2-a194-944a1d1ed9f7",
          "versionId": "d1eeec4d-9cad-4acb-8d79-4f44332fe3f9",
          "publishedAt": "2025-09-18T21:32:17.512331682Z",
          "updatedAt": "2025-09-18T21:32:17.512331682Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.cyanheads/mcp-ts-template",
      "description": "A production-grade TypeScript template for scalable MCP servers with built-in observability.",
      "status": "active",
      "repository": {
        "url": "https://github.com/cyanheads/mcp-ts-template",
        "source": "github"
      },
      "version": "2.1.5",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mcp-ts-template",
          "version": "2.1.5",
          "runtimeHint": "bun",
          "transport": {
            "type": "stdio"
          },
          "packageArguments": [
            {
              "value": "run",
              "type": "positional"
            },
            {
              "value": "start:stdio",
              "type": "positional"
            }
          ],
          "environmentVariables": [
            {
              "description": "Sets the minimum log level for output (e.g., 'debug', 'info', 'warn').",
              "format": "string",
              "default": "info",
              "name": "MCP_LOG_LEVEL"
            }
          ]
        },
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mcp-ts-template",
          "version": "2.1.5",
          "runtimeHint": "bun",
          "transport": {
            "type": "streamable-http",
            "url": "http://localhost:3010/mcp"
          },
          "packageArguments": [
            {
              "value": "run",
              "type": "positional"
            },
            {
              "value": "start:http",
              "type": "positional"
            }
          ],
          "environmentVariables": [
            {
              "description": "The hostname for the HTTP server.",
              "format": "string",
              "default": "127.0.0.1",
              "name": "MCP_HTTP_HOST"
            },
            {
              "description": "The port to run the HTTP server on.",
              "format": "string",
              "default": "3010",
              "name": "MCP_HTTP_PORT"
            },
            {
              "description": "The endpoint path for the MCP server.",
              "format": "string",
              "default": "/mcp",
              "name": "MCP_HTTP_ENDPOINT_PATH"
            },
            {
              "description": "Authentication mode to use: 'none', 'jwt', or 'oauth'.",
              "format": "string",
              "default": "none",
              "name": "MCP_AUTH_MODE"
            },
            {
              "description": "Sets the minimum log level for output (e.g., 'debug', 'info', 'warn').",
              "format": "string",
              "default": "info",
              "name": "MCP_LOG_LEVEL"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "b1a7bd6b-21e2-4cd8-8531-37dddc5fa3f4",
          "versionId": "d28f6046-21eb-41c0-a679-3a51fd12e495",
          "publishedAt": "2025-09-26T16:00:37.862170934Z",
          "updatedAt": "2025-09-27T21:00:38.116997504Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.waystation/wrike",
      "description": "Manage projects, tasks, and workflows with Wrike project management.",
      "status": "active",
      "repository": {
        "url": "https://github.com/waystation-ai/mcp",
        "source": "github"
      },
      "version": "0.3.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://waystation.ai/wrike/mcp"
        },
        {
          "type": "sse",
          "url": "https://waystation.ai/wrike/mcp/sse"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "5fccc166-4608-4928-b6a6-df708e455cd0",
          "versionId": "d2fa299a-65ac-4c2d-8d48-b30826140fb3",
          "publishedAt": "2025-09-09T14:37:01.216778711Z",
          "updatedAt": "2025-09-09T14:37:01.216778711Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/yuna0x0-hackmd-mcp",
      "description": "Interact with your HackMD notes and teams seamlessly. Manage your notes, view reading history, and…",
      "status": "active",
      "repository": {
        "url": "https://github.com/yuna0x0/hackmd-mcp",
        "source": "github"
      },
      "version": "1.4.2",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@yuna0x0/hackmd-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "a85afd07-0178-49e6-b962-178f24839d99",
          "versionId": "d300fcf6-437a-444d-ac42-f7e55f9d5380",
          "publishedAt": "2025-09-13T08:37:37.613854961Z",
          "updatedAt": "2025-09-15T03:33:42.700252156Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.Raistlin82/btp-sap-odata-to-mcp-server-optimized",
      "description": "Enterprise SAP OData to MCP Server with AI capabilities and Cloud Foundry integration",
      "status": "active",
      "repository": {
        "url": "https://github.com/Raistlin82/btp-sap-odata-to-mcp-server-optimized",
        "source": "github"
      },
      "version": "1.0.1",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "btp-sap-odata-to-mcp-server",
          "version": "1.0.1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "URL of the SAP Identity Authentication Service tenant",
              "isRequired": true,
              "format": "string",
              "name": "SAP_IAS_URL"
            },
            {
              "description": "Client ID for the OAuth application in IAS",
              "isRequired": true,
              "format": "string",
              "name": "SAP_IAS_CLIENT_ID"
            },
            {
              "description": "Client Secret for the OAuth application in IAS",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "SAP_IAS_CLIENT_SECRET"
            },
            {
              "description": "Name of the BTP destination used for service discovery",
              "isRequired": true,
              "format": "string",
              "name": "SAP_DESTINATION_NAME"
            },
            {
              "description": "OData discovery mode: pattern, business, whitelist, or all",
              "format": "string",
              "name": "ODATA_DISCOVERY_MODE"
            },
            {
              "description": "Comma-separated patterns to include (pattern mode)",
              "format": "string",
              "name": "ODATA_INCLUDE_PATTERNS"
            },
            {
              "description": "Comma-separated patterns to exclude (pattern mode)",
              "format": "string",
              "name": "ODATA_EXCLUDE_PATTERNS"
            },
            {
              "description": "The port on which the Express server will listen",
              "format": "string",
              "name": "PORT"
            },
            {
              "description": "The application's operating environment",
              "format": "string",
              "name": "NODE_ENV"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "c1c29016-edf6-4fea-987b-c64b862d94d2",
          "versionId": "d30be744-00fd-4763-bb3f-a9d4dea1e17f",
          "publishedAt": "2025-09-21T04:33:38.866274995Z",
          "updatedAt": "2025-09-21T04:33:38.866274995Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.rbonestell/ap-mcp-server",
      "description": "Model Context Protocol (MCP) server for the Associated Press Media API",
      "status": "active",
      "repository": {
        "url": "https://github.com/rbonestell/ap-mcp-server",
        "source": "github"
      },
      "version": "1.2.6",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "ap-mcp-server",
          "version": "1.2.6",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your API key for the service",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "YOUR_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "15b5d5c8-7445-4376-a09b-d1951dccc90b",
          "versionId": "d50ffd11-3650-48ce-ba9b-6aaaea10ee1c",
          "publishedAt": "2025-09-09T14:57:28.79470971Z",
          "updatedAt": "2025-09-09T14:57:28.79470971Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.ignission/mcp",
      "description": "TikTok video data analytics and content strategy tools",
      "status": "active",
      "repository": {
        "url": "https://github.com/ignission-io/mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.ignission.io/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "83c33312-203b-4245-a0d8-94f9a453b4fa",
          "versionId": "d544bbcc-44e2-4774-b097-e886b50dd022",
          "publishedAt": "2025-09-10T16:49:33.978580087Z",
          "updatedAt": "2025-09-10T16:49:33.978580087Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/pinkpixel-dev-web-scout-mcp",
      "description": "Search the web and extract clean, readable text from webpages. Process multiple URLs at once to sp…",
      "status": "active",
      "repository": {
        "url": "https://github.com/pinkpixel-dev/web-scout-mcp",
        "source": "github"
      },
      "version": "1.5.3",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@pinkpixel-dev/web-scout-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "b81da317-d978-4f5f-9532-fa88b6a5799a",
          "versionId": "d5ec1a21-49f5-4bf7-b4e5-4bc8cd746213",
          "publishedAt": "2025-09-20T02:41:17.173406544Z",
          "updatedAt": "2025-09-20T03:20:23.189855739Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/xinkuang-china-stock-mcp",
      "description": "Access real-time and historical market data for China A-shares and Hong Kong stocks, along with ne…",
      "status": "active",
      "repository": {
        "url": "https://github.com/xinkuang/china-stock-mcp",
        "source": "github"
      },
      "version": "1.15.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@xinkuang/china-stock-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "5c7889d8-5bdd-4aff-885f-ce3ec823d7b7",
          "versionId": "d68ba895-749d-48c4-8da5-b2f95f11c375",
          "publishedAt": "2025-09-30T01:41:03.405267832Z",
          "updatedAt": "2025-09-30T01:41:03.405267832Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.taurgis/sfcc-dev-mcp",
      "description": "MCP server for Salesforce B2C Commerce Cloud development assistance",
      "status": "active",
      "repository": {
        "url": "https://github.com/taurgis/sfcc-dev-mcp",
        "source": "github"
      },
      "version": "1.0.14",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "sfcc-dev-mcp",
          "version": "1.0.14",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "e3c84b64-c6e1-49dc-9ca2-8909e36ac408",
          "versionId": "d76fb4c9-af0a-4588-9de3-2dd0856ba874",
          "publishedAt": "2025-09-17T07:22:50.583895618Z",
          "updatedAt": "2025-09-17T07:22:50.583895618Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.martymarkenson/postgres-connector",
      "description": "MCP server for querying PostgreSQL databases",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.1",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "postgres-connector",
          "version": "1.0.1",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "5fe9408b-2370-41fb-90f9-3fce961c0968",
          "versionId": "d7872e0e-c300-4b3d-9f46-b5f31cf5e99e",
          "publishedAt": "2025-09-23T12:45:22.90533061Z",
          "updatedAt": "2025-09-25T21:59:51.449878022Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.cyanheads/mcp-ts-template",
      "description": "A production-grade TypeScript template for scalable MCP servers with built-in observability.",
      "status": "active",
      "repository": {
        "url": "https://github.com/cyanheads/mcp-ts-template",
        "source": "github"
      },
      "version": "2.2.2",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mcp-ts-template",
          "version": "2.2.2",
          "runtimeHint": "bun",
          "transport": {
            "type": "stdio"
          },
          "packageArguments": [
            {
              "value": "run",
              "type": "positional"
            },
            {
              "value": "start:stdio",
              "type": "positional"
            }
          ],
          "environmentVariables": [
            {
              "description": "Sets the minimum log level for output (e.g., 'debug', 'info', 'warn').",
              "format": "string",
              "default": "info",
              "name": "MCP_LOG_LEVEL"
            }
          ]
        },
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mcp-ts-template",
          "version": "2.2.2",
          "runtimeHint": "bun",
          "transport": {
            "type": "streamable-http",
            "url": "http://localhost:3010/mcp"
          },
          "packageArguments": [
            {
              "value": "run",
              "type": "positional"
            },
            {
              "value": "start:http",
              "type": "positional"
            }
          ],
          "environmentVariables": [
            {
              "description": "The hostname for the HTTP server.",
              "format": "string",
              "default": "127.0.0.1",
              "name": "MCP_HTTP_HOST"
            },
            {
              "description": "The port to run the HTTP server on.",
              "format": "string",
              "default": "3010",
              "name": "MCP_HTTP_PORT"
            },
            {
              "description": "The endpoint path for the MCP server.",
              "format": "string",
              "default": "/mcp",
              "name": "MCP_HTTP_ENDPOINT_PATH"
            },
            {
              "description": "Authentication mode to use: 'none', 'jwt', or 'oauth'.",
              "format": "string",
              "default": "none",
              "name": "MCP_AUTH_MODE"
            },
            {
              "description": "Sets the minimum log level for output (e.g., 'debug', 'info', 'warn').",
              "format": "string",
              "default": "info",
              "name": "MCP_LOG_LEVEL"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "b1a7bd6b-21e2-4cd8-8531-37dddc5fa3f4",
          "versionId": "d7d6429a-6d79-47c0-aef1-3b3de9d0e52e",
          "publishedAt": "2025-09-28T07:49:04.520080836Z",
          "updatedAt": "2025-09-29T20:10:17.765786517Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/JMoak-chrono-mcp",
      "description": "Convert and compare dates and times across any timezone with flexible, locale-aware formatting. Ad…",
      "status": "active",
      "repository": {
        "url": "https://github.com/JMoak/chrono-mcp",
        "source": "github"
      },
      "version": "0.2.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@JMoak/chrono-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "b052d258-4e6b-404f-b132-835d28c1178b",
          "versionId": "d7d98bbe-95e6-491b-af67-3646314b554a",
          "publishedAt": "2025-09-17T02:23:35.312972065Z",
          "updatedAt": "2025-09-17T02:23:35.312972065Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "net.todoist/mcp",
      "description": "Official Todoist MCP server for AI assistants to manage tasks, projects, and workflows.",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://ai.todoist.net/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "64292e92-8b90-4b7c-8ff0-4ccb206b35a2",
          "versionId": "d865cb7d-2de5-497a-befc-1005ba20bc55",
          "publishedAt": "2025-09-24T15:27:34.540662924Z",
          "updatedAt": "2025-09-24T15:27:34.540662924Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.yuna0x0/anilist-mcp",
      "description": "AniList MCP server for accessing AniList API data",
      "status": "active",
      "repository": {
        "url": "https://github.com/yuna0x0/anilist-mcp",
        "source": "github"
      },
      "version": "1.3.7",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "anilist-mcp",
          "version": "1.3.7",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "AniList API token for authenticated requests",
              "format": "string",
              "isSecret": true,
              "name": "ANILIST_TOKEN"
            }
          ]
        },
        {
          "registryType": "oci",
          "registryBaseUrl": "https://ghcr.io",
          "identifier": "yuna0x0/anilist-mcp",
          "version": "1.3.7",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "AniList API token for authenticated requests",
              "format": "string",
              "isSecret": true,
              "name": "ANILIST_TOKEN"
            }
          ]
        },
        {
          "registryType": "mcpb",
          "identifier": "https://github.com/yuna0x0/anilist-mcp/releases/download/v1.3.7/anilist-mcp-1.3.7.mcpb",
          "version": "1.3.7",
          "fileSha256": "29088017de549959db323020223aa564606285935bc5dbc7b2e2657ef4aba66a",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "AniList API token for authenticated requests",
              "format": "string",
              "isSecret": true,
              "name": "ANILIST_TOKEN"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "6bdae0fa-dff2-4ae3-82f9-03710c1ffb86",
          "versionId": "d8979dcb-5e98-4490-9846-b063cbca18b2",
          "publishedAt": "2025-09-29T12:44:11.439741043Z",
          "updatedAt": "2025-09-29T12:44:11.439741043Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.b1ff/atlassian-dc-mcp-bitbucket",
      "description": "MCP server for Atlassian Bitbucket Data Center - interact with repositories and code",
      "status": "active",
      "repository": {
        "url": "https://github.com/b1ff/atlassian-dc-mcp",
        "source": "github"
      },
      "version": "0.9.7",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@atlassian-dc-mcp/bitbucket",
          "version": "0.9.7",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Bitbucket host domain (e.g. your-instance.atlassian.net)",
              "format": "string",
              "name": "BITBUCKET_HOST"
            },
            {
              "description": "Bitbucket API base path (alternative to BITBUCKET_HOST)",
              "format": "string",
              "name": "BITBUCKET_API_BASE_PATH"
            },
            {
              "description": "Bitbucket Personal Access Token or API token",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "BITBUCKET_API_TOKEN"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "632bfe48-4b52-4ef4-a266-c82075a80f1a",
          "versionId": "d8bd9e48-abc3-47b9-b08b-3840ecb838c5",
          "publishedAt": "2025-09-13T13:17:33.579913494Z",
          "updatedAt": "2025-09-13T13:18:51.365304119Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.wonderwhy-er/desktop-commander",
      "description": "MCP server for terminal commands, file operations, and process management",
      "status": "active",
      "repository": {
        "url": "https://github.com/wonderwhy-er/DesktopCommanderMCP",
        "source": "github"
      },
      "version": "0.2.16",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@wonderwhy-er/desktop-commander",
          "version": "0.2.16",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "70b472c6-0bf2-44b2-97fc-be12bfc3cdca",
          "versionId": "d8c210c8-b0e5-4cf1-ae9a-115b8c8b2519",
          "publishedAt": "2025-09-26T16:35:30.865267972Z",
          "updatedAt": "2025-09-26T16:35:30.865267972Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.dockersamples/mcp-docker-release-information",
      "description": "MCP server providing Docker Desktop release notes and security information.",
      "status": "active",
      "repository": {
        "url": "https://github.com/dockersamples/mcp-docker-release-information",
        "source": "github"
      },
      "version": "0.2.0",
      "packages": [
        {
          "registryType": "oci",
          "identifier": "dockersamples/mcp-docker-release-information",
          "version": "0.2.0",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "fe7a5c36-265f-4e7b-a3ad-ef2c4c95f241",
          "versionId": "d8cd8b14-0050-458f-9a86-2ecd60df7b1b",
          "publishedAt": "2025-09-10T15:23:14.335332844Z",
          "updatedAt": "2025-09-10T18:54:52.777673838Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.pree-dew/mcp-bookmark",
      "description": "MCP Server for adding bookmarks in openai RAG",
      "status": "active",
      "repository": {
        "url": "https://github.com/pree-dew/mcp-bookmark",
        "source": "github"
      },
      "version": "0.1.5",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "mcp-bookmark-server",
          "version": "0.1.2",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "open ai api key",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "OPENAI_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "39628bbb-4f3d-4ff1-b12e-637f5d3d604e",
          "versionId": "d91efb6c-fbfe-4e42-922c-a2fabb8cb2ae",
          "publishedAt": "2025-09-29T06:32:47.109622603Z",
          "updatedAt": "2025-09-29T06:32:47.109622603Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.driflyte/driflyte-mcp-server",
      "description": "Driflyte MCP server which lets AI assistants query topic-specific knowledge from web and GitHub.",
      "status": "active",
      "repository": {
        "url": "https://github.com/serkan-ozal/driflyte-mcp-server",
        "source": "github"
      },
      "version": "0.0.20",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@driflyte/mcp-server",
          "version": "0.0.20",
          "runtimeHint": "npx",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.driflyte.com/mcp"
        },
        {
          "type": "streamable-http",
          "url": "https://mcp.driflyte.com/openai"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "e4bf9279-bd3f-43d4-8c82-8b26d237876b",
          "versionId": "d9c52924-226a-4ed4-892f-c38fb1b31e71",
          "publishedAt": "2025-09-21T10:31:49.219280157Z",
          "updatedAt": "2025-09-21T10:31:49.219280157Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.therealtimex/un-datacommons-mcp",
      "description": "MCP server to query Data Commons indicators and observations (base or custom).",
      "status": "active",
      "repository": {
        "url": "https://github.com/therealtimex/un-datacommons-mcp",
        "source": "github"
      },
      "version": "1.0.1",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "un-datacommons-mcp",
          "version": "1.0.1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Data Commons API key from apikeys.datacommons.org",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "DC_API_KEY"
            },
            {
              "description": "Type of Data Commons to use: base|custom (default: base)",
              "format": "string",
              "name": "DC_TYPE"
            },
            {
              "description": "Custom DC base URL when DC_TYPE=custom",
              "format": "string",
              "name": "CUSTOM_DC_URL"
            },
            {
              "description": "Comma-separated root topic DCIDs for custom DCs",
              "format": "string",
              "name": "DC_ROOT_TOPIC_DCIDS"
            },
            {
              "description": "Search scope for custom DCs: base_only|custom_only|base_and_custom",
              "format": "string",
              "name": "DC_SEARCH_SCOPE"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "88c3edae-dd5b-45f8-9943-6c13630d9eb5",
          "versionId": "da7f942c-2add-45a8-b35b-a2b92ff52421",
          "publishedAt": "2025-09-29T21:53:16.395496154Z",
          "updatedAt": "2025-09-29T21:53:16.395496154Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/jjlabsio-korea-stock-mcp",
      "description": "Search company disclosures and financial statements from the Korean market. Retrieve stock profile…",
      "status": "active",
      "repository": {
        "url": "https://github.com/jjlabsio/korea-stock-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@jjlabsio/korea-stock-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "7c15ce7e-7738-44d1-a12d-623c2f081975",
          "versionId": "db05e116-a497-44d3-8ac2-3f95abb70c8e",
          "publishedAt": "2025-09-19T09:01:49.012753599Z",
          "updatedAt": "2025-09-19T09:01:49.012753599Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.schemacrawler/schemacrawler-ai",
      "description": "Enables natural language schema queries — explore tables, keys, procedures, and get SQL help fast",
      "status": "active",
      "repository": {
        "url": "https://github.com/schemacrawler/SchemaCrawler-AI",
        "source": "github"
      },
      "version": "v16.28.1-2",
      "packages": [
        {
          "registryType": "oci",
          "registryBaseUrl": "https://docker.io",
          "identifier": "schemacrawler/schemacrawler-ai",
          "version": "v16.28.1-2",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Database user name. Can be optional depending on the database connection type.",
              "format": "string",
              "isSecret": true,
              "name": "SCHCRWLR_DATABASE_USER"
            },
            {
              "description": "Database user password. Can be optional depending on the database connection type.",
              "format": "string",
              "isSecret": true,
              "name": "SCHCRWLR_DATABASE_PASSWORD"
            },
            {
              "description": "JDBC URL for database connection. If this is provided, the server, host, port and database are not used.",
              "format": "string",
              "name": "SCHCRWLR_JDBC_URL"
            },
            {
              "description": "SchemaCrawler database plugin, for example, 'sqlserver' or 'sqlite'. Used only if the JDBC URL is not provided.",
              "format": "string",
              "name": "SCHCRWLR_SERVER"
            },
            {
              "description": "Database host. Defaults to localhost. Used only if the JDBC URL is not provided.",
              "format": "string",
              "name": "SCHCRWLR_HOST"
            },
            {
              "description": "Database port. Defaults to the default port for the server type. Used only if the JDBC URL is not provided.",
              "format": "string",
              "name": "SCHCRWLR_PORT"
            },
            {
              "description": "Database to connect to (optional). Used only if the JDBC URL is not provided.",
              "format": "string",
              "name": "SCHCRWLR_DATABASE"
            },
            {
              "description": "How much database metadata to retrieve. Values are 'minimum', 'standard', 'detailed' or 'maximum'.",
              "format": "string",
              "name": "SCHCRWLR_INFO_LEVEL"
            },
            {
              "description": "Logging verbosity level. Values are 'SEVERE', 'WARNING', 'INFO', 'CONFIG', or 'FINE'.",
              "format": "string",
              "name": "SCHCRWLR_LOG_LEVEL"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "3616e073-7a15-42cb-ae02-4c6d64c92905",
          "versionId": "db13f701-5d86-4a6f-8cb5-cf2bf7a9a182",
          "publishedAt": "2025-09-17T23:55:52.054264908Z",
          "updatedAt": "2025-09-20T13:17:42.512459486Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.biodnd/agent-press",
      "description": "Agent Press: news MCP server streaming company headlines",
      "repository": {
        "url": "https://github.com/markchiang/go-agents",
        "source": "github",
        "subfolder": "src/go_agents/agents/press"
      },
      "version": "0.1.0",
      "remotes": [
        {
          "type": "sse",
          "url": "https://agent-press.biodnd.com/sse"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "8475fdbb-a38f-4d19-95ad-00e601276b42",
          "versionId": "dc204bad-0703-4849-b42c-0ec72208bc37",
          "publishedAt": "2025-09-23T08:27:08.049032565Z",
          "updatedAt": "2025-09-23T09:08:14.848180083Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.apple-rag/mcp-server",
      "description": "Apple Developer Documentation with Semantic Search, RAG, and AI reranking for MCP clients",
      "status": "active",
      "repository": {
        "url": "https://github.com/BingoWon/apple-rag-mcp",
        "source": "github"
      },
      "version": "2.4.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.apple-rag.com",
          "headers": [
            {
              "description": "MCP Token for authentication (optional - free tier available without token)",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "803e4dc4-c3d4-43d2-b6a3-65885c8eefb4",
          "versionId": "dc27ec5b-37aa-4537-a0b2-3bc603e23e1d",
          "publishedAt": "2025-09-17T14:41:53.205694658Z",
          "updatedAt": "2025-09-17T14:43:14.562703229Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.yuna0x0/anilist-mcp",
      "description": "AniList MCP server for accessing AniList API data",
      "status": "active",
      "repository": {
        "url": "https://github.com/yuna0x0/anilist-mcp",
        "source": "github"
      },
      "version": "1.3.5",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "anilist-mcp",
          "version": "1.3.5",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "AniList API token for authenticated requests",
              "format": "string",
              "isSecret": true,
              "name": "ANILIST_TOKEN"
            }
          ]
        },
        {
          "registryType": "oci",
          "registryBaseUrl": "https://ghcr.io",
          "identifier": "yuna0x0/anilist-mcp",
          "version": "1.3.5",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "AniList API token for authenticated requests",
              "format": "string",
              "isSecret": true,
              "name": "ANILIST_TOKEN"
            }
          ]
        },
        {
          "registryType": "mcpb",
          "identifier": "https://github.com/yuna0x0/anilist-mcp/releases/download/v1.3.5/anilist-mcp-1.3.5.mcpb",
          "version": "1.3.5",
          "fileSha256": "40a76d2027c01ac43c592bf14a08beed7bdc4faca1d814086d11dbd664efd24a",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "AniList API token for authenticated requests",
              "format": "string",
              "isSecret": true,
              "name": "ANILIST_TOKEN"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "6bdae0fa-dff2-4ae3-82f9-03710c1ffb86",
          "versionId": "dc28d8be-ae3d-474a-8020-a9d1646d7df1",
          "publishedAt": "2025-09-21T13:14:02.752847787Z",
          "updatedAt": "2025-09-22T00:19:27.284057916Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/slhad-aha-mcp",
      "description": "A TypeScript MCP server for Home Assistant, enabling programmatic management of entities, automati…",
      "status": "active",
      "repository": {
        "url": "https://github.com/slhad/aha-mcp",
        "source": "github"
      },
      "version": "0.1.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@slhad/aha-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "cb323720-734b-4ab5-bfa8-ae77a814a1ba",
          "versionId": "dc884dc5-6e28-4fc8-9ae7-d3374c803288",
          "publishedAt": "2025-09-14T21:53:54.664725619Z",
          "updatedAt": "2025-09-14T21:53:54.664725619Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.Nekzus/npm-sentinel-mcp",
      "description": "NPM Sentinel MCP - AI-powered NPM package analysis for security, dependencies, and performance.",
      "status": "active",
      "repository": {
        "url": "https://github.com/Nekzus/npm-sentinel-mcp",
        "source": "github"
      },
      "version": "1.11.7",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@nekzus/mcp-server",
          "version": "1.11.7",
          "runtimeHint": "npx",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "364d771b-c515-4071-805d-75513fa308ce",
          "versionId": "dcca7eb4-abf1-45db-bfaa-fdbf661bb39a",
          "publishedAt": "2025-09-20T23:15:02.12284828Z",
          "updatedAt": "2025-09-20T23:23:20.783978986Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.kkjdaniel/bgg-mcp",
      "description": "BoardGameGeek MCP server providing access to BGG API data through standardized tools",
      "status": "active",
      "repository": {
        "url": "https://github.com/kkjdaniel/bgg-mcp",
        "source": "github"
      },
      "version": "1.4.0",
      "packages": [
        {
          "registryType": "oci",
          "registryBaseUrl": "https://docker.io",
          "identifier": "kdaniel/bgg-mcp",
          "version": "1.4.0",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your BoardGameGeek username for references such as ME or MY in prompts",
              "format": "string",
              "name": "BGG_USERNAME"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "5a801dcc-96ae-47cf-ae55-0be14ade1d94",
          "versionId": "dcdafe42-5317-4d98-bdaf-c66382fb0d7d",
          "publishedAt": "2025-09-16T01:51:47.021731658Z",
          "updatedAt": "2025-09-16T01:51:47.021731658Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.timheuer/sampledotnetmcpserver",
      "description": "Sample .NET MCP Server",
      "repository": {
        "url": "https://github.com/timheuer/sampledotnetmcpserver",
        "source": "github"
      },
      "version": "0.1.47-beta",
      "packages": [
        {
          "registryType": "nuget",
          "identifier": "TimHeuer.SampleDotnetMcpServer",
          "version": "0.1.47-beta",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "98619929-a570-46c1-8e35-4cde888731ee",
          "versionId": "dceeb59c-c54e-49f0-a35a-3419c47b70c8",
          "publishedAt": "2025-09-18T23:12:00.031460414Z",
          "updatedAt": "2025-09-19T00:25:42.487558694Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.pree-dew/mcp-bookmark",
      "description": "MCP Server for adding bookmarks in openai RAG",
      "status": "active",
      "repository": {
        "url": "https://github.com/pree-dew/mcp-bookmark",
        "source": "github"
      },
      "version": "0.1.1",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "mcp-bookmark-server",
          "version": "0.1.1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "open ai api key",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "OPENAI_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "39628bbb-4f3d-4ff1-b12e-637f5d3d604e",
          "versionId": "dd2b7e15-a6f4-420b-bd79-2268233c4de1",
          "publishedAt": "2025-09-26T11:24:18.288443922Z",
          "updatedAt": "2025-09-28T11:22:51.467187125Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.mcpcap/mcpcap",
      "description": "An MCP server for analyzing PCAP files.",
      "status": "active",
      "repository": {
        "url": "https://github.com/mcpcap/mcpcap",
        "source": "github"
      },
      "version": "0.6.0",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "mcpcap",
          "version": "0.4.4",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "1a77c0fe-c133-468d-aad0-52c60574d088",
          "versionId": "ddb6c35f-5332-4c85-b347-ce592a9e7c74",
          "publishedAt": "2025-09-18T00:54:48.998144834Z",
          "updatedAt": "2025-09-18T00:54:48.998144834Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.apple-rag/mcp-server",
      "description": "Apple Developer Documentation with Semantic Search, RAG, and AI reranking for MCP clients",
      "status": "active",
      "repository": {
        "url": "https://github.com/BingoWon/apple-rag-mcp",
        "source": "github"
      },
      "version": "2.7.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.apple-rag.com",
          "headers": [
            {
              "description": "MCP Token for authentication (optional - free tier available without token)",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "803e4dc4-c3d4-43d2-b6a3-65885c8eefb4",
          "versionId": "de22b67e-a889-4f97-a88f-8ae4c35c70a7",
          "publishedAt": "2025-09-20T13:08:19.344314837Z",
          "updatedAt": "2025-09-20T13:10:26.619071892Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/MisterSandFR-supabase-mcp-selfhosted",
      "description": "Query and manage your Supabase database directly from your workspace. Execute SQL statements, brow…",
      "status": "active",
      "repository": {
        "url": "https://github.com/MisterSandFR/Supabase-MCP-SelfHosted",
        "source": "github"
      },
      "version": "1.14.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@MisterSandFR/supabase-mcp-selfhosted/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "d07e588e-585e-44b0-a8d4-4cf7ad928ba0",
          "versionId": "de316363-fd3c-4c96-ad69-221ece1f5f67",
          "publishedAt": "2025-09-16T22:41:06.53621168Z",
          "updatedAt": "2025-09-18T14:42:06.205284803Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/fitaf-ai-fitaf-ai-mcp",
      "description": "Manage workouts, nutrition, goals, and progress across the FitAF platform. Connect wearables, sync…",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@fitaf-ai/fitaf-ai-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "22efc6f6-1167-45ae-8587-89820ef8079c",
          "versionId": "dee80ba3-a6f1-4bc0-bac5-7a3c3d4c5597",
          "publishedAt": "2025-09-12T17:59:11.653728452Z",
          "updatedAt": "2025-09-12T17:59:11.653728452Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.blockscout/mcp-server",
      "description": "MCP server for Blockscout",
      "status": "active",
      "repository": {
        "url": "https://github.com/blockscout/mcp-server",
        "source": "github"
      },
      "version": "0.10.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.blockscout.com/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "7fcc8569-45f7-48c1-92b4-6530543951ab",
          "versionId": "def6cbcb-501b-496a-8e4d-ed6aee618938",
          "publishedAt": "2025-09-24T21:24:00.159185366Z",
          "updatedAt": "2025-09-24T21:24:00.159185366Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/DynamicEndpoints-m365-core-mcp",
      "description": "*Updated June 17th 2025** Manage your Microsoft 365 services effortlessly. Create and manage distr…",
      "status": "active",
      "repository": {
        "url": "https://github.com/DynamicEndpoints/m365-core-mcp",
        "source": "github"
      },
      "version": "1.1.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@DynamicEndpoints/m365-core-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "d2836d1a-c050-43b6-b896-0c426ee83103",
          "versionId": "df7356a1-098a-49c7-b14c-a816cad55978",
          "publishedAt": "2025-09-11T13:58:16.278260728Z",
          "updatedAt": "2025-09-11T13:58:16.278260728Z",
          "isLatest": true
        }
      }
    },
    {
      "name": "io.github.Skills03/scrimba-teaching",
      "description": "Interactive programming teacher using Scrimba methodology for 10x retention",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.1.0",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "scrimba-teaching-mcp",
          "version": "1.1.0",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "db943fb5-a144-442c-8cc3-d76be306b58b",
          "versionId": "df96edec-b150-4bb4-b94a-2b58b189e307",
          "publishedAt": "2025-09-21T14:14:53.542850749Z",
          "updatedAt": "2025-09-21T14:49:14.681137791Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.apple-rag/mcp-server",
      "description": "Apple Developer Documentation with Semantic Search, RAG, and AI reranking for MCP clients",
      "status": "active",
      "repository": {
        "url": "https://github.com/BingoWon/apple-rag-mcp",
        "source": "github"
      },
      "version": "2.6.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.apple-rag.com",
          "headers": [
            {
              "description": "MCP Token for authentication (optional - free tier available without token)",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "803e4dc4-c3d4-43d2-b6a3-65885c8eefb4",
          "versionId": "e07e5ac4-de2c-4e3e-bdf6-637c2cad0f34",
          "publishedAt": "2025-09-17T15:13:14.508375885Z",
          "updatedAt": "2025-09-20T13:08:19.358042928Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.lapfelix/xcodemcp",
      "description": "Control Xcode directly via JXA for build, test, debug operations with XCLogParser integration",
      "status": "active",
      "repository": {
        "url": "https://github.com/lapfelix/XcodeMCP",
        "source": "github"
      },
      "version": "2.1.4",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "xcodemcp",
          "version": "2.1.4",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "f3976f2e-7a54-4d1f-97de-4bce9fb901a2",
          "versionId": "e0f2c50b-80d7-4bfd-879e-327324b4ab9f",
          "publishedAt": "2025-09-18T03:19:27.884628282Z",
          "updatedAt": "2025-09-18T03:19:27.884628282Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/hithereiamaliff-mcp-nextcloud",
      "description": "A comprehensive Model Context Protocol (MCP) server that enables AI assistants to interact with yo…",
      "status": "active",
      "repository": {
        "url": "https://github.com/hithereiamaliff/mcp-nextcloud",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@hithereiamaliff/mcp-nextcloud/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "a5f6a595-3a74-421b-beac-721d59d609ca",
          "versionId": "e1318fc8-1005-4014-928e-5b82595773a9",
          "publishedAt": "2025-09-11T18:40:25.891251629Z",
          "updatedAt": "2025-09-11T18:40:25.891251629Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.b1ff/atlassian-dc-mcp-bitbucket",
      "description": "MCP server for Atlassian Bitbucket Data Center - interact with repositories and code",
      "status": "active",
      "repository": {
        "url": "https://github.com/b1ff/atlassian-dc-mcp",
        "source": "github"
      },
      "version": "0.9.0",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@atlassian-dc-mcp/bitbucket",
          "version": "0.9.0",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Bitbucket host domain (e.g. your-instance.atlassian.net)",
              "format": "string",
              "name": "BITBUCKET_HOST"
            },
            {
              "description": "Bitbucket API base path (alternative to BITBUCKET_HOST)",
              "format": "string",
              "name": "BITBUCKET_API_BASE_PATH"
            },
            {
              "description": "Bitbucket Personal Access Token or API token",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "BITBUCKET_API_TOKEN"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "632bfe48-4b52-4ef4-a266-c82075a80f1a",
          "versionId": "e14d142c-7c8d-4231-b0f0-0a1dbf2357b6",
          "publishedAt": "2025-09-13T11:37:20.709225306Z",
          "updatedAt": "2025-09-13T13:17:33.583855205Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.iunera/druid-mcp-server",
      "description": "AI-powered MCP server for Apache Druid cluster management and analytic",
      "status": "active",
      "repository": {
        "url": "https://github.com/iunera/druid-mcp-server",
        "source": "github"
      },
      "version": "1.2.1",
      "packages": [
        {
          "registryType": "oci",
          "registryBaseUrl": "https://docker.io",
          "identifier": "iunera/druid-mcp-server",
          "version": "1.2.1",
          "runtimeHint": "docker",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Druid router URL for connecting to the Druid cluster",
              "format": "string",
              "name": "DRUID_ROUTER_URL"
            },
            {
              "description": "Username for Druid authentication (optional)",
              "format": "string",
              "name": "DRUID_AUTH_USERNAME"
            },
            {
              "description": "Password for Druid authentication (optional)",
              "format": "string",
              "name": "DRUID_AUTH_PASSWORD"
            },
            {
              "description": "Enable SSL/TLS support for Druid connections",
              "format": "boolean",
              "name": "DRUID_SSL_ENABLED"
            },
            {
              "description": "Skip SSL certificate verification (for development/testing only)",
              "format": "boolean",
              "name": "DRUID_SSL_SKIP_VERIFICATION"
            },
            {
              "description": "Enable read-only mode (only GET requests and SQL queries allowed)",
              "format": "boolean",
              "name": "DRUID_MCP_READONLY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "c232e17d-152d-41f2-a532-85e8fa68d73e",
          "versionId": "e167424a-6ad1-4c57-ab2d-89552a711557",
          "publishedAt": "2025-09-24T05:52:38.477091345Z",
          "updatedAt": "2025-09-24T07:04:32.175441536Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/brave",
      "description": "Visit https://brave.com/search/api/ for a free API key. Search the web, local businesses, images,…",
      "status": "active",
      "repository": {
        "url": "https://github.com/brave/brave-search-mcp-server",
        "source": "github"
      },
      "version": "2.0.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/brave/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "72fbc728-2894-4a60-aaf5-44d616ddd249",
          "versionId": "e1990434-a6a0-47f9-834d-d59cee7d8efb",
          "publishedAt": "2025-09-12T14:23:41.666711561Z",
          "updatedAt": "2025-09-19T09:07:32.533724187Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.IvanMurzak/Unity-MCP",
      "description": "Make 3D games in Unity Engine with AI. MCP Server + Plugin for Unity Editor and Unity games.",
      "status": "active",
      "repository": {
        "url": "https://github.com/IvanMurzak/Unity-MCP",
        "source": "github",
        "subfolder": "Unity-MCP-Server"
      },
      "version": "0.17.1",
      "packages": [
        {
          "registryType": "oci",
          "registryBaseUrl": "https://docker.io",
          "identifier": "ivanmurzakdev/unity-mcp-server",
          "version": "0.17.1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Client -> Server <- Plugin connection port (default: 8080)",
              "format": "number",
              "name": "UNITY_MCP_PORT"
            },
            {
              "description": "Plugin -> Server connection timeout (ms) (default: 10000)",
              "format": "number",
              "name": "UNITY_MCP_PLUGIN_TIMEOUT"
            },
            {
              "description": "Client -> Server transport type: stdio or http (default: http)",
              "format": "string",
              "default": "stdio",
              "name": "UNITY_MCP_CLIENT_TRANSPORT"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "bad1e418-76f1-4842-82e7-5b036c57da38",
          "versionId": "e2adcc04-ca22-44d7-9fb6-a095d6f78bef",
          "publishedAt": "2025-09-12T11:41:26.282067118Z",
          "updatedAt": "2025-09-12T11:41:26.282067118Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "com.proxylink-mcp/mcp-server",
      "description": "ProxyLink MCP server for finding and booking home service professionals",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "2.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://proxylink-mcp.com"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "64947ce8-2b37-40dc-bb5b-5e1885fff32b",
          "versionId": "e2cfc1a9-8122-4a46-86f2-0fe3c9c658fa",
          "publishedAt": "2025-09-22T18:02:54.12402967Z",
          "updatedAt": "2025-09-22T18:02:54.12402967Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.hellocoop/admin-mcp",
      "description": "Model Context Protocol (MCP) for Hellō Admin API.",
      "status": "active",
      "repository": {
        "url": "https://github.com/hellocoop/admin-mcp",
        "source": "github"
      },
      "version": "1.5.7",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@hellocoop/admin-mcp",
          "version": "1.5.7",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "1fd23ac3-08e5-4a18-8512-fdce9c88f99f",
          "versionId": "e347bd04-44d1-4492-a2a2-657e75782db2",
          "publishedAt": "2025-09-12T15:07:41.224545153Z",
          "updatedAt": "2025-09-12T15:07:41.224545153Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.teamwork/mcp",
      "description": "The Teamwork.com official MCP server helps teams efficiently manage client projects with AI.",
      "status": "active",
      "repository": {
        "url": "https://github.com/teamwork/mcp",
        "source": "github"
      },
      "version": "1.5.5",
      "packages": [
        {
          "registryType": "oci",
          "registryBaseUrl": "https://docker.io",
          "identifier": "teamwork/mcp",
          "version": "v1.5.5",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "API key generated from the Teamwork.com OAuth2 process: https://apidocs.teamwork.com/guides/teamwork/app-login-flow",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "TW_MCP_BEARER_TOKEN"
            },
            {
              "description": "Choose log output format between 'text' or 'json'. Default is 'text'.",
              "format": "string",
              "name": "TW_MCP_LOG_FORMAT"
            },
            {
              "description": "Choose log level between 'debug', 'info', 'warn' or 'error'. Default is 'info'.",
              "format": "string",
              "name": "TW_MCP_LOG_LEVEL"
            }
          ]
        }
      ],
      "remotes": [
        {
          "type": "sse",
          "url": "https://mcp.ai.teamwork.com",
          "headers": [
            {
              "description": "API key generated from the Teamwork.com OAuth2 process: https://apidocs.teamwork.com/guides/teamwork/app-login-flow",
              "isRequired": true,
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://mcp.ai.teamwork.com",
          "headers": [
            {
              "description": "API key generated from the Teamwork.com OAuth2 process: https://apidocs.teamwork.com/guides/teamwork/app-login-flow",
              "isRequired": true,
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "8e1daf12-8a74-4718-93ec-86b05728241d",
          "versionId": "e3f7c755-bea6-448a-ace0-1d6a829b9671",
          "publishedAt": "2025-09-29T15:48:22.784028452Z",
          "updatedAt": "2025-09-29T16:24:46.701866333Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.chris-schra/mcp-funnel",
      "description": "MCP proxy that aggregates multiple servers with tool filtering and customization",
      "status": "active",
      "repository": {
        "url": "https://github.com/chris-schra/mcp-funnel",
        "source": "github",
        "id": "1055597409",
        "subfolder": "packages/mcp"
      },
      "version": "0.0.7",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mcp-funnel",
          "version": "0.0.6",
          "runtimeHint": "npx",
          "transport": {
            "type": "stdio"
          },
          "runtimeArguments": [
            {
              "value": "-y",
              "type": "positional"
            }
          ],
          "packageArguments": [
            {
              "description": "Optional path to .mcp-funnel.json config file",
              "format": "filepath",
              "type": "positional",
              "valueHint": "config_path"
            }
          ],
          "environmentVariables": [
            {
              "description": "Alternative way to specify config file path",
              "format": "filepath",
              "name": "MCP_FUNNEL_CONFIG"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "1efb077e-f618-4258-8924-6e3dae14ef8b",
          "versionId": "e426621e-4c78-4d87-ac66-8cb3db910b25",
          "publishedAt": "2025-09-17T18:55:31.888644079Z",
          "updatedAt": "2025-09-17T18:55:31.888644079Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://schemas.mcp.run/server.json",
      "name": "io.github.ptyagiegnyte/egnyte-remote",
      "description": "Secure integration between AI tools and Egnyte content with search, analysis, and workflow tools.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.1",
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "cd8693ba-aa21-47fa-9fb7-d47f548c111d",
          "versionId": "e4807f9f-b3af-4e6b-b06d-70bc304bddfb",
          "publishedAt": "2025-09-23T15:07:22.504595363Z",
          "updatedAt": "2025-09-23T15:07:22.504595363Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "com.wix/mcp",
      "description": "A Model Context Protocol server for Wix AI tools",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "sse",
          "url": "https://mcp.wix.com/sse"
        },
        {
          "type": "streamable-http",
          "url": "https://mcp.wix.com/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "d6d85b3f-6b89-45fa-84fc-921a27c25336",
          "versionId": "e4ac4a33-ef0b-4418-a20f-a59a73df10e9",
          "publishedAt": "2025-09-23T12:39:56.865011466Z",
          "updatedAt": "2025-09-23T12:39:56.865011466Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.Nekzus/npm-sentinel-mcp",
      "description": "NPM Sentinel MCP - AI-powered NPM package analysis for security, dependencies, and performance.",
      "status": "active",
      "repository": {
        "url": "https://github.com/Nekzus/npm-sentinel-mcp",
        "source": "github"
      },
      "version": "1.11.3",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@nekzus/mcp-server",
          "version": "1.11.3",
          "runtimeHint": "npx",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "364d771b-c515-4071-805d-75513fa308ce",
          "versionId": "e4cd324d-6cde-4d10-b0bc-3588786cd689",
          "publishedAt": "2025-09-20T22:27:49.327157122Z",
          "updatedAt": "2025-09-20T22:39:33.775619052Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "dev.promplate/hmr",
      "description": "Hot Module Reload (HMR) and reactive programming for Python",
      "repository": {
        "url": "https://github.com/promplate/hmr",
        "source": "github"
      },
      "version": "1.0.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://pyth-on-line.promplate.dev/hmr/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "c3678b28-5338-4c5a-9d44-c005c700e9a6",
          "versionId": "e522a3bc-d23c-4215-aacc-a5ae5c78ce5c",
          "publishedAt": "2025-09-17T21:09:37.850175971Z",
          "updatedAt": "2025-09-17T21:13:12.384420864Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.jkawamoto/mcp-bear",
      "description": "A MCP server for interacting with Bear note-taking software.",
      "status": "active",
      "repository": {
        "url": "https://github.com/jkawamoto/mcp-bear",
        "source": "github"
      },
      "version": "0.4.0",
      "packages": [
        {
          "registryType": "mcpb",
          "identifier": "https://github.com/jkawamoto/mcp-bear/releases/download/v0.4.0/mcp-bear.mcpb",
          "version": "0.4.0",
          "fileSha256": "f91b513cc189736035e090dd8217a866d4492a53ed094cc277b248890278554e",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Bear API token",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "BEAR_API_TOKEN"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "742b63fb-a3b4-410a-b681-d676967ddd16",
          "versionId": "e572696f-550b-4e2a-a60c-5e2339e26664",
          "publishedAt": "2025-09-18T02:53:22.271904561Z",
          "updatedAt": "2025-09-18T02:53:22.271904561Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.devcycle/mcp",
      "description": "DevCycle MCP server for feature flag management",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "6.0.2",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.devcycle.com/mcp"
        },
        {
          "type": "sse",
          "url": "https://mcp.devcycle.com/sse"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "6083a09f-1557-4e62-971f-ed2f0b692dd9",
          "versionId": "e6f3c597-90f1-42a4-ae3e-5a22662e6ac3",
          "publishedAt": "2025-09-17T19:06:43.362452757Z",
          "updatedAt": "2025-09-17T20:28:36.462391026Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/STUzhy-py_execute_mcp",
      "description": "Run Python code in a secure sandbox without local setup. Declare inline dependencies and execute s…",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@STUzhy/py_execute_mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "00e4c372-54d8-4246-b083-f74005cab347",
          "versionId": "e7ceccf7-af99-447d-a3a6-139b1501c5b5",
          "publishedAt": "2025-09-17T04:55:34.956438187Z",
          "updatedAt": "2025-09-17T04:55:34.956438187Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.morinokami/astro-mcp",
      "description": "MCP server to support Astro project development",
      "status": "active",
      "repository": {
        "url": "https://github.com/morinokami/astro-mcp",
        "source": "github"
      },
      "version": "0.4.2",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "astro-mcp",
          "version": "0.4.2",
          "transport": {
            "type": "sse",
            "url": "http://localhost:4321/__mcp/sse"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "565323c9-db80-4e1b-a79e-f21ae950e9a7",
          "versionId": "e7e2ee65-c9b0-436b-b709-cd909c24f25e",
          "publishedAt": "2025-09-11T17:37:51.51070648Z",
          "updatedAt": "2025-09-11T17:37:51.51070648Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/serkan-ozal-driflyte-mcp-server",
      "description": "Discover available topics and explore up-to-date, topic-tagged web content. Search to surface the…",
      "status": "active",
      "repository": {
        "url": "https://github.com/serkan-ozal/driflyte-mcp-server",
        "source": "github"
      },
      "version": "0.0.20",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@serkan-ozal/driflyte-mcp-server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "43b05fba-bf32-46a1-aa25-56b98e372ba4",
          "versionId": "e8120401-3cae-414e-a30f-7e5878b81891",
          "publishedAt": "2025-09-21T10:34:38.229628586Z",
          "updatedAt": "2025-09-29T21:11:04.768458226Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.vercel/vercel-mcp",
      "description": "An MCP server for connecting to Vercel",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.0.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.vercel.com"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "b0265c63-b74d-4e92-bd28-89fd55a29545",
          "versionId": "e82405a7-01da-410c-911e-1df13b446157",
          "publishedAt": "2025-09-17T21:18:23.966053956Z",
          "updatedAt": "2025-09-17T21:29:22.393251785Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.fliptheweb/yazio-mcp",
      "description": "MCP server for accessing Yazio user & nutrition data (unofficial)",
      "status": "active",
      "repository": {
        "url": "https://github.com/fliptheweb/yazio-mcp",
        "source": "github"
      },
      "version": "0.0.5",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "yazio-mcp",
          "version": "0.0.5",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Yazio Username",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "YAZIO_USERNAME"
            },
            {
              "description": "Yazio Password",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "YAZIO_PASSWORD"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "b28d33da-8510-4a00-aae3-a5ca0d22f9da",
          "versionId": "e87ed68b-6832-485f-9a47-8b865400c8c7",
          "publishedAt": "2025-09-25T21:36:08.066968193Z",
          "updatedAt": "2025-09-25T21:36:08.066968193Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.GitHub30/qiita-mcp-server",
      "description": "Publish articles to Qiita via MCP tools. Minimal, fast, and focused on Qiita authoring.",
      "status": "active",
      "repository": {
        "url": "https://github.com/GitHub30/qiita-mcp-server",
        "source": "github"
      },
      "version": "0.1.0",
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "d053c612-bfe7-42a7-a52b-9a12b369fd93",
          "versionId": "e8e8917a-071d-4ac8-8a0d-6500263e5f75",
          "publishedAt": "2025-09-23T08:59:51.414173308Z",
          "updatedAt": "2025-09-23T08:59:51.414173308Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "dev.augments/mcp",
      "description": "Augments MCP Server - A comprehensive framework documentation provider for Claude Code",
      "status": "active",
      "repository": {
        "url": "https://github.com/augmnt/augments-mcp-server",
        "source": "github"
      },
      "version": "2.0.2",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "augments-mcp-server",
          "version": "2.0.2",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.augments.dev/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "16c71293-26ff-48b3-b2aa-bb481f2f27c5",
          "versionId": "e9991cfc-6b4d-40bf-ab93-1a03567afdb4",
          "publishedAt": "2025-09-13T19:11:59.363394215Z",
          "updatedAt": "2025-09-13T19:11:59.363394215Z",
          "isLatest": true
        }
      }
    }
  ]
}