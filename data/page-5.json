{
  "servers": [
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/Hint-Services-obsidian-github-mcp",
      "description": "Connect AI assistants to your GitHub-hosted Obsidian vault to seamlessly access, search, and analy…",
      "status": "active",
      "repository": {
        "url": "https://github.com/Hint-Services/obsidian-github-mcp",
        "source": "github"
      },
      "version": "0.4.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@Hint-Services/obsidian-github-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "c9e39fea-5497-439f-aa32-70fe07bfeba4",
          "versionId": "86a34c13-67d8-4c36-9b29-47fee0e72635",
          "publishedAt": "2025-09-14T15:20:36.371442208Z",
          "updatedAt": "2025-09-14T15:20:36.371442208Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.ritzademo/acme-todo",
      "description": "An MCP server for a simple todo list",
      "status": "active",
      "repository": {
        "url": "https://github.com/ritza-co/acme-todo",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.ritzademo.com/mcp/ritza-rzx-our91"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "56249c55-9d56-473d-a5ba-9ccc9c956d5d",
          "versionId": "86d5e960-a135-427a-ab53-046209080b2e",
          "publishedAt": "2025-09-15T16:48:08.379170462Z",
          "updatedAt": "2025-09-15T16:48:08.379170462Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/ramadasmr-networkcalc-mcp",
      "description": "Look up DNS information for any domain to troubleshoot issues and gather insights. Get fast, relia…",
      "status": "active",
      "repository": {
        "url": "https://github.com/ramadasmr/networkcalc-mcp",
        "source": "github"
      },
      "version": "1.13.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@ramadasmr/networkcalc-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "492f38fe-94a3-4d61-9146-2ecc7896b017",
          "versionId": "874b81fc-3ec9-41f2-bcd0-4317bc8c1f8c",
          "publishedAt": "2025-09-20T10:10:47.321873085Z",
          "updatedAt": "2025-09-20T10:10:47.321873085Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "net.gepuro.mcp-company-lens-v1/company-lens-mcp-registry",
      "description": "Search Japanese company database",
      "status": "active",
      "repository": {
        "url": "https://github.com/gepuro/company-lens-mcp-registry",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp-company-lens-v1.gepuro.net/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "67d420d6-f9da-4488-b264-88c4d6126171",
          "versionId": "87793efe-79b4-4e91-8012-6a5cc6abe61e",
          "publishedAt": "2025-09-13T02:14:01.9221662Z",
          "updatedAt": "2025-09-13T02:14:01.9221662Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/smithery-ai-slack",
      "description": "Enable interaction with Slack workspaces. Supports subscribing to Slack events through Resources.",
      "status": "active",
      "repository": {
        "url": "https://github.com/smithery-ai/mcp-servers",
        "source": "github",
        "subfolder": "slack"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@smithery-ai/slack/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "b5fd9e9c-2aa1-4927-8d68-051719257c39",
          "versionId": "87df9cc3-6c2b-40c4-8087-7644b05f005d",
          "publishedAt": "2025-09-10T20:56:36.643850073Z",
          "updatedAt": "2025-09-10T20:56:36.643850073Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ci.git/mymlh-mcp-server",
      "description": "OAuth-enabled MyMLH MCP server for accessing MyMLH data.",
      "repository": {
        "url": "https://github.com/wei/mymlh-mcp-server",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mymlh-mcp.git.ci/mcp"
        },
        {
          "type": "sse",
          "url": "https://mymlh-mcp.git.ci/sse"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "a0aa174d-3e3e-4eb1-899e-706eb34ef643",
          "versionId": "87e529f5-a17d-45ef-a189-86bf64e42fb1",
          "publishedAt": "2025-09-18T01:20:01.35205977Z",
          "updatedAt": "2025-09-18T01:20:01.35205977Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.mintmcp/outlook-email",
      "description": "A MCP server for Outlook email that lets you search, read, and draft emails and replies.",
      "status": "active",
      "repository": {
        "url": "https://github.com/mintmcp/servers",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://outlook-email.mintmcp.com/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "c331c604-5fd3-409f-b076-7790b9acbb20",
          "versionId": "881c11dc-c6c4-4bdb-8baf-17c32f1e611b",
          "publishedAt": "2025-09-09T19:59:31.832251453Z",
          "updatedAt": "2025-09-09T20:02:38.029140257Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.containers/kubernetes-mcp-server",
      "description": "An MCP server that provides [describe what your server does]",
      "status": "active",
      "repository": {
        "url": "https://github.com/containers/kubernetes-mcp-server",
        "source": "github"
      },
      "version": "1.0.0",
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "bcee55b5-2316-4f92-8b66-db907496714b",
          "versionId": "8858e484-2e5e-4166-b39f-7f1002fa27a4",
          "publishedAt": "2025-09-16T13:06:55.742929857Z",
          "updatedAt": "2025-09-16T13:06:55.742929857Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.getunblocked/unblocked-mcp",
      "description": "Unblocked MCP Server",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://getunblocked.com/api/mcpsse"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "75219b4c-191f-4fec-8e1f-7b4604df9c8d",
          "versionId": "88833a2c-b1b8-4a0f-ba12-43193b270796",
          "publishedAt": "2025-09-17T17:32:31.670692124Z",
          "updatedAt": "2025-09-17T17:32:31.670692124Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.Lyellr88/marm-mcp-server",
      "description": "Universal MCP Server with advanced AI memory capabilities and semantic search.",
      "repository": {
        "url": "https://github.com/Lyellr88/MARM-Systems",
        "source": "github"
      },
      "version": "2.2.3",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "marm-mcp-server",
          "version": "2.2.3",
          "transport": {
            "type": "stdio"
          }
        },
        {
          "registryType": "oci",
          "identifier": "lyellr88/marm-mcp-server",
          "version": "2.2.3",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "73eda8a1-8138-43c0-ac0e-5f953d1d304e",
          "versionId": "888a54b2-a4fb-4e79-8d29-5f6dd2d7506c",
          "publishedAt": "2025-09-19T07:39:05.720820301Z",
          "updatedAt": "2025-09-19T08:07:18.948848371Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.mux/mcp",
      "description": "The official MCP Server for the Mux API",
      "status": "active",
      "repository": {
        "url": "https://github.com/muxinc/mux-node-sdk",
        "source": "github",
        "subfolder": "packages/mcp-server"
      },
      "version": "12.8.0",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@mux/mcp",
          "version": "12.8.0",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your Mux access token ID",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "MUX_TOKEN_ID"
            },
            {
              "description": "Your Mux access token secret",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "MUX_TOKEN_SECRET"
            },
            {
              "description": "Your JWT signing key ID, for use with signed playback IDs",
              "format": "string",
              "isSecret": true,
              "name": "MUX_SIGNING_KEY"
            },
            {
              "description": "Your JWT private key, for use with signed playback IDs",
              "format": "string",
              "isSecret": true,
              "name": "MUX_PRIVATE_KEY"
            }
          ]
        }
      ],
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.mux.com",
          "headers": [
            {
              "description": "Optional basic authorization header you can include, combining your Access Token and Secret using HTTP Basic Auth. If not provided, authorization will be handled via OAuth.",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "bf008dae-4210-4bce-8621-a709bc1e67cb",
          "versionId": "89136fab-1248-4db5-aabd-a112cc45136e",
          "publishedAt": "2025-09-18T20:19:27.74268937Z",
          "updatedAt": "2025-09-18T20:19:27.74268937Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.mobile-next/mobile-mcp",
      "description": "MCP server for iOS and Android Mobile Development, Automation and Testing",
      "status": "active",
      "repository": {
        "url": "https://github.com/mobile-next/mobile-mcp",
        "source": "github"
      },
      "version": "0.0.26",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@mobilenext/mobile-mcp",
          "version": "0.0.26",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "name": ""
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "0813f771-b958-4cbd-a4c1-67f97312db8b",
          "versionId": "89304685-3f90-4915-9b41-7742cf94b56a",
          "publishedAt": "2025-09-09T06:51:49.988573415Z",
          "updatedAt": "2025-09-09T06:51:49.988573415Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.driflyte/driflyte-mcp-server",
      "description": "Driflyte MCP server which lets AI assistants query topic-specific knowledge from web and GitHub.",
      "status": "active",
      "repository": {
        "url": "https://github.com/serkan-ozal/driflyte-mcp-server",
        "source": "github"
      },
      "version": "0.1.5",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@driflyte/mcp-server",
          "version": "0.1.5",
          "runtimeHint": "npx",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.driflyte.com/mcp"
        },
        {
          "type": "streamable-http",
          "url": "https://mcp.driflyte.com/openai"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "e4bf9279-bd3f-43d4-8c82-8b26d237876b",
          "versionId": "895e8a28-d58b-46a3-a88e-40d3bb71dccb",
          "publishedAt": "2025-09-29T11:59:05.447266747Z",
          "updatedAt": "2025-09-29T12:02:45.777744965Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.surendranb/google-analytics-mcp",
      "description": "An MCP server that provides [describe what your server does]",
      "status": "active",
      "repository": {
        "url": "https://github.com/surendranb/google-analytics-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "google-analytics-mcp",
          "version": "1.2.0",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your API key for the service",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "YOUR_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "16f9d16c-962b-44b7-904d-c9df1000fbf1",
          "versionId": "89606265-25b6-4e44-8c36-0988fd23211c",
          "publishedAt": "2025-09-09T06:10:41.49026764Z",
          "updatedAt": "2025-09-09T06:10:41.49026764Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.findyourfivepm/mcp-server",
      "description": "Discover cities where it's currently 5PM around the world with timezone and location data.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.2",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.findyourfivepm.com"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "53546a6e-b9a2-42c2-80e8-25de952fc608",
          "versionId": "89638680-b5e8-4024-a01a-767b19552328",
          "publishedAt": "2025-09-23T00:32:16.764241388Z",
          "updatedAt": "2025-09-23T00:32:16.764241388Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.mintmcp/gcal",
      "description": "A MCP server that works with Google Calendar to manage event listing, reading, and updates.",
      "status": "active",
      "repository": {
        "url": "https://github.com/mintmcp/mcp",
        "source": "github"
      },
      "version": "1.0.2",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://gcal.mintmcp.com/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "7b265ff1-5cd1-43fe-92c4-54cc6a0fd4d7",
          "versionId": "899391c2-e787-4df6-9788-0fcb0e1f086d",
          "publishedAt": "2025-09-09T19:36:27.962358954Z",
          "updatedAt": "2025-09-09T19:42:00.468110436Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.gradion-ai/ipybox",
      "description": "An MCP server for sandboxed Python code execution with IPython and Docker, and file transfer.",
      "status": "active",
      "repository": {
        "url": "https://github.com/gradion-ai/ipybox",
        "source": "github"
      },
      "version": "0.6.3-p2",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "ipybox",
          "version": "0.6.3-p2",
          "runtimeHint": "uvx",
          "transport": {
            "type": "stdio"
          },
          "packageArguments": [
            {
              "description": "Required MCP server subcommand",
              "isRequired": true,
              "value": "mcp",
              "type": "positional"
            },
            {
              "description": "Directory allowed for host filesystem operations",
              "type": "named",
              "name": "--allowed-dir",
              "isRepeated": true,
              "valueHint": "directory_path"
            },
            {
              "description": "Domain, IP address, or CIDR range allowed for outbound network access",
              "type": "named",
              "name": "--allowed-domain",
              "isRepeated": true,
              "valueHint": "domain_or_ip"
            },
            {
              "description": "Docker image tag to use",
              "type": "named",
              "name": "--container-tag",
              "valueHint": "docker_image_tag"
            },
            {
              "description": "Environment variable for container (KEY=VALUE format)",
              "type": "named",
              "name": "--container-env-var",
              "isRepeated": true,
              "valueHint": "env_var"
            },
            {
              "description": "Path to file containing container environment variables",
              "type": "named",
              "name": "--container-env-file",
              "valueHint": "file_path"
            },
            {
              "description": "Bind mount for container (host_path:container_path format)",
              "type": "named",
              "name": "--container-bind",
              "isRepeated": true,
              "valueHint": "bind_mount"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "2310a088-c5ba-429e-84b2-82d92622023b",
          "versionId": "89da352b-cb6c-4940-89bd-45b58a4740d3",
          "publishedAt": "2025-09-14T08:12:36.178778068Z",
          "updatedAt": "2025-09-14T08:12:36.178778068Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.yuna0x0/hackmd-mcp",
      "description": "A Model Context Protocol server for integrating HackMD's note-taking platform with AI assistants.",
      "status": "active",
      "repository": {
        "url": "https://github.com/yuna0x0/hackmd-mcp",
        "source": "github"
      },
      "version": "1.5.1",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "hackmd-mcp",
          "version": "1.5.1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your HackMD API token for API authentication",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "HACKMD_API_TOKEN"
            },
            {
              "description": "Optional HackMD API URL, defaults to https://api.hackmd.io/v1",
              "format": "string",
              "default": "https://api.hackmd.io/v1",
              "name": "HACKMD_API_URL"
            }
          ]
        },
        {
          "registryType": "oci",
          "registryBaseUrl": "https://ghcr.io",
          "identifier": "yuna0x0/hackmd-mcp",
          "version": "1.5.1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your HackMD API token for API authentication",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "HACKMD_API_TOKEN"
            },
            {
              "description": "Optional HackMD API URL, defaults to https://api.hackmd.io/v1",
              "format": "string",
              "default": "https://api.hackmd.io/v1",
              "name": "HACKMD_API_URL"
            }
          ]
        },
        {
          "registryType": "mcpb",
          "identifier": "https://github.com/yuna0x0/hackmd-mcp/releases/download/v1.5.1/hackmd-mcp-1.5.1.mcpb",
          "version": "1.5.1",
          "fileSha256": "a994d25dbf19fb2fd783c5daba402bf87fc5a1456e1a11acf6e729984a5524ae",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your HackMD API token for API authentication",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "HACKMD_API_TOKEN"
            },
            {
              "description": "Optional HackMD API URL, defaults to https://api.hackmd.io/v1",
              "format": "string",
              "default": "https://api.hackmd.io/v1",
              "name": "HACKMD_API_URL"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "e679729a-74ca-4b31-a7f5-80cddd5fa24d",
          "versionId": "8a33c695-fb2c-48ea-bac7-cbf56022abc2",
          "publishedAt": "2025-09-21T14:08:58.290591646Z",
          "updatedAt": "2025-09-22T00:26:57.638290849Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.apple-rag/mcp-server",
      "description": "Apple Developer Documentation with Semantic Search, RAG, and AI reranking for MCP clients",
      "status": "active",
      "repository": {
        "url": "https://github.com/BingoWon/apple-rag-mcp",
        "source": "github"
      },
      "version": "2.8.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.apple-rag.com",
          "headers": [
            {
              "description": "MCP Token for authentication (optional - free tier available without token)",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "803e4dc4-c3d4-43d2-b6a3-65885c8eefb4",
          "versionId": "8b331ec6-3e77-4ea2-a187-3bfe64764aa7",
          "publishedAt": "2025-09-20T13:10:26.610215669Z",
          "updatedAt": "2025-09-21T07:40:13.398559429Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.tedfytw1209/mcp-server-EVEfleet",
      "description": "An MCP server that provides tools for EVE Online players to manage their fleets",
      "status": "active",
      "repository": {
        "url": "https://github.com/tedfytw1209/mcp-server-EVEfleet",
        "source": "github"
      },
      "version": "1.0.2",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "mcp-server-evefleet",
          "version": "0.1.4",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your API key for the service",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "YOUR_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "540d0e52-a6cb-4d28-9377-887eca830e5d",
          "versionId": "8b40f793-31ef-49fa-9ec9-7971eaed7a2c",
          "publishedAt": "2025-09-20T15:35:31.249645791Z",
          "updatedAt": "2025-09-20T15:35:31.249645791Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "app.linear/linear",
      "description": "MCP server for Linear project management and issue tracking",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "sse",
          "url": "https://mcp.linear.app/sse"
        },
        {
          "type": "streamable-http",
          "url": "https://mcp.linear.app/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "08fcd639-7510-44e0-bcd7-c6cc20345d8c",
          "versionId": "8b8bca5f-bd16-4660-be56-da38b1ed6e95",
          "publishedAt": "2025-09-18T15:51:15.598862489Z",
          "updatedAt": "2025-09-18T15:51:15.598862489Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "dev.lingo/main",
      "description": "Lingo.dev MCP Server - World-class i18n implementation with ICU MessageFormat.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.lingo.dev/main"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "f0abb5cd-c660-478b-b3a4-7325bb3ad829",
          "versionId": "8bb26bcc-ecea-433a-ac25-ad9a370a4617",
          "publishedAt": "2025-09-17T08:32:24.189924177Z",
          "updatedAt": "2025-09-17T08:32:24.189924177Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/hollaugo-financial-research-mcp-server",
      "description": "Analyze stocks with summaries, price targets, and analyst recommendations. Track SEC filings, divi…",
      "status": "active",
      "repository": {
        "url": "https://github.com/hollaugo/tutorials",
        "source": "github",
        "subfolder": "smithery-example/financial-server"
      },
      "version": "1.15.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@hollaugo/financial-research-mcp-server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "c2f42a2b-64cb-4920-b50f-0f775e0f6434",
          "versionId": "8c48b4db-6d18-4efa-9522-f471a0e0b926",
          "publishedAt": "2025-09-29T16:56:54.60490322Z",
          "updatedAt": "2025-09-29T16:56:54.60490322Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.neverinfamous/sqlite-mcp-server",
      "description": "SQLite MCP server with 73 tools for JSONB, full-text search, geospatial, and analytics.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "2.6.0",
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "214e2c2b-d1c1-4b5c-bb54-863a40d6d742",
          "versionId": "8c59a7e9-2250-4aa5-a353-5ba3f40cd484",
          "publishedAt": "2025-09-23T23:52:16.059130004Z",
          "updatedAt": "2025-09-23T23:52:16.059130004Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.snapcall/mcp",
      "description": "MCP Server that generate video call url",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.snapcall.io"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "af1c837f-4f14-49e1-b318-961cca038cfe",
          "versionId": "8c64bc44-f66c-4690-8470-ef2301a8b625",
          "publishedAt": "2025-09-18T08:16:15.414359799Z",
          "updatedAt": "2025-09-18T08:16:15.414359799Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.fliptheweb/yazio-mcp",
      "description": "MCP server for accessing Yazio user & nutrition data (unofficial)",
      "status": "active",
      "repository": {
        "url": "https://github.com/fliptheweb/yazio-mcp",
        "source": "github"
      },
      "version": "0.0.2",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "yazio-mcp",
          "version": "0.0.2",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Yazio Username",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "YAZIO_USERNAME"
            },
            {
              "description": "Yazio Password",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "YAZIO_PASSWORD"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "b28d33da-8510-4a00-aae3-a5ca0d22f9da",
          "versionId": "8c69258e-06c8-4ab1-bbc3-3690071354ed",
          "publishedAt": "2025-09-25T20:50:24.594330968Z",
          "updatedAt": "2025-09-25T21:36:08.072469665Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/DynamicEndpoints-autogen_mcp",
      "description": "Create and manage AI agents that collaborate and solve problems through natural language interacti…",
      "status": "active",
      "repository": {
        "url": "https://github.com/DynamicEndpoints/Autogen_MCP",
        "source": "github"
      },
      "version": "0.3.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@DynamicEndpoints/autogen_mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "7250756b-9312-48f8-a2e2-b92f7b6268c7",
          "versionId": "8d07348b-fc98-4ddd-8fa3-31502600c39c",
          "publishedAt": "2025-09-11T13:57:38.185529674Z",
          "updatedAt": "2025-09-11T13:57:38.185529674Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.savhascelik/meta-api-mcp-server",
      "description": "A configuration-driven Meta API Gateway server for the Model Context Protocol (MCP).",
      "status": "active",
      "repository": {
        "url": "https://github.com/savhascelik/meta-api-mcp-server",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "meta-api-mcp-server",
          "version": "1.0.4",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "If the api you are connecting to requires api_key, you can use this variable and you can also define different variables",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "YOUR_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "0c6c810c-c7b3-48ce-b343-dce410026b01",
          "versionId": "8d2ec6b3-7e55-40b9-8d76-7e45f5063e29",
          "publishedAt": "2025-09-09T04:02:19.493255754Z",
          "updatedAt": "2025-09-09T04:14:51.989316259Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.GLips/Figma-Context-MCP",
      "description": "Give your coding agent access to your Figma data. Implement designs in any framework in one-shot.",
      "status": "active",
      "repository": {
        "url": "https://github.com/GLips/Figma-Context-MCP",
        "source": "github"
      },
      "version": "0.6.0",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "figma-developer-mcp",
          "version": "0.6.0",
          "transport": {
            "type": "stdio"
          },
          "packageArguments": [
            {
              "value": "--stdio",
              "type": "positional"
            }
          ],
          "environmentVariables": [
            {
              "description": "Your Figma Personal Access Token, learn more here: https://www.figma.com/developers/api#access-tokens",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "FIGMA_API_KEY"
            },
            {
              "description": "Start the server in stdio mode, keep as CLI",
              "default": "cli",
              "name": "NODE_ENV"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "fa424c9b-7b21-4ea7-a75b-4ef0bbb6aad5",
          "versionId": "8e307ce2-4847-4aa9-952f-22017f14f7ef",
          "publishedAt": "2025-09-09T16:40:36.136529165Z",
          "updatedAt": "2025-09-09T16:40:36.136529165Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.b1ff/atlassian-dc-mcp-bitbucket",
      "description": "MCP server for Atlassian Bitbucket Data Center - interact with repositories and code",
      "status": "active",
      "repository": {
        "url": "https://github.com/b1ff/atlassian-dc-mcp",
        "source": "github"
      },
      "version": "0.9.8",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@atlassian-dc-mcp/bitbucket",
          "version": "0.9.8",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Bitbucket host domain (e.g. your-instance.atlassian.net)",
              "format": "string",
              "name": "BITBUCKET_HOST"
            },
            {
              "description": "Bitbucket API base path (alternative to BITBUCKET_HOST)",
              "format": "string",
              "name": "BITBUCKET_API_BASE_PATH"
            },
            {
              "description": "Bitbucket Personal Access Token or API token",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "BITBUCKET_API_TOKEN"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "632bfe48-4b52-4ef4-a266-c82075a80f1a",
          "versionId": "8f91d610-22eb-4116-9fb7-413af6d27c0a",
          "publishedAt": "2025-09-13T13:18:51.361262856Z",
          "updatedAt": "2025-09-13T13:29:18.892466109Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.CDataSoftware/connectcloud-mcp-server",
      "description": "MCP Server for CData Connect AI - Query, manage, and act on data from 300+ enterprise sources",
      "repository": {
        "url": "https://github.com/CDataSoftware/connectcloud-mcp-server",
        "source": "github"
      },
      "version": "",
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "fcf39163-658e-4f17-8026-fdf45d4fef88",
          "versionId": "8fba90af-050e-47dc-bbf4-c1bc36c1a097",
          "publishedAt": "2025-09-18T15:39:53.512065948Z",
          "updatedAt": "2025-09-18T15:39:53.512065948Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.shawndurrani/mcp-registry",
      "description": "Search the public MCP Registry; discover servers and copy SSE URLs.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.1.0",
      "remotes": [
        {
          "type": "sse",
          "url": "https://mcp-registry.shawndurrani.ai/sse"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "195ea7e4-8fce-4575-b2c1-8b266ba67149",
          "versionId": "8fc6704f-44b1-4c4b-9046-40bf54316419",
          "publishedAt": "2025-09-15T03:11:16.637453593Z",
          "updatedAt": "2025-09-15T04:01:11.068068105Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/Kryptoskatt-mcp-server",
      "description": "Enable AI assistants to interact seamlessly with the DefiLlama API by translating MCP tool calls i…",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@Kryptoskatt/mcp-server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "99e3a9ea-0f34-4ae6-acfc-0fb3e821b058",
          "versionId": "902233d1-24e6-48d2-8461-d652edecdd2d",
          "publishedAt": "2025-09-17T10:41:17.40297863Z",
          "updatedAt": "2025-09-17T10:41:17.40297863Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.pulsemcp.servers/pulse-fetch",
      "description": "MCP server that extracts clean, structured content from web pages with anti-bot bypass capabilities.",
      "status": "active",
      "repository": {
        "url": "https://github.com/pulsemcp/mcp-servers",
        "source": "github",
        "subfolder": "productionized/pulse-fetch"
      },
      "version": "0.2.14",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@pulsemcp/pulse-fetch",
          "version": "0.2.14",
          "runtimeHint": "npx",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "API key for Firecrawl service to bypass anti-bot measures",
              "isSecret": true,
              "name": "FIRECRAWL_API_KEY"
            },
            {
              "description": "Bearer token for BrightData Web Unlocker service",
              "isSecret": true,
              "name": "BRIGHTDATA_API_KEY"
            },
            {
              "description": "Path to markdown file containing scraping strategy configuration",
              "default": "/tmp/pulse-fetch/strategy.md",
              "name": "STRATEGY_CONFIG_PATH"
            },
            {
              "description": "Optimization strategy for scraping: cost or speed",
              "default": "cost",
              "choices": [
                "cost",
                "speed"
              ],
              "name": "OPTIMIZE_FOR"
            },
            {
              "description": "Storage backend for saved resources: memory or filesystem",
              "default": "memory",
              "choices": [
                "memory",
                "filesystem"
              ],
              "name": "MCP_RESOURCE_STORAGE"
            },
            {
              "description": "Directory for filesystem storage (only used with filesystem type)",
              "default": "/tmp/pulse-fetch/resources",
              "name": "MCP_RESOURCE_FILESYSTEM_ROOT"
            },
            {
              "description": "Skip API authentication health checks at startup",
              "format": "boolean",
              "default": "false",
              "name": "SKIP_HEALTH_CHECKS"
            },
            {
              "description": "LLM provider for extract feature: anthropic, openai, openai-compatible",
              "choices": [
                "anthropic",
                "openai",
                "openai-compatible"
              ],
              "name": "LLM_PROVIDER"
            },
            {
              "description": "API key for the chosen LLM provider",
              "isSecret": true,
              "name": "LLM_API_KEY"
            },
            {
              "description": "Base URL for OpenAI-compatible providers",
              "name": "LLM_API_BASE_URL"
            },
            {
              "description": "Specific model to use for extraction",
              "name": "LLM_MODEL"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "5274418d-6904-4543-a020-17a61466fd2a",
          "versionId": "91091a5c-39bf-499b-a706-7036631faff1",
          "publishedAt": "2025-09-09T00:19:19.119117909Z",
          "updatedAt": "2025-09-09T00:19:19.119117909Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/oxylabs-oxylabs-mcp",
      "description": "Fetch and process content from specified URLs using the Oxylabs Web Scraper API.",
      "status": "active",
      "repository": {
        "url": "https://github.com/oxylabs/oxylabs-mcp",
        "source": "github"
      },
      "version": "1.13.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@oxylabs/oxylabs-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "77090d04-1343-4096-97ae-a740eca48fcb",
          "versionId": "91636355-fc26-4f99-8fbf-fc8338772807",
          "publishedAt": "2025-09-18T14:22:20.35374233Z",
          "updatedAt": "2025-09-18T14:22:20.35374233Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.yuna0x0/hackmd-mcp",
      "description": "A Model Context Protocol server for integrating HackMD's note-taking platform with AI assistants.",
      "status": "active",
      "repository": {
        "url": "https://github.com/yuna0x0/hackmd-mcp",
        "source": "github"
      },
      "version": "1.5.3",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "hackmd-mcp",
          "version": "1.5.3",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your HackMD API token for API authentication",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "HACKMD_API_TOKEN"
            },
            {
              "description": "Optional HackMD API URL, defaults to https://api.hackmd.io/v1",
              "format": "string",
              "default": "https://api.hackmd.io/v1",
              "name": "HACKMD_API_URL"
            }
          ]
        },
        {
          "registryType": "oci",
          "registryBaseUrl": "https://ghcr.io",
          "identifier": "yuna0x0/hackmd-mcp",
          "version": "1.5.3",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your HackMD API token for API authentication",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "HACKMD_API_TOKEN"
            },
            {
              "description": "Optional HackMD API URL, defaults to https://api.hackmd.io/v1",
              "format": "string",
              "default": "https://api.hackmd.io/v1",
              "name": "HACKMD_API_URL"
            }
          ]
        },
        {
          "registryType": "mcpb",
          "identifier": "https://github.com/yuna0x0/hackmd-mcp/releases/download/v1.5.3/hackmd-mcp-1.5.3.mcpb",
          "version": "1.5.3",
          "fileSha256": "9b216bf4c286ccc1b70f411f0b23777efbae0ab7239b8c99170cfac3b706721a",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your HackMD API token for API authentication",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "HACKMD_API_TOKEN"
            },
            {
              "description": "Optional HackMD API URL, defaults to https://api.hackmd.io/v1",
              "format": "string",
              "default": "https://api.hackmd.io/v1",
              "name": "HACKMD_API_URL"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "e679729a-74ca-4b31-a7f5-80cddd5fa24d",
          "versionId": "9177642c-c417-48d0-bc66-572481f31b84",
          "publishedAt": "2025-09-29T12:42:14.506623399Z",
          "updatedAt": "2025-09-29T12:42:14.506623399Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.kevincogan/demo-mcp-server",
      "description": "Demo server entry for local testing",
      "status": "active",
      "repository": {
        "url": "https://github.com/kevincogan/demo-mcp-server",
        "source": "github"
      },
      "version": "1.0.4",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://kevincogan.github.io/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "78162e28-0738-46be-b2ef-b1c6469a1616",
          "versionId": "91c1fc9a-833b-4186-84f1-49b79c23f0c2",
          "publishedAt": "2025-09-22T11:43:15.242712891Z",
          "updatedAt": "2025-09-22T11:43:15.242712891Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.jkawamoto/mcp-youtube-transcript",
      "description": "An MCP server retrieving transcripts of YouTube videos",
      "status": "active",
      "repository": {
        "url": "https://github.com/jkawamoto/mcp-youtube-transcript",
        "source": "github"
      },
      "version": "0.5.0",
      "packages": [
        {
          "registryType": "mcpb",
          "identifier": "https://github.com/jkawamoto/mcp-youtube-transcript/releases/download/v0.5.0/mcp-youtube-transcript.mcpb",
          "version": "0.5.0",
          "fileSha256": "d44842be1e8029c9eaa4412668d06825d668b4eeb645a70386b1c98ab9de49ec",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "3ea19f39-944b-44bd-8cc7-dfb2f5150768",
          "versionId": "91ce777a-4be7-4d0a-a084-ed4c5419e97d",
          "publishedAt": "2025-09-17T07:27:14.970033687Z",
          "updatedAt": "2025-09-17T08:10:03.905251986Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.yuna0x0/anilist-mcp",
      "description": "AniList MCP server for accessing AniList API data",
      "status": "active",
      "repository": {
        "url": "https://github.com/yuna0x0/anilist-mcp",
        "source": "github"
      },
      "version": "1.3.6",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "anilist-mcp",
          "version": "1.3.6",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "AniList API token for authenticated requests",
              "format": "string",
              "isSecret": true,
              "name": "ANILIST_TOKEN"
            }
          ]
        },
        {
          "registryType": "oci",
          "registryBaseUrl": "https://ghcr.io",
          "identifier": "yuna0x0/anilist-mcp",
          "version": "1.3.6",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "AniList API token for authenticated requests",
              "format": "string",
              "isSecret": true,
              "name": "ANILIST_TOKEN"
            }
          ]
        },
        {
          "registryType": "mcpb",
          "identifier": "https://github.com/yuna0x0/anilist-mcp/releases/download/v1.3.6/anilist-mcp-1.3.6.mcpb",
          "version": "1.3.6",
          "fileSha256": "76579d74b1f94df9b6203d3a6a11385f22555f0f695dc109c1c6512a7e0c79ff",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "AniList API token for authenticated requests",
              "format": "string",
              "isSecret": true,
              "name": "ANILIST_TOKEN"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "6bdae0fa-dff2-4ae3-82f9-03710c1ffb86",
          "versionId": "91e07fb1-8ea2-40fb-bea5-fec5ca102793",
          "publishedAt": "2025-09-22T00:19:27.274230014Z",
          "updatedAt": "2025-09-29T12:44:11.443461956Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.agentailor/slimcontext-mcp-server",
      "description": "MCP Server for SlimContext - AI chat history compression tools",
      "status": "active",
      "repository": {
        "url": "https://github.com/agentailor/slimcontext-mcp-server",
        "source": "github"
      },
      "version": "0.1.2",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "slimcontext-mcp-server",
          "version": "0.1.2",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "e694708b-fee1-4070-b8cd-e008bcc5bd3e",
          "versionId": "92f5d42d-76de-461d-bbc0-51316831f6a9",
          "publishedAt": "2025-09-16T07:56:23.181995741Z",
          "updatedAt": "2025-09-16T07:56:23.181995741Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/BigVik193-reddit-ads-mcp-api",
      "description": "Manage Reddit advertising end to end across accounts, funding methods, campaigns, ad groups, and a…",
      "status": "active",
      "repository": {
        "url": "https://github.com/BigVik193/reddit-ads-mcp-api",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@BigVik193/reddit-ads-mcp-api/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "5273d75a-196d-4940-a35f-22578fe839d5",
          "versionId": "92fb64f2-8006-4551-bb6d-ed2b87b65887",
          "publishedAt": "2025-09-14T22:40:30.852738154Z",
          "updatedAt": "2025-09-14T22:40:30.852738154Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/serkan-ozal-driflyte-mcp-server",
      "description": "Discover available topics and explore up-to-date, topic-tagged web content. Search to surface the…",
      "status": "active",
      "repository": {
        "url": "https://github.com/serkan-ozal/driflyte-mcp-server",
        "source": "github"
      },
      "version": "0.0.19",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@serkan-ozal/driflyte-mcp-server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "43b05fba-bf32-46a1-aa25-56b98e372ba4",
          "versionId": "93017748-959b-4b83-a1f4-55ef8109cbfd",
          "publishedAt": "2025-09-20T16:15:36.753964835Z",
          "updatedAt": "2025-09-21T10:34:38.236822672Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.schemacrawler/schemacrawler-ai",
      "description": "Enables natural language schema queries — explore tables, keys, procedures, and get SQL help fast",
      "status": "active",
      "repository": {
        "url": "https://github.com/schemacrawler/SchemaCrawler-AI",
        "source": "github"
      },
      "version": "v16.28.3-1",
      "websiteUrl": "https://schemacrawler.github.io",
      "packages": [
        {
          "registryType": "oci",
          "registryBaseUrl": "https://docker.io",
          "identifier": "schemacrawler/schemacrawler-ai",
          "version": "v16.28.3-1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Database user name. Can be optional depending on the database connection type.",
              "format": "string",
              "isSecret": true,
              "name": "SCHCRWLR_DATABASE_USER"
            },
            {
              "description": "Database user password. Can be optional depending on the database connection type.",
              "format": "string",
              "isSecret": true,
              "name": "SCHCRWLR_DATABASE_PASSWORD"
            },
            {
              "description": "JDBC URL for database connection. If this is provided, the server, host, port and database are not used.",
              "format": "string",
              "name": "SCHCRWLR_JDBC_URL"
            },
            {
              "description": "SchemaCrawler database plugin, for example, 'sqlserver' or 'sqlite'. Used only if the JDBC URL is not provided.",
              "format": "string",
              "name": "SCHCRWLR_SERVER"
            },
            {
              "description": "Database host. Defaults to localhost. Used only if the JDBC URL is not provided.",
              "format": "string",
              "name": "SCHCRWLR_HOST"
            },
            {
              "description": "Database port. Defaults to the default port for the server type. Used only if the JDBC URL is not provided.",
              "format": "string",
              "name": "SCHCRWLR_PORT"
            },
            {
              "description": "Database to connect to (optional). Used only if the JDBC URL is not provided.",
              "format": "string",
              "name": "SCHCRWLR_DATABASE"
            },
            {
              "description": "How much database metadata to retrieve. Values are 'minimum', 'standard', 'detailed' or 'maximum'.",
              "format": "string",
              "name": "SCHCRWLR_INFO_LEVEL"
            },
            {
              "description": "Logging verbosity level. Values are 'SEVERE', 'WARNING', 'INFO', 'CONFIG', or 'FINE'.",
              "format": "string",
              "name": "SCHCRWLR_LOG_LEVEL"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "3616e073-7a15-42cb-ae02-4c6d64c92905",
          "versionId": "93a0b961-f6da-4c32-a8e9-cf2696f57499",
          "publishedAt": "2025-09-27T01:18:14.973084431Z",
          "updatedAt": "2025-09-27T01:18:14.973084431Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/arjunkmrm-clock",
      "description": "Check the current time instantly and explore world timezones by region. Browse available continent…",
      "status": "active",
      "repository": {
        "url": "https://github.com/arjunkmrm/clock",
        "source": "github"
      },
      "version": "1.14.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@arjunkmrm/clock/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "1aa7d4bd-c3f4-41ed-9304-87fb9cf2f637",
          "versionId": "93b96420-d875-418a-a49c-e909ef61dd03",
          "publishedAt": "2025-09-19T08:00:25.675646118Z",
          "updatedAt": "2025-09-19T08:00:25.675646118Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.cyanheads/mcp-ts-template",
      "description": "A production-grade TypeScript template for scalable MCP servers with built-in observability.",
      "status": "active",
      "repository": {
        "url": "https://github.com/cyanheads/mcp-ts-template",
        "source": "github"
      },
      "version": "2.0.3",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mcp-ts-template",
          "version": "2.0.2",
          "runtimeHint": "bun",
          "transport": {
            "type": "stdio"
          },
          "packageArguments": [
            {
              "value": "run",
              "type": "positional"
            },
            {
              "value": "start:stdio",
              "type": "positional"
            }
          ],
          "environmentVariables": [
            {
              "description": "Sets the minimum log level for output (e.g., 'debug', 'info', 'warn').",
              "format": "string",
              "default": "info",
              "name": "MCP_LOG_LEVEL"
            }
          ]
        },
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mcp-ts-template",
          "version": "2.0.2",
          "runtimeHint": "bun",
          "transport": {
            "type": "streamable-http",
            "url": "http://localhost:3010/mcp"
          },
          "packageArguments": [
            {
              "value": "run",
              "type": "positional"
            },
            {
              "value": "start:http",
              "type": "positional"
            }
          ],
          "environmentVariables": [
            {
              "description": "The port to run the HTTP server on.",
              "format": "string",
              "default": "3010",
              "name": "MCP_HTTP_PORT"
            },
            {
              "description": "Authentication mode to use: 'none', 'jwt', or 'oauth'.",
              "format": "string",
              "default": "none",
              "name": "MCP_AUTH_MODE"
            },
            {
              "description": "Sets the minimum log level for output (e.g., 'debug', 'info', 'warn').",
              "format": "string",
              "default": "info",
              "name": "MCP_LOG_LEVEL"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "b1a7bd6b-21e2-4cd8-8531-37dddc5fa3f4",
          "versionId": "93bdbdfb-3c54-4757-bebf-3a0041945d68",
          "publishedAt": "2025-09-15T13:43:27.494335026Z",
          "updatedAt": "2025-09-26T00:34:47.321289042Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.yuna0x0/hackmd-mcp",
      "description": "A Model Context Protocol server for integrating HackMD's note-taking platform with AI assistants.",
      "status": "active",
      "repository": {
        "url": "https://github.com/yuna0x0/hackmd-mcp",
        "source": "github"
      },
      "version": "1.4.2",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "hackmd-mcp",
          "version": "1.4.2",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your HackMD API token for API authentication",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "HACKMD_API_TOKEN"
            },
            {
              "description": "Optional HackMD API URL, defaults to https://api.hackmd.io/v1",
              "format": "string",
              "default": "https://api.hackmd.io/v1",
              "name": "HACKMD_API_URL"
            }
          ]
        },
        {
          "registryType": "oci",
          "registryBaseUrl": "https://docker.io",
          "identifier": "yuna0x0/hackmd-mcp",
          "version": "1.4.2",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your HackMD API token for API authentication",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "HACKMD_API_TOKEN"
            },
            {
              "description": "Optional HackMD API URL, defaults to https://api.hackmd.io/v1",
              "format": "string",
              "default": "https://api.hackmd.io/v1",
              "name": "HACKMD_API_URL"
            }
          ]
        },
        {
          "registryType": "mcpb",
          "identifier": "https://github.com/yuna0x0/hackmd-mcp/releases/download/v1.4.2/hackmd-mcp-1.4.2.mcpb",
          "version": "1.4.2",
          "fileSha256": "7b6ee105271d8595e3e5a0a3e4f9075ab3a2b7b373f529f4c3e99d1f93dead62",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your HackMD API token for API authentication",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "HACKMD_API_TOKEN"
            },
            {
              "description": "Optional HackMD API URL, defaults to https://api.hackmd.io/v1",
              "format": "string",
              "default": "https://api.hackmd.io/v1",
              "name": "HACKMD_API_URL"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "e679729a-74ca-4b31-a7f5-80cddd5fa24d",
          "versionId": "93c43441-0cd8-4fad-b46d-28887997e1d2",
          "publishedAt": "2025-09-13T08:20:45.650204026Z",
          "updatedAt": "2025-09-15T03:10:53.114708285Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/anirbanbasu-frankfurtermcp",
      "description": "A MCP server for the Frankfurter API for currency exchange rates.",
      "status": "active",
      "repository": {
        "url": "https://github.com/anirbanbasu/frankfurtermcp",
        "source": "github"
      },
      "version": "1.13.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@anirbanbasu/frankfurtermcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "c829bfef-fcc0-422c-a69a-33395f38cf93",
          "versionId": "93cec244-60e4-4522-979f-3483889ee476",
          "publishedAt": "2025-09-19T14:04:07.846044351Z",
          "updatedAt": "2025-09-29T11:56:36.099614464Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.driflyte/driflyte-mcp-server",
      "description": "Driflyte MCP server which lets AI assistants query topic-specific knowledge from web and GitHub.",
      "status": "active",
      "repository": {
        "url": "https://github.com/serkan-ozal/driflyte-mcp-server",
        "source": "github"
      },
      "version": "0.1.12",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@driflyte/mcp-server",
          "version": "0.1.12",
          "runtimeHint": "npx",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.driflyte.com/mcp"
        },
        {
          "type": "streamable-http",
          "url": "https://mcp.driflyte.com/openai"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "e4bf9279-bd3f-43d4-8c82-8b26d237876b",
          "versionId": "9425d64c-337a-41d5-9640-4d36c36de0f9",
          "publishedAt": "2025-09-29T14:59:11.600467705Z",
          "updatedAt": "2025-09-29T15:04:42.41897798Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.waystation/office",
      "description": "Create, edit, and collaborate on Office documents and spreadsheets.",
      "status": "active",
      "repository": {
        "url": "https://github.com/waystation-ai/mcp",
        "source": "github"
      },
      "version": "0.3.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://waystation.ai/office/mcp"
        },
        {
          "type": "sse",
          "url": "https://waystation.ai/office/mcp/sse"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "96e1826b-4ed0-4c59-8002-4edbce687046",
          "versionId": "94689419-d526-4008-b0df-d79635930fa1",
          "publishedAt": "2025-09-09T14:32:54.33420243Z",
          "updatedAt": "2025-09-09T14:32:54.33420243Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.Nekzus/npm-sentinel-mcp",
      "description": "NPM Sentinel MCP - AI-powered NPM package analysis for security, dependencies, and performance.",
      "status": "active",
      "repository": {
        "url": "https://github.com/Nekzus/npm-sentinel-mcp",
        "source": "github"
      },
      "version": "1.11.6",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@nekzus/mcp-server",
          "version": "1.11.6",
          "runtimeHint": "npx",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "364d771b-c515-4071-805d-75513fa308ce",
          "versionId": "948753e9-a047-4ef0-ae1b-050c98519b85",
          "publishedAt": "2025-09-20T23:05:10.121079979Z",
          "updatedAt": "2025-09-20T23:15:02.127730589Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.b1ff/atlassian-dc-mcp-jira",
      "description": "MCP server for Atlassian Jira Data Center - search, view, and create issues",
      "status": "active",
      "repository": {
        "url": "https://github.com/b1ff/atlassian-dc-mcp",
        "source": "github"
      },
      "version": "0.9.0",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@atlassian-dc-mcp/jira",
          "version": "0.9.0",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Jira host domain (e.g. your-instance.atlassian.net)",
              "format": "string",
              "name": "JIRA_HOST"
            },
            {
              "description": "Jira API base path (alternative to JIRA_HOST)",
              "format": "string",
              "name": "JIRA_API_BASE_PATH"
            },
            {
              "description": "Jira Personal Access Token or API token",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "JIRA_API_TOKEN"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "775c0931-3153-4181-bada-77b597b58221",
          "versionId": "94c0be03-60cf-45e3-9f6e-db4ad643f243",
          "publishedAt": "2025-09-13T11:40:51.735988794Z",
          "updatedAt": "2025-09-13T13:17:32.83365354Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.himorishige/hatago-mcp-hub",
      "description": "Unified MCP Hub for managing multiple Model Context Protocol servers",
      "status": "active",
      "repository": {
        "url": "https://github.com/himorishige/hatago-mcp-hub",
        "source": "github"
      },
      "version": "0.0.13",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@himorishige/hatago-mcp-hub",
          "version": "0.0.13",
          "runtimeHint": "npx",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "27980499-f44a-453a-8b3c-6450b5c0947b",
          "versionId": "94cfdee1-6a62-4d40-8bf4-dab7646d4548",
          "publishedAt": "2025-09-13T14:40:04.386322089Z",
          "updatedAt": "2025-09-14T07:53:18.719599831Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.priyankark/lighthouse-mcp",
      "description": "MCP server for Google Lighthouse performance metrics",
      "status": "active",
      "repository": {
        "url": "https://github.com/priyankark/lighthouse-mcp",
        "source": "github"
      },
      "version": "0.1.9",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "lighthouse-mcp",
          "version": "0.1.9",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "00115c3f-4478-431b-9752-a6438a66cadc",
          "versionId": "94d6b736-48d0-46f1-909f-9ce1dd82851e",
          "publishedAt": "2025-09-09T10:02:57.086660409Z",
          "updatedAt": "2025-09-09T10:02:57.086660409Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.jkakar/recipe-mcp",
      "description": "Generate and remix recipes using cookwith.co",
      "status": "active",
      "repository": {
        "url": "https://github.com/blaideinc/recipe-mcp",
        "source": "github"
      },
      "version": "1.0.3",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@cookwith/recipe-mcp",
          "version": "1.0.3",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "c3b3c3c7-4e0d-4529-bc19-85c18239baf4",
          "versionId": "94e6cd5b-6def-4054-bf2d-91c8c31205a5",
          "publishedAt": "2025-09-11T18:30:58.5302013Z",
          "updatedAt": "2025-09-11T18:33:51.807883948Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/airmang-hwpx-mcp",
      "description": "자동화하여 HWPX 문서의 로딩, 탐색, 편집, 검증을 한 번에 처리합니다. 문단·표·주석 추가, 텍스트 일괄 치환, 머리말·꼬리말 설정 등 반복 작업을 신속히 수행합니다. 기…",
      "status": "active",
      "repository": {
        "url": "https://github.com/airmang/hwpx-mcp",
        "source": "github"
      },
      "version": "1.14.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@airmang/hwpx-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "56691578-8bf7-43f5-a69e-b89ada4f687a",
          "versionId": "950bc7a1-ad16-45d1-b41e-14d41a6d4e55",
          "publishedAt": "2025-09-18T07:51:38.712980993Z",
          "updatedAt": "2025-09-18T07:51:38.712980993Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "md.install/try",
      "description": "Create guides to instruct coding agents to use your software (SDK, library, framework, API, etc).",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.1.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://install.md/mcp/try"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "ecdd3eae-3d64-477d-acb8-26f1e523ab54",
          "versionId": "95109f0a-8fb4-45ef-93d1-8c38874c2be7",
          "publishedAt": "2025-09-09T07:04:48.602631925Z",
          "updatedAt": "2025-09-09T07:10:11.210375884Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.Antonytm/mcp-all",
      "description": "A Model Context Protocol server to run other MCP servers",
      "status": "active",
      "repository": {
        "url": "https://github.com/Antonytm/mcp-all",
        "source": "github"
      },
      "version": "0.1.17",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@antonytm/mcp-all",
          "version": "0.1.17",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "name": "TRANSPORT"
            }
          ]
        },
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@antonytm/mcp-all",
          "version": "0.1.17",
          "transport": {
            "type": "streamable-http",
            "url": "http://localhost:3001/mcp"
          },
          "environmentVariables": [
            {
              "name": "TRANSPORT"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "f88dbaa2-7e10-4957-a53b-7ed8b511d77c",
          "versionId": "95739328-9298-4a7e-9f72-629c1ab7180f",
          "publishedAt": "2025-09-28T14:22:22.424885172Z",
          "updatedAt": "2025-09-28T15:27:54.814083034Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.p1va/symbols",
      "description": "MCP server to read, inspect and troubleshoot codebase symbols",
      "status": "active",
      "repository": {
        "url": "https://github.com/p1va/symbols",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@p1va/symbols",
          "version": "0.0.10",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "d827a965-33bc-4262-87df-98ca6eac9a12",
          "versionId": "95837ebe-5fcd-4692-8020-5920d760d47c",
          "publishedAt": "2025-09-12T16:29:27.100278154Z",
          "updatedAt": "2025-09-12T16:29:27.100278154Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.onkernel/kernel-mcp-server",
      "description": "Access Kernel's cloud-based browsers and app actions via MCP (remote HTTP + OAuth).",
      "status": "active",
      "repository": {
        "url": "https://github.com/onkernel/kernel-mcp-server",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.onkernel.com/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "8ca49743-b469-46be-a7ca-df1d3cf14d94",
          "versionId": "95fc358c-7c94-4f0f-ad50-e7e516940dba",
          "publishedAt": "2025-09-09T18:04:37.61770657Z",
          "updatedAt": "2025-09-09T18:04:37.61770657Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.ruvnet/claude-flow",
      "description": "AI orchestration with hive-mind swarms, neural networks, and 87 MCP tools for enterprise dev.",
      "status": "active",
      "repository": {
        "url": "https://github.com/ruvnet/claude-flow",
        "source": "github"
      },
      "version": "2.0.0-alpha.106",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "claude-flow",
          "version": "2.0.0-alpha.106",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Anthropic API key for Claude AI models",
              "format": "string",
              "isSecret": true,
              "name": "ANTHROPIC_API_KEY"
            },
            {
              "description": "Operation mode: development, production, or test",
              "format": "string",
              "name": "CLAUDE_FLOW_MODE"
            },
            {
              "description": "Path for persistent memory storage",
              "format": "string",
              "name": "CLAUDE_FLOW_MEMORY_PATH"
            },
            {
              "description": "Maximum number of concurrent agents",
              "format": "string",
              "name": "CLAUDE_FLOW_MAX_AGENTS"
            },
            {
              "description": "MCP server port",
              "format": "string",
              "name": "CLAUDE_FLOW_PORT"
            },
            {
              "description": "GitHub personal access token for repository operations",
              "format": "string",
              "isSecret": true,
              "name": "GITHUB_TOKEN"
            },
            {
              "description": "Flow Nexus cloud platform API key",
              "format": "string",
              "isSecret": true,
              "name": "FLOW_NEXUS_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "8362811b-c6cc-401d-92d9-6288295e9104",
          "versionId": "9623b70e-af1d-48ac-8338-e37ef96ca8cf",
          "publishedAt": "2025-09-10T16:55:33.070739114Z",
          "updatedAt": "2025-09-10T16:59:34.223138386Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.shawndurrani/mcp-registry",
      "description": "Search the public MCP Registry; discover servers and copy SSE URLs.",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.1.3",
      "remotes": [
        {
          "type": "sse",
          "url": "https://mcp-registry.shawndurrani.ai/sse"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "195ea7e4-8fce-4575-b2c1-8b266ba67149",
          "versionId": "967249f6-33c1-430d-a5b2-a1064337384d",
          "publishedAt": "2025-09-16T23:02:09.73866209Z",
          "updatedAt": "2025-09-16T23:02:09.73866209Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.leshchenko1979/fast-mcp-telegram",
      "description": "Telegram MCP server with search and messaging capabilities",
      "status": "active",
      "repository": {
        "url": "https://github.com/leshchenko1979/fast-mcp-telegram",
        "source": "github"
      },
      "version": "0.5.0",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "fast-mcp-telegram",
          "version": "0.5.0",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Telegram API ID (from https://my.telegram.org/apps)",
              "isRequired": true,
              "name": "API_ID"
            },
            {
              "description": "Telegram API Hash (from https://my.telegram.org/apps)",
              "isRequired": true,
              "isSecret": true,
              "name": "API_HASH"
            },
            {
              "description": "Server mode: stdio (local), http-no-auth (dev), http-auth (prod)",
              "default": "stdio",
              "choices": [
                "stdio",
                "http-no-auth",
                "http-auth"
              ],
              "name": "SERVER_MODE"
            },
            {
              "description": "Custom session directory (defaults to ~/.config/fast-mcp-telegram/)",
              "name": "SESSION_DIR"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "a1a4d761-5635-480b-b636-4b6fef3c9a77",
          "versionId": "96a8497f-6246-4326-9394-a28ff6908fe2",
          "publishedAt": "2025-09-17T14:08:48.770808907Z",
          "updatedAt": "2025-09-17T14:08:48.770808907Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.shinpr/mcp-image",
      "description": "AI image generation MCP server using Nano Banana with intelligent prompt enhancement",
      "status": "active",
      "repository": {
        "url": "https://github.com/shinpr/mcp-image",
        "source": "github"
      },
      "version": "0.2.3",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mcp-image",
          "version": "0.2.3",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Google Gemini API key for image generation (get from https://aistudio.google.com/apikey)",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "GEMINI_API_KEY"
            },
            {
              "description": "Absolute path to directory where generated images will be saved (defaults to ./output)",
              "format": "string",
              "name": "IMAGE_OUTPUT_DIR"
            },
            {
              "description": "Set to 'true' to disable automatic prompt optimization and use direct prompts",
              "format": "boolean",
              "name": "SKIP_PROMPT_ENHANCEMENT"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "eb6f1af1-5834-412c-8d10-75dc6edfc6f9",
          "versionId": "96cb8c0c-c096-4fa3-bc84-2e34a14f4f81",
          "publishedAt": "2025-09-12T00:28:17.174731889Z",
          "updatedAt": "2025-09-12T00:28:17.174731889Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.bytedance/mcp-server-commands",
      "description": "An MCP server to run arbitrary commands",
      "status": "active",
      "repository": {
        "url": "https://github.com/bytedance/UI-TARS-desktop",
        "source": "github",
        "subfolder": "packages/agent-infra/mcp-servers/commands"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@agent-infra/mcp-server-commands",
          "version": "latest",
          "transport": {
            "type": "stdio"
          },
          "packageArguments": [
            {
              "description": "current working directory",
              "format": "string",
              "type": "named",
              "name": "cwd"
            }
          ]
        },
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@agent-infra/mcp-server-commands",
          "version": "latest",
          "runtimeHint": "npx",
          "transport": {
            "type": "sse",
            "url": "http://127.0.0.1:{port}/sse"
          },
          "packageArguments": [
            {
              "description": "current working directory",
              "format": "string",
              "type": "named",
              "name": "cwd"
            },
            {
              "description": "Server port number",
              "isRequired": true,
              "format": "number",
              "default": "8089",
              "type": "named",
              "name": "port"
            }
          ]
        },
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@agent-infra/mcp-server-commands",
          "version": "latest",
          "runtimeHint": "npx",
          "transport": {
            "type": "streamable-http",
            "url": "http://127.0.0.1:{port}/mcp"
          },
          "runtimeArguments": [
            {
              "description": "current working directory",
              "format": "string",
              "type": "named",
              "name": "cwd"
            }
          ],
          "packageArguments": [
            {
              "description": "Server port number",
              "isRequired": true,
              "format": "number",
              "default": "8089",
              "type": "named",
              "name": "port"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "8f14d34c-2dbb-4632-b0db-bc2a1d023ff4",
          "versionId": "97337d30-5e47-421e-9599-30487d21ea45",
          "publishedAt": "2025-09-09T06:16:30.41372415Z",
          "updatedAt": "2025-09-09T06:16:30.41372415Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.coupler/remote-mcp-server",
      "description": "Coupler.io remote MCP server",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.0.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.coupler.io/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "f9ff4498-b385-4c91-8f70-31cf4ab9fe1e",
          "versionId": "975e0708-c43d-42ba-a27f-6d69f7c8e91a",
          "publishedAt": "2025-09-10T16:12:03.417415684Z",
          "updatedAt": "2025-09-10T16:12:03.417415684Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.GoneTone/mcp-server-taiwan-weather",
      "description": "用於取得臺灣中央氣象署 API 資料的 Model Context Protocol (MCP) Server",
      "status": "active",
      "repository": {
        "url": "https://github.com/GoneTone/mcp-server-taiwan-weather",
        "source": "github"
      },
      "version": "0.1.4",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@gonetone/mcp-server-taiwan-weather",
          "version": "0.1.4",
          "runtimeHint": "npx",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "您的中央氣象署 API 授權碼。 請前往 https://opendata.cwa.gov.tw/user/authkey，登入後點擊 \"取得授權碼\" 取得。",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "CWA_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "318339bb-2899-4219-8445-202a05449ed6",
          "versionId": "97c78570-b874-4d3f-83bd-294e333964c0",
          "publishedAt": "2025-09-21T08:53:08.644520114Z",
          "updatedAt": "2025-09-21T08:53:08.644520114Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.pree-dew/mcp-bookmark",
      "description": "MCP Server for adding bookmarks in openai RAG",
      "status": "active",
      "repository": {
        "url": "https://github.com/pree-dew/mcp-bookmark",
        "source": "github"
      },
      "version": "0.1.4",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "mcp-bookmark-server",
          "version": "0.1.2",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "open ai api key",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "OPENAI_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "39628bbb-4f3d-4ff1-b12e-637f5d3d604e",
          "versionId": "981595d9-f949-460a-844e-bfc22620b45d",
          "publishedAt": "2025-09-29T06:22:41.372697874Z",
          "updatedAt": "2025-09-29T06:32:47.112388274Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/bergeramit-bergeramit-hw3-tech",
      "description": "Create friendly greetings and add two numbers instantly. Speed up simple tasks and streamline ligh…",
      "status": "active",
      "repository": {
        "url": "https://github.com/bergeramit/bergeramit-hw3-tech",
        "source": "github"
      },
      "version": "1.15.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@bergeramit/bergeramit-hw3-tech/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "1248bf90-342a-4070-93c2-1ec8eec289ff",
          "versionId": "981f3a96-e2c6-4594-a174-4787f0406080",
          "publishedAt": "2025-09-29T12:49:39.923484811Z",
          "updatedAt": "2025-09-29T12:49:39.923484811Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/jirispilka-actors-mcp-server",
      "description": "Greet anyone by name with friendly, personalized messages. Explore the origin of Hello, World thro…",
      "status": "active",
      "repository": {
        "url": "https://github.com/jirispilka/actors-mcp-server",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@jirispilka/actors-mcp-server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "eff88937-76bb-4470-bfe7-889b87e7afb3",
          "versionId": "983ebbb0-1365-44c9-9832-edafca128508",
          "publishedAt": "2025-09-11T11:59:13.452963424Z",
          "updatedAt": "2025-09-11T11:59:13.452963424Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.bytedance/mcp-server-filesystem",
      "description": "MCP server for filesystem access",
      "status": "active",
      "repository": {
        "url": "https://github.com/bytedance/UI-TARS-desktop",
        "source": "github",
        "subfolder": "packages/agent-infra/mcp-servers/filesystem"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@agent-infra/mcp-server-filesystem",
          "version": "latest",
          "transport": {
            "type": "stdio"
          },
          "packageArguments": [
            {
              "description": "Comma-separated list of allowed directories for file operations",
              "isRequired": true,
              "format": "string",
              "type": "named",
              "name": "allowed-directories"
            }
          ]
        },
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@agent-infra/mcp-server-filesystem",
          "version": "latest",
          "runtimeHint": "npx",
          "transport": {
            "type": "sse",
            "url": "http://127.0.0.1:{port}/sse"
          },
          "packageArguments": [
            {
              "description": "Comma-separated list of allowed directories for file operations",
              "isRequired": true,
              "format": "string",
              "type": "named",
              "name": "allowed-directories"
            },
            {
              "description": "Server port number",
              "isRequired": true,
              "format": "number",
              "default": "8089",
              "type": "named",
              "name": "port"
            }
          ]
        },
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@agent-infra/mcp-server-filesystem",
          "version": "latest",
          "runtimeHint": "npx",
          "transport": {
            "type": "streamable-http",
            "url": "http://127.0.0.1:{port}/mcp"
          },
          "packageArguments": [
            {
              "description": "Comma-separated list of allowed directories for file operations",
              "isRequired": true,
              "format": "string",
              "type": "named",
              "name": "allowed-directories"
            },
            {
              "description": "Server port number",
              "isRequired": true,
              "format": "number",
              "default": "8089",
              "type": "named",
              "name": "port"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "86863c74-2ae5-4430-8880-5474e7ae2155",
          "versionId": "987b074f-a2ca-493d-9830-7ccb0b5bd165",
          "publishedAt": "2025-09-09T06:16:36.369747535Z",
          "updatedAt": "2025-09-09T06:16:36.369747535Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/brave",
      "description": "Visit https://brave.com/search/api/ for a free API key. Search the web, local businesses, images,…",
      "status": "active",
      "repository": {
        "url": "https://github.com/brave/brave-search-mcp-server",
        "source": "github"
      },
      "version": "2.0.5",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/brave/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "72fbc728-2894-4a60-aaf5-44d616ddd249",
          "versionId": "98827eac-a780-4744-a305-08c275b06526",
          "publishedAt": "2025-09-19T09:33:46.341429779Z",
          "updatedAt": "2025-09-19T09:40:01.090665055Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.shalevshalit/image-recongnition-mcp",
      "description": "MCP server for AI-powered image recognition and description using OpenAI vision models.",
      "status": "active",
      "repository": {
        "url": "https://github.com/mcp-s-ai/image-recongnition-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "image-recongnition-mcp",
          "version": "1.0.4",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your OpenAI API key for image recognition and description services",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "OPENAI_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "6b4a29ed-11be-48b4-8266-d57669e90b25",
          "versionId": "98c4bba3-1c5d-4981-8ba5-6cda90f78c32",
          "publishedAt": "2025-09-10T15:01:36.626715571Z",
          "updatedAt": "2025-09-10T15:01:36.626715571Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.NitishGourishetty/contextual-mcp-server",
      "description": "RAG-enabled MCP server using Contextual AI. Supports single-agent and multi-agent modes.",
      "status": "active",
      "repository": {
        "url": "https://github.com/NitishGourishetty/contextual-mcp-server",
        "source": "github"
      },
      "version": "0.1.0",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "contextual-mcp-server",
          "version": "0.1.0",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your Contextual AI API key",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "API_KEY"
            },
            {
              "description": "Your Contextual AI agent ID (required only for single-agent mode; omit for multi-agent mode)",
              "format": "string",
              "name": "AGENT_ID"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "d405cf56-548e-419c-bad4-ccf8fdd90e52",
          "versionId": "98ca7143-bb86-4efd-a206-6d8e68c5ae3d",
          "publishedAt": "2025-09-18T06:42:30.878482398Z",
          "updatedAt": "2025-09-18T06:42:30.878482398Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.enigma/enigma-mcp-server",
      "description": "An MCP server that provides access to trusted data about business identity and activity",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.enigma.com/http"
        },
        {
          "type": "streamable-http",
          "url": "https://mcp.enigma.com/http-token",
          "headers": [
            {
              "description": "Bearer token of Enigma API key. Used to enable authentication without presenting the user with an oAuth login.",
              "isRequired": true,
              "isSecret": true,
              "name": "X-API-Key"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://mcp.enigma.com/sse"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "2a1822b0-c0d6-414c-9ee2-ea1851f35f28",
          "versionId": "98f794d9-0a3c-432d-a8d2-3c5cb80eae2d",
          "publishedAt": "2025-09-10T19:14:36.3625643Z",
          "updatedAt": "2025-09-10T19:14:36.3625643Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "dev.promplate/hmr",
      "description": "Docs for hot-module-reload and reactive programming for Python (`hmr` on PyPI)",
      "repository": {
        "url": "https://github.com/promplate/hmr",
        "source": "github"
      },
      "version": "1.0.2",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://pyth-on-line.promplate.dev/hmr/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "c3678b28-5338-4c5a-9d44-c005c700e9a6",
          "versionId": "9978940b-0d97-4ef5-a187-0d5cd56731fb",
          "publishedAt": "2025-09-17T21:13:12.376456949Z",
          "updatedAt": "2025-09-17T21:13:12.376456949Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "info.mosaique/mcp",
      "description": "Search and list latest international news (sources, comments, knowledge graph).",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.mosaique.info",
          "headers": [
            {
              "description": "API key for authentication",
              "isRequired": true,
              "isSecret": true,
              "name": "X-API-Key"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "3fc514ab-456b-4fbf-8a29-e9c37af00ad7",
          "versionId": "999c8e2e-e96b-460c-9e98-f90a7603145c",
          "publishedAt": "2025-09-10T18:15:03.198216658Z",
          "updatedAt": "2025-09-10T18:15:03.198216658Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/IlyaGusev-academia_mcp",
      "description": "Search arXiv and ACL Anthology, retrieve citations and references, and browse web sources to accel…",
      "status": "active",
      "repository": {
        "url": "https://github.com/IlyaGusev/academia_mcp",
        "source": "github"
      },
      "version": "1.14.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@IlyaGusev/academia_mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "d90a11a0-b7d5-4ce7-a2a0-9ff324c32d15",
          "versionId": "99be110f-d865-4733-88b2-97fc2f9750de",
          "publishedAt": "2025-09-16T12:14:42.162775887Z",
          "updatedAt": "2025-09-16T12:14:42.162775887Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.statsig/statsig-mcp-server",
      "description": "MCP server for Statsig API - interact with Statsig's feature flags, experiments, and analytics",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://api.statsig.com/v1/mcp",
          "headers": [
            {
              "description": "Statsig Console API key for authentication",
              "isRequired": true,
              "isSecret": true,
              "name": "statsig-api-key"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "2a588ed6-3191-4c57-b4b4-30922df35945",
          "versionId": "9a21fc6a-b1c6-4dcf-8030-8fad5ff3ca4c",
          "publishedAt": "2025-09-19T18:53:25.028837035Z",
          "updatedAt": "2025-09-19T18:53:25.028837035Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.clappia-dev/clappia-mcp",
      "description": "An MCP server that provides integration with Clappia platform",
      "status": "active",
      "repository": {
        "url": "https://github.com/clappia-dev/clappia-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "oci",
          "registryBaseUrl": "https://docker.io",
          "identifier": "okaru413/clappia-mcp",
          "version": "1.0.0",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your API key for the Clappia platform",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "CLAPPIA_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "4bff99c9-1d7d-42e1-987b-7aef50507115",
          "versionId": "9ab0a049-8e8c-4bb3-8fdc-e1ff7638582a",
          "publishedAt": "2025-09-26T11:05:30.583562476Z",
          "updatedAt": "2025-09-26T11:05:30.583562476Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/arjunkmrm-tutorials",
      "description": "Analyze stocks and SEC filings to surface key insights, from price and volume to insider activity…",
      "status": "active",
      "repository": {
        "url": "https://github.com/arjunkmrm/tutorials",
        "source": "github",
        "subfolder": "smithery-example/financial-server"
      },
      "version": "1.15.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@arjunkmrm/tutorials/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "ce2226c5-1de6-4019-878b-b1ff470995c5",
          "versionId": "9b3782bf-6744-4827-8619-b27aa719a6a5",
          "publishedAt": "2025-09-29T12:55:16.098975073Z",
          "updatedAt": "2025-09-29T12:55:16.098975073Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.Selenium39/mcp-server-tempmail",
      "description": "MCP server for temporary email management using ChatTempMail API",
      "status": "active",
      "repository": {
        "url": "https://github.com/Selenium39/mcp-server-tempmail",
        "source": "github"
      },
      "version": "1.0.1",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mcp-server-tempmail",
          "version": "1.0.1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "API key for ChatTempMail service",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "TEMPMAIL_API_KEY"
            },
            {
              "description": "Base URL for ChatTempMail API (optional, defaults to https://chat-tempmail.com)",
              "format": "string",
              "name": "TEMPMAIL_BASE_URL"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "d6d7bbab-70c9-450d-93e0-771bf2d8cebe",
          "versionId": "9b7b9ce9-886b-4281-9e3e-8b5d45998edb",
          "publishedAt": "2025-09-09T14:44:19.170379822Z",
          "updatedAt": "2025-09-09T14:44:19.170379822Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.IvanMurzak/Unity-MCP",
      "description": "Make 3D games in Unity Engine with AI. MCP Server + Plugin for Unity Editor and Unity games.",
      "status": "active",
      "repository": {
        "url": "https://github.com/IvanMurzak/Unity-MCP",
        "source": "github",
        "subfolder": "Unity-MCP-Server"
      },
      "version": "0.17.0",
      "packages": [
        {
          "registryType": "oci",
          "registryBaseUrl": "https://docker.io",
          "identifier": "ivanmurzakdev/unity-mcp-server",
          "version": "0.17.0",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Client -> Server <- Plugin connection port (default: 8080)",
              "format": "number",
              "name": "UNITY_MCP_PORT"
            },
            {
              "description": "Plugin -> Server connection timeout (ms) (default: 10000)",
              "format": "number",
              "name": "UNITY_MCP_PLUGIN_TIMEOUT"
            },
            {
              "description": "Client -> Server transport type: stdio or http (default: http)",
              "format": "string",
              "default": "stdio",
              "name": "UNITY_MCP_CLIENT_TRANSPORT"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "bad1e418-76f1-4842-82e7-5b036c57da38",
          "versionId": "9c344d55-866d-4aad-8caa-5d08fa1ac54d",
          "publishedAt": "2025-09-12T10:14:26.342754989Z",
          "updatedAt": "2025-09-12T11:41:26.342442162Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.Antonytm/mcp-all",
      "description": "A Model Context Protocol server to run other MCP servers",
      "status": "active",
      "repository": {
        "url": "https://github.com/Antonytm/mcp-all",
        "source": "github"
      },
      "version": "0.1.16",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@antonytm/mcp-all",
          "version": "0.1.16",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "name": "TRANSPORT"
            }
          ]
        },
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@antonytm/mcp-all",
          "version": "0.1.16",
          "transport": {
            "type": "streamable-http",
            "url": "http://localhost:3001/mcp"
          },
          "environmentVariables": [
            {
              "name": "TRANSPORT"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "f88dbaa2-7e10-4957-a53b-7ed8b511d77c",
          "versionId": "9c8a62af-693f-4973-8c74-f4312909d15e",
          "publishedAt": "2025-09-28T10:52:04.655522188Z",
          "updatedAt": "2025-09-28T14:22:22.428848156Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.waystation/teams",
      "description": "Collaborate, chat, and manage meetings in Microsoft Teams.",
      "status": "active",
      "repository": {
        "url": "https://github.com/waystation-ai/mcp",
        "source": "github"
      },
      "version": "0.3.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://waystation.ai/teams/mcp"
        },
        {
          "type": "sse",
          "url": "https://waystation.ai/teams/mcp/sse"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "f617c9ab-5185-49e8-af21-6276c37db6c4",
          "versionId": "9dcd9a6c-b7b1-45f0-98a7-3fd8d3c49d51",
          "publishedAt": "2025-09-09T14:46:08.709922175Z",
          "updatedAt": "2025-09-09T14:46:08.709922175Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.agentailor/slimcontext-mcp-server",
      "description": "MCP Server for SlimContext - AI chat history compression tools",
      "status": "active",
      "repository": {
        "url": "https://github.com/agentailor/slimcontext-mcp-server",
        "source": "github"
      },
      "version": "0.1.1",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "slimcontext-mcp-server",
          "version": "0.1.1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your API key for the service",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "YOUR_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "e694708b-fee1-4070-b8cd-e008bcc5bd3e",
          "versionId": "9e289796-16e8-440e-8b01-311e7bbb64cb",
          "publishedAt": "2025-09-10T15:57:56.189103539Z",
          "updatedAt": "2025-09-16T07:56:23.189924643Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/skr-cloudify-clickup-mcp-server-new",
      "description": "Manage your ClickUp workspace by creating, updating, and organizing tasks, lists, folders, and tag…",
      "status": "active",
      "repository": {
        "url": "https://github.com/skr-cloudify/clickup-mcp-server-new",
        "source": "github"
      },
      "version": "0.8.5",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@skr-cloudify/clickup-mcp-server-new/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "8804ecb7-d50a-45ca-b698-3700ebfcf4b5",
          "versionId": "9e7720d9-3476-4dbd-b063-8dc664705ba7",
          "publishedAt": "2025-09-21T11:44:55.497078792Z",
          "updatedAt": "2025-09-21T11:44:55.497078792Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.jkawamoto/mcp-youtube-transcript",
      "description": "An MCP server retrieving transcripts of YouTube videos",
      "status": "active",
      "repository": {
        "url": "https://github.com/jkawamoto/mcp-youtube-transcript",
        "source": "github"
      },
      "version": "0.5.2",
      "packages": [
        {
          "registryType": "mcpb",
          "identifier": "https://github.com/jkawamoto/mcp-youtube-transcript/releases/download/v0.5.2/mcp-youtube-transcript.mcpb",
          "version": "0.5.2",
          "fileSha256": "5b0494110d53c9e6fb8b689ebb5876a3e98351f7db64142eca874a0bb6ca188f",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "3ea19f39-944b-44bd-8cc7-dfb2f5150768",
          "versionId": "9eac18b7-2f7b-47ab-9d14-fa094a7a99a8",
          "publishedAt": "2025-09-29T19:06:38.699033109Z",
          "updatedAt": "2025-09-29T19:06:38.699033109Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.apple-rag/mcp-server",
      "description": "Apple Developer Documentation with Semantic Search, RAG, and AI reranking for MCP clients",
      "status": "active",
      "repository": {
        "url": "https://github.com/BingoWon/apple-rag-mcp",
        "source": "github"
      },
      "version": "2.5.2",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.apple-rag.com",
          "headers": [
            {
              "description": "MCP Token for authentication (optional - free tier available without token)",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "803e4dc4-c3d4-43d2-b6a3-65885c8eefb4",
          "versionId": "9ef1c5fc-0d30-4038-b8c0-93f9aaffd1b2",
          "publishedAt": "2025-09-17T15:11:26.206910319Z",
          "updatedAt": "2025-09-17T15:13:14.51544383Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.therealtimex/charts-mcp",
      "description": "MCP server for generating charts using AntV. Supports various chart types through MCP tools.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.1",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "@realtimex/charts-mcp",
          "version": "1.0.1",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "7e8661a3-7e3d-43f8-adef-4be28405a70e",
          "versionId": "9f7b981a-ef04-47c6-b41b-ebcdb45aa41a",
          "publishedAt": "2025-09-29T22:16:43.896970858Z",
          "updatedAt": "2025-09-29T22:16:43.896970858Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.GabrielaHdzMicrosoft/mcp-server",
      "description": "An MCP server that provides visual memory and context storage with knowledge graph capabilities",
      "status": "active",
      "repository": {
        "url": "https://github.com/testing9384/mcp-server",
        "source": "github"
      },
      "version": "1.0.1",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "visual-memory-context-server",
          "version": "1.0.1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Path to the memory.json file for knowledge graph storage",
              "format": "string",
              "name": "MEMORY_FILE_PATH"
            },
            {
              "description": "Comma-separated list of directories the server can access, or JSON array format",
              "format": "string",
              "name": "ALLOWED_DIRECTORIES"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "2d498eef-9457-47c3-9a42-75c47c70355a",
          "versionId": "9fbd370f-ab2b-446e-a141-37365aa329cd",
          "publishedAt": "2025-09-20T03:14:43.524547161Z",
          "updatedAt": "2025-09-20T03:14:43.524547161Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.driflyte/driflyte-mcp-server",
      "description": "Driflyte MCP server which lets AI assistants query topic-specific knowledge from web and GitHub.",
      "status": "active",
      "repository": {
        "url": "https://github.com/serkan-ozal/driflyte-mcp-server",
        "source": "github"
      },
      "version": "0.1.8",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@driflyte/mcp-server",
          "version": "0.1.8",
          "runtimeHint": "npx",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.driflyte.com/mcp"
        },
        {
          "type": "streamable-http",
          "url": "https://mcp.driflyte.com/openai"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "e4bf9279-bd3f-43d4-8c82-8b26d237876b",
          "versionId": "9ff1f550-6bd3-48a1-a107-da9e0ba606b8",
          "publishedAt": "2025-09-29T12:13:56.668952498Z",
          "updatedAt": "2025-09-29T14:12:11.331685855Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/Nekzus-npm-sentinel-mcp",
      "description": "Provide AI-powered real-time analysis and intelligence on NPM packages, including security, depend…",
      "status": "active",
      "repository": {
        "url": "https://github.com/Nekzus/npm-sentinel-mcp",
        "source": "github"
      },
      "version": "1.11.5",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@Nekzus/npm-sentinel-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "a10fab8f-cce3-42a0-b3e4-e34e2f71c41c",
          "versionId": "a001613e-8575-4e5e-821a-46da25cfe8fc",
          "publishedAt": "2025-09-20T22:47:38.649029129Z",
          "updatedAt": "2025-09-20T23:26:41.758996151Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.cyanheads/mcp-ts-template",
      "description": "A production-grade TypeScript template for scalable MCP servers with built-in observability.",
      "status": "active",
      "repository": {
        "url": "https://github.com/cyanheads/mcp-ts-template",
        "source": "github"
      },
      "version": "2.2.3",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mcp-ts-template",
          "version": "2.2.3",
          "runtimeHint": "bun",
          "transport": {
            "type": "stdio"
          },
          "packageArguments": [
            {
              "value": "run",
              "type": "positional"
            },
            {
              "value": "start:stdio",
              "type": "positional"
            }
          ],
          "environmentVariables": [
            {
              "description": "Sets the minimum log level for output (e.g., 'debug', 'info', 'warn').",
              "format": "string",
              "default": "info",
              "name": "MCP_LOG_LEVEL"
            }
          ]
        },
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mcp-ts-template",
          "version": "2.2.3",
          "runtimeHint": "bun",
          "transport": {
            "type": "streamable-http",
            "url": "http://localhost:3010/mcp"
          },
          "packageArguments": [
            {
              "value": "run",
              "type": "positional"
            },
            {
              "value": "start:http",
              "type": "positional"
            }
          ],
          "environmentVariables": [
            {
              "description": "The hostname for the HTTP server.",
              "format": "string",
              "default": "127.0.0.1",
              "name": "MCP_HTTP_HOST"
            },
            {
              "description": "The port to run the HTTP server on.",
              "format": "string",
              "default": "3010",
              "name": "MCP_HTTP_PORT"
            },
            {
              "description": "The endpoint path for the MCP server.",
              "format": "string",
              "default": "/mcp",
              "name": "MCP_HTTP_ENDPOINT_PATH"
            },
            {
              "description": "Authentication mode to use: 'none', 'jwt', or 'oauth'.",
              "format": "string",
              "default": "none",
              "name": "MCP_AUTH_MODE"
            },
            {
              "description": "Sets the minimum log level for output (e.g., 'debug', 'info', 'warn').",
              "format": "string",
              "default": "info",
              "name": "MCP_LOG_LEVEL"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "b1a7bd6b-21e2-4cd8-8531-37dddc5fa3f4",
          "versionId": "a0a77b19-ca9a-462e-a198-458b359583b9",
          "publishedAt": "2025-09-29T20:10:17.759055927Z",
          "updatedAt": "2025-09-29T20:59:55.941117839Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.cyanheads/mcp-ts-template",
      "description": "A production-grade TypeScript template for scalable MCP servers with built-in observability.",
      "status": "active",
      "repository": {
        "url": "https://github.com/cyanheads/mcp-ts-template",
        "source": "github"
      },
      "version": "2.0.2",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mcp-ts-template",
          "version": "2.0.1",
          "runtimeHint": "bun",
          "transport": {
            "type": "stdio"
          },
          "packageArguments": [
            {
              "value": "run",
              "type": "positional"
            },
            {
              "value": "start:stdio",
              "type": "positional"
            }
          ],
          "environmentVariables": [
            {
              "description": "Sets the minimum log level for output (e.g., 'debug', 'info', 'warn').",
              "format": "string",
              "default": "info",
              "name": "MCP_LOG_LEVEL"
            }
          ]
        },
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mcp-ts-template",
          "version": "2.0.1",
          "runtimeHint": "bun",
          "transport": {
            "type": "streamable-http",
            "url": "http://localhost:3010/mcp"
          },
          "packageArguments": [
            {
              "value": "run",
              "type": "positional"
            },
            {
              "value": "start:http",
              "type": "positional"
            }
          ],
          "environmentVariables": [
            {
              "description": "The port to run the HTTP server on.",
              "format": "string",
              "default": "3010",
              "name": "MCP_HTTP_PORT"
            },
            {
              "description": "Authentication mode to use: 'none', 'jwt', or 'oauth'.",
              "format": "string",
              "default": "none",
              "name": "MCP_AUTH_MODE"
            },
            {
              "description": "Sets the minimum log level for output (e.g., 'debug', 'info', 'warn').",
              "format": "string",
              "default": "info",
              "name": "MCP_LOG_LEVEL"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "b1a7bd6b-21e2-4cd8-8531-37dddc5fa3f4",
          "versionId": "a0bcd673-292a-4ba3-8dbc-eaf2ff92e7fc",
          "publishedAt": "2025-09-14T10:06:30.723296411Z",
          "updatedAt": "2025-09-15T13:43:27.500265535Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/yuna0x0-anilist-mcp",
      "description": "Access and interact with anime and manga data seamlessly. Retrieve detailed information about your…",
      "status": "active",
      "repository": {
        "url": "https://github.com/yuna0x0/anilist-mcp",
        "source": "github"
      },
      "version": "1.3.6",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@yuna0x0/anilist-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "value": "Bearer {smithery_api_key}",
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "bd7f3260-8768-49b4-be09-19cd13793ba2",
          "versionId": "a0dff5bc-b09e-499d-aa57-01100236995f",
          "publishedAt": "2025-09-29T12:06:58.353801508Z",
          "updatedAt": "2025-09-29T12:46:26.537327411Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.balldontlie/mcp",
      "description": "MCP server for BALLDONTLIE API",
      "status": "active",
      "repository": {
        "url": "https://github.com/balldontlie-api/mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.balldontlie.io/mcp",
          "headers": [
            {
              "description": "API key for authentication",
              "isRequired": true,
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "d5a785f7-4fae-4365-b408-71e79c58a387",
          "versionId": "a1338208-2314-4d5d-bf1b-073348067148",
          "publishedAt": "2025-09-18T00:33:15.822454699Z",
          "updatedAt": "2025-09-18T00:35:55.651573674Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/aryankeluskar-poke-video-mcp",
      "description": "Search your Flashback video library with natural language to instantly find relevant moments. Get…",
      "status": "active",
      "repository": {
        "url": "https://github.com/aryankeluskar/poke-video-mcp",
        "source": "github"
      },
      "version": "1.14.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@aryankeluskar/poke-video-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "662c7dac-4f01-4eab-919b-8ba09361e5e4",
          "versionId": "a1ca2e8c-20e7-44f7-a0ad-eb2aef2faf78",
          "publishedAt": "2025-09-14T17:42:05.006813829Z",
          "updatedAt": "2025-09-14T17:42:05.006813829Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.linxule/lotus-wisdom",
      "description": "An MCP server for problem-solving using the Lotus Sutra's wisdom framework.",
      "status": "active",
      "repository": {
        "url": "https://github.com/linxule/lotus-wisdom-mcp",
        "source": "github",
        "id": "963596268"
      },
      "version": "0.1.2",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "lotus-wisdom-mcp",
          "version": "0.1.2",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "c87b3c0b-a17f-452b-ab16-ae5b399c6f75",
          "versionId": "a2e1778e-50cf-4972-a9cb-e31a89068e6f",
          "publishedAt": "2025-09-16T23:53:10.712981505Z",
          "updatedAt": "2025-09-16T23:53:10.712981505Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.leshchenko1979/fast-mcp-telegram",
      "description": "Telegram MCP server with search and messaging capabilities",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.4.4",
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "a1a4d761-5635-480b-b636-4b6fef3c9a77",
          "versionId": "a31f1b64-c682-4771-a4a8-76b0a9d96ec9",
          "publishedAt": "2025-09-11T16:40:10.557651314Z",
          "updatedAt": "2025-09-15T08:03:29.365893275Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "net.singular/mcp-server",
      "description": "Marketing intelligence MCP server providing campaign performance data and analytics tools.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "sse",
          "url": "https://mcp.singular.net/mcp-server/mcp"
        },
        {
          "type": "streamable-http",
          "url": "https://mcp.singular.net/mcp-server/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "27928091-b7b8-49b8-bb67-3af637f72d11",
          "versionId": "a5675720-0a3a-4980-a736-49b8072e9c57",
          "publishedAt": "2025-09-25T09:51:48.50742604Z",
          "updatedAt": "2025-09-25T09:51:48.50742604Z",
          "isLatest": true
        }
      }
    }
  ]
}