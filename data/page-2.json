{
  "servers": [
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "ai.waystation/miro",
      "description": "Collaborate on visual boards with your team using Miro integration.",
      "status": "active",
      "repository": {
        "url": "https://github.com/waystation-ai/mcp",
        "source": "github"
      },
      "version": "0.3.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://waystation.ai/miro/mcp"
        },
        {
          "type": "sse",
          "url": "https://waystation.ai/miro/mcp/sse"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "54131da0-99e1-4d90-a5d3-e0333a265843",
          "published_at": "2025-09-09T14:32:52.805916164Z",
          "updated_at": "2025-09-09T14:32:52.805916164Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.domdomegg/time-mcp-nuget",
      "description": "Get the current UTC time in RFC 3339 format.",
      "status": "active",
      "repository": {
        "url": "https://github.com/domdomegg/time-mcp-nuget.git",
        "source": "github"
      },
      "version": "1.0.8",
      "packages": [
        {
          "registry_type": "nuget",
          "identifier": "TimeMcpServer",
          "version": "1.0.8",
          "runtime_hint": "dnx",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "542b567a-17c2-4a09-905b-313d6ead48d7",
          "published_at": "2025-09-12T02:58:39.843958183Z",
          "updated_at": "2025-09-12T02:58:39.843958183Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.isamu/mulmocast-vision",
      "description": "Easy and stylish presentation slide generator.",
      "status": "active",
      "repository": {
        "url": "https://github.com/receptron/mulmocast-vision",
        "source": "github"
      },
      "version": "1.0.1",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "mulmocast-vision",
          "version": "1.0.1",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "5473ea29-7534-4d74-ad1d-5b8185114052",
          "published_at": "2025-09-12T21:46:16.168898479Z",
          "updated_at": "2025-09-12T21:46:16.168898479Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://modelcontextprotocol.io/schemas/draft/2025-07-09/server.json",
      "name": "io.github.timheuer/sampledotnetmcpserver",
      "description": "Sample .NET MCP Server",
      "repository": {
        "url": "https://github.com/timheuer/sampledotnetmcpserver",
        "source": "github"
      },
      "version": "",
      "packages": [
        {
          "registry_type": "nuget",
          "identifier": "TimHeuer.SampleDotnetMcpServer",
          "version": "0.1.11-beta",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "55cfffa3-6f27-4010-97ce-7946cd76cad2",
          "published_at": "2025-09-10T13:58:00.558767962Z",
          "updated_at": "2025-09-10T15:31:23.618984633Z",
          "is_latest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "com.mintmcp/gcal",
      "description": "A MCP server that works with Google Calendar to manage event listing, reading, and updates.",
      "status": "active",
      "repository": {
        "url": "https://github.com/mintmcp/servers",
        "source": "github"
      },
      "version": "1.0.4",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://gcal.mintmcp.com/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "56080a46-21d6-48d2-91ff-ae1b9cb378b5",
          "published_at": "2025-09-09T19:49:54.013255259Z",
          "updated_at": "2025-09-09T19:49:54.013255259Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.b1ff/atlassian-dc-mcp-jira",
      "description": "MCP server for Atlassian Jira Data Center - search, view, and create issues",
      "status": "active",
      "repository": {
        "url": "https://github.com/b1ff/atlassian-dc-mcp",
        "source": "github"
      },
      "version": "0.9.9",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@atlassian-dc-mcp/jira",
          "version": "0.9.9",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Jira host domain (e.g. your-instance.atlassian.net)",
              "format": "string",
              "name": "JIRA_HOST"
            },
            {
              "description": "Jira API base path (alternative to JIRA_HOST)",
              "format": "string",
              "name": "JIRA_API_BASE_PATH"
            },
            {
              "description": "Jira Personal Access Token or API token",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "JIRA_API_TOKEN"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "580738da-9f8f-426c-a690-03e6784e2000",
          "published_at": "2025-09-13T13:29:18.029022573Z",
          "updated_at": "2025-09-13T13:29:18.029022573Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.arielbk/anki-mcp",
      "description": "MCP server for integrating with Anki flashcards through conversational AI",
      "status": "active",
      "repository": {
        "url": "https://github.com/arielbk/anki-mcp",
        "source": "github"
      },
      "version": "0.3.2",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@arielbk/anki-mcp",
          "version": "0.3.2",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "584c8dd5-4a8c-4a9a-a8a2-2ef350e576a7",
          "published_at": "2025-09-11T12:16:49.682389389Z",
          "updated_at": "2025-09-11T12:16:49.682389389Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.ycjcl868/mcp-server-fear-greed",
      "description": "An MCP server for mcp-server-fear-greed",
      "status": "active",
      "repository": {
        "url": "https://github.com/ycjcl868/mcp-server-fear-greed",
        "source": "github"
      },
      "version": "1.0.2",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "mcp-server-fear-greed",
          "version": "latest",
          "transport": {
            "type": "stdio"
          }
        },
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "mcp-server-fear-greed",
          "version": "latest",
          "runtime_hint": "npx",
          "transport": {
            "type": "sse",
            "url": "http://127.0.0.1:{port}/sse"
          },
          "package_arguments": [
            {
              "description": "Server port number",
              "is_required": true,
              "format": "number",
              "default": "8089",
              "type": "named",
              "name": "port"
            }
          ]
        },
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "mcp-server-fear-greed",
          "version": "latest",
          "runtime_hint": "npx",
          "transport": {
            "type": "streamable-http",
            "url": "http://127.0.0.1:{port}/mcp"
          },
          "package_arguments": [
            {
              "description": "Server port number",
              "is_required": true,
              "format": "number",
              "default": "8089",
              "type": "named",
              "name": "port"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "5996e50e-d147-4b9d-ab2e-c771cd7dc73d",
          "published_at": "2025-09-09T04:08:35.601637811Z",
          "updated_at": "2025-09-09T04:08:35.601637811Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.minnas/mcp",
      "description": "Share prompts and context with your team and discover community collections.",
      "status": "active",
      "repository": {
        "url": "https://github.com/sensoris/minnas-service",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "sse",
          "url": "https://api.minnas.io/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "5b990a17-1e02-4112-9d51-50e0ce0bc8bd",
          "published_at": "2025-09-10T15:43:19.145095272Z",
          "updated_at": "2025-09-10T15:43:19.145095272Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.b1ff/atlassian-dc-mcp-confluence",
      "description": "MCP server for Atlassian Confluence Data Center - access and manage content",
      "status": "active",
      "repository": {
        "url": "https://github.com/b1ff/atlassian-dc-mcp",
        "source": "github"
      },
      "version": "0.9.8",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@atlassian-dc-mcp/confluence",
          "version": "0.9.8",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Confluence host domain (e.g. your-instance.atlassian.net)",
              "format": "string",
              "name": "CONFLUENCE_HOST"
            },
            {
              "description": "Confluence API base path (alternative to CONFLUENCE_HOST)",
              "format": "string",
              "name": "CONFLUENCE_API_BASE_PATH"
            },
            {
              "description": "Confluence Personal Access Token or API token",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "CONFLUENCE_API_TOKEN"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "5b9f4081-5b9b-4790-81e8-0e4003f87912",
          "published_at": "2025-09-13T13:18:50.968631388Z",
          "updated_at": "2025-09-13T13:29:18.545408762Z",
          "is_latest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "ai.smithery/blbl147-xhs-mcp",
      "description": "搜索笔记、浏览首页推荐、查看笔记内容与评论，并发表你的评论。直接在工作流中与小红书内容互动，高效跟进话题。",
      "status": "active",
      "repository": {
        "url": "https://github.com/blbl147/xhs-mcp",
        "source": "github"
      },
      "version": "1.6.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@blbl147/xhs-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "5c567ecc-775d-4b1d-b990-1b14ec02ffe8",
          "published_at": "2025-09-15T03:34:24.676762516Z",
          "updated_at": "2025-09-15T03:34:24.676762516Z",
          "is_latest": true
        }
      }
    },
    {
      "name": "io.github.jkakar/cookwith-mcp",
      "description": "AI-powered recipe generation and transformation tools by Cookwith",
      "repository": {
        "url": "https://github.com/blaideinc/cookwith-mcp",
        "source": "github"
      },
      "version": "1.0.2",
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "5c7b580d-19dc-45c3-957f-303efdd1f4b7",
          "published_at": "2025-09-12T19:27:49.340445667Z",
          "updated_at": "2025-09-12T19:27:49.340445667Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "ai.smithery/sasabasara-where_is_my_bus_mcp",
      "description": "Get real-time NYC bus arrivals, live vehicle locations, and service alerts. Plan trips between any…",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "2.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@sasabasara/where_is_my_bus_mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "5cf0cf74-f9f5-4c6d-84a2-59529a8a445a",
          "published_at": "2025-09-11T03:53:53.151653448Z",
          "updated_at": "2025-09-11T03:53:53.151653448Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.ruvnet/claude-flow",
      "description": "AI orchestration with hive-mind swarms, neural networks, and 87 MCP tools for enterprise dev.",
      "status": "active",
      "repository": {
        "url": "https://github.com/ruvnet/claude-flow",
        "source": "github",
        "id": "854513237"
      },
      "version": "2.0.0-alpha.107",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "claude-flow",
          "version": "2.0.0-alpha.107",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Anthropic API key for Claude AI models",
              "format": "string",
              "is_secret": true,
              "name": "ANTHROPIC_API_KEY"
            },
            {
              "description": "Operation mode: development, production, or test",
              "format": "string",
              "name": "CLAUDE_FLOW_MODE"
            },
            {
              "description": "Path for persistent memory storage",
              "format": "string",
              "name": "CLAUDE_FLOW_MEMORY_PATH"
            },
            {
              "description": "Maximum number of concurrent agents",
              "format": "string",
              "name": "CLAUDE_FLOW_MAX_AGENTS"
            },
            {
              "description": "MCP server port",
              "format": "string",
              "name": "CLAUDE_FLOW_PORT"
            },
            {
              "description": "GitHub personal access token for repository operations",
              "format": "string",
              "is_secret": true,
              "name": "GITHUB_TOKEN"
            },
            {
              "description": "Flow Nexus cloud platform API key",
              "format": "string",
              "is_secret": true,
              "name": "FLOW_NEXUS_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "5db5281e-f8b9-49a8-bf3d-b15b911f634a",
          "published_at": "2025-09-10T16:59:34.218265771Z",
          "updated_at": "2025-09-10T16:59:34.218265771Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "ai.mcpcap/mcpcap",
      "description": "An MCP server for analyzing PCAP files.",
      "status": "active",
      "repository": {
        "url": "https://github.com/mcpcap/mcpcap",
        "source": "github"
      },
      "version": "0.5.3",
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "mcpcap",
          "version": "0.4.4",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "5f655162-becc-41bc-b9f6-959e3611e138",
          "published_at": "2025-09-12T01:50:59.054896721Z",
          "updated_at": "2025-09-12T01:53:51.97863881Z",
          "is_latest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.variflight/variflight-mcp",
      "description": "VariFlight's official MCP server provides tools to query flight, weather, comfort, and fare data.",
      "status": "active",
      "repository": {
        "url": "https://github.com/variflight/variflight-mcp",
        "source": "github"
      },
      "version": "1.0.2",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@variflight-ai/variflight-mcp",
          "version": "1.0.1",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your API key for the service",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "VARIFLIGHT_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "5f80b1e5-5b3b-437a-99dc-c743cae8a2c7",
          "published_at": "2025-09-12T07:06:18.904080025Z",
          "updated_at": "2025-09-12T07:06:18.904080025Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "ai.tickettailor/mcp",
      "description": "Provides event organisers with tools to interact with a Ticket Tailor box office account.",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.tickettailor.ai/mcp"
        },
        {
          "type": "sse",
          "url": "https://mcp.tickettailor.ai/sse"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "5fae66cd-f99b-40e6-a097-3990537cd513",
          "published_at": "2025-09-12T10:10:54.1887638Z",
          "updated_at": "2025-09-12T10:10:54.1887638Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.koki-develop/esa-mcp-server",
      "description": "A Model Context Protocol (MCP) server for esa.io",
      "status": "active",
      "repository": {
        "url": "https://github.com/koki-develop/esa-mcp-server.git",
        "source": "github"
      },
      "version": "0.3.2",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@koki-develop/esa-mcp-server",
          "version": "0.3.2",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your esa team",
              "is_required": true,
              "format": "string",
              "name": "ESA_TEAM"
            },
            {
              "description": "Your esa personal access token",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "ESA_ACCESS_TOKEN"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "60eaa6b1-e687-49a0-a783-95e6033bc0c6",
          "published_at": "2025-09-11T00:37:16.035462939Z",
          "updated_at": "2025-09-11T00:37:16.035462939Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "ai.smithery/BadRooBot-my_test_mcp",
      "description": "Get current weather for any city and create images from your prompts. Streamline planning, reports…",
      "status": "active",
      "repository": {
        "url": "https://github.com/BadRooBot/python_mcp",
        "source": "github"
      },
      "version": "1.14.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@BadRooBot/my_test_mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "62033d66-b83d-4f62-a294-a2c212cb06e6",
          "published_at": "2025-09-14T14:25:46.09449626Z",
          "updated_at": "2025-09-14T14:25:46.09449626Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "ai.waystation/jira",
      "description": "Track issues, manage projects, and streamline workflows in Jira.",
      "status": "active",
      "repository": {
        "url": "https://github.com/waystation-ai/mcp",
        "source": "github"
      },
      "version": "0.3.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://waystation.ai/jira/mcp"
        },
        {
          "type": "sse",
          "url": "https://waystation.ai/jira/mcp/sse"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "62854e83-941a-464c-8798-2f3ae4908410",
          "published_at": "2025-09-09T14:46:07.210890661Z",
          "updated_at": "2025-09-09T14:46:07.210890661Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.xorrkaz/cml-mcp",
      "description": "An MCP server that provides access to common Cisco Modeling Labs (CML) operations.",
      "status": "active",
      "repository": {
        "url": "https://github.com/xorrkaz/cml-mcp",
        "source": "github"
      },
      "version": "0.8.3",
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "cml-mcp",
          "version": "0.8.3",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "URL for the CML Server",
              "is_required": true,
              "format": "string",
              "name": "CML_URL"
            },
            {
              "description": "Username for CML authentication",
              "is_required": true,
              "format": "string",
              "name": "CML_USERNAME"
            },
            {
              "description": "Password for CML authentication",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "CML_PASSWORD"
            },
            {
              "description": "Username for authentication to devices running in CML",
              "format": "string",
              "name": "PYATS_USERNAME"
            },
            {
              "description": "Password for authentication to devices running in CML",
              "format": "string",
              "is_secret": true,
              "name": "PYATS_PASSWORD"
            },
            {
              "description": "Enable password for authentication to devices running in CML",
              "format": "string",
              "is_secret": true,
              "name": "PYATS_AUTH_PASS"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "63412105-c23a-4c00-9651-fc721fb12539",
          "published_at": "2025-09-10T19:14:35.862874767Z",
          "updated_at": "2025-09-14T14:57:56.312035195Z",
          "is_latest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "ai.shawndurrani/mcp-registry",
      "description": "Search the public MCP Registry; discover servers and copy SSE URLs.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.1.1",
      "remotes": [
        {
          "type": "sse",
          "url": "https://mcp-registry.shawndurrani.ai/sse"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "64bd1c4f-bbc1-4909-b49a-5d7f1d4efe33",
          "published_at": "2025-09-15T04:01:11.057921329Z",
          "updated_at": "2025-09-15T04:20:53.740529471Z",
          "is_latest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "md.install/try",
      "description": "Create guides as MCP servers to instruct coding agents to use your software (library, API, etc).",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.1.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://install.md/mcp/try"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "66c173f7-0916-4751-a250-eafd1433af94",
          "published_at": "2025-09-09T07:10:11.156679866Z",
          "updated_at": "2025-09-09T07:10:11.156679866Z",
          "is_latest": true
        }
      }
    },
    {
      "name": "travel.kismet/mcp-server",
      "description": "Semantic hotel search with real-time availability and price comparison for Kismet Travel",
      "repository": {
        "url": "https://github.com/kismet-tech/kismet-travel-mcp-v2",
        "source": "github"
      },
      "version": "0.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.kismet.travel/mcp"
        },
        {
          "type": "sse",
          "url": "https://mcp.kismet.travel/sse"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "67a1944e-1574-44f0-8165-f434ae3a141b",
          "published_at": "2025-09-10T22:00:17.761143256Z",
          "updated_at": "2025-09-10T22:00:17.761143256Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.Flightradar24/fr24api-mcp",
      "description": "MCP server providing access to the Flightradar24 API for real-time and historical flight data",
      "status": "active",
      "repository": {
        "url": "https://github.com/Flightradar24/fr24api-mcp",
        "source": "github"
      },
      "version": "1.0.1",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@flightradar24/fr24api-mcp",
          "version": "1.0.1",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your API key for Flightradar24 API",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "FR24_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "69c0381a-387b-4398-af92-294377ecb5ec",
          "published_at": "2025-09-09T11:42:51.309275268Z",
          "updated_at": "2025-09-09T11:42:51.309275268Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.himorishige/hatago-mcp-hub",
      "description": "Unified MCP Hub for managing multiple Model Context Protocol servers",
      "status": "active",
      "repository": {
        "url": "https://github.com/himorishige/hatago-mcp-hub",
        "source": "github"
      },
      "version": "0.0.14",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@himorishige/hatago-mcp-hub",
          "version": "0.0.14",
          "runtime_hint": "npx",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "6e30b2bc-f0e2-4725-89f4-458932232c12",
          "published_at": "2025-09-14T07:53:18.713900781Z",
          "updated_at": "2025-09-14T10:38:58.014142407Z",
          "is_latest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.cr7258/elasticsearch-mcp-server",
      "description": "MCP server for interacting with Elasticsearch",
      "status": "active",
      "repository": {
        "url": "https://github.com/cr7258/elasticsearch-mcp-server",
        "source": "github"
      },
      "version": "2.0.12",
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "elasticsearch-mcp-server",
          "version": "2.0.12",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Comma-separated list of Elasticsearch hosts (e.g., https://localhost:9200)",
              "format": "string",
              "default": "https://localhost:9200",
              "name": "ELASTICSEARCH_HOSTS"
            },
            {
              "description": "API key for Elasticsearch or Elastic Cloud authentication (recommended)",
              "format": "string",
              "is_secret": true,
              "name": "ELASTICSEARCH_API_KEY"
            },
            {
              "description": "Username for basic authentication (alternative to API key)",
              "format": "string",
              "name": "ELASTICSEARCH_USERNAME"
            },
            {
              "description": "Password for basic authentication (used with ELASTICSEARCH_USERNAME)",
              "format": "string",
              "is_secret": true,
              "name": "ELASTICSEARCH_PASSWORD"
            },
            {
              "description": "Whether to verify SSL certificates (true/false)",
              "format": "boolean",
              "default": "false",
              "name": "ELASTICSEARCH_VERIFY_CERTS"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "6e44548a-ef55-4303-86aa-eaf8807c7dab",
          "published_at": "2025-09-11T02:48:54.493070641Z",
          "updated_at": "2025-09-11T03:19:12.600102971Z",
          "is_latest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "ai.mcpcap/mcpcap",
      "description": "An MCP server for analyzing PCAP files.",
      "status": "active",
      "repository": {
        "url": "https://github.com/mcpcap/mcpcap",
        "source": "github"
      },
      "version": "0.5.4",
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "mcpcap",
          "version": "0.4.4",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "6f1c2c5d-192b-4964-919f-d2850f383aa2",
          "published_at": "2025-09-12T01:53:51.972295258Z",
          "updated_at": "2025-09-12T01:55:40.789431661Z",
          "is_latest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.JustasMonkev/mcp-accessibility-scanner",
      "description": "MCP server for automated web accessibility scanning with Playwright and Axe-core.",
      "status": "active",
      "repository": {
        "url": "https://github.com/JustasMonkev/mcp-accessibility-scanner",
        "source": "github"
      },
      "version": "1.1.1",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "mcp-accessibility-scanner",
          "version": "1.1.1",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "6f372f99-089b-4cc7-a9b6-b3fcbd39074b",
          "published_at": "2025-09-10T15:19:19.721714851Z",
          "updated_at": "2025-09-10T15:19:19.721714851Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "ai.smithery/DynamicEndpoints-powershell-exec-mcp-server",
      "description": "Execute PowerShell commands securely with controlled timeouts and input validation. Retrieve syste…",
      "status": "active",
      "repository": {
        "url": "https://github.com/DynamicEndpoints/PowerShell-Exec-MCP-Server",
        "source": "github"
      },
      "version": "1.13.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@DynamicEndpoints/powershell-exec-mcp-server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "703df496-b98b-4069-94b3-077fe6c1afae",
          "published_at": "2025-09-11T13:54:30.703394885Z",
          "updated_at": "2025-09-11T13:54:30.703394885Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "com.falkordb/QueryWeaver",
      "description": "An MCP server for Text2SQL: transforms natural language into SQL using graph schema understanding.",
      "status": "active",
      "repository": {
        "url": "https://github.com/FalkorDB/QueryWeaver",
        "source": "github"
      },
      "version": "0.0.11",
      "packages": [
        {
          "registry_type": "oci",
          "registry_base_url": "https://docker.io",
          "identifier": "falkordb/queryweaver",
          "version": "0.0.11",
          "transport": {
            "type": "streamable-http",
            "url": "https://localhost:5000/mcp"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "7128a4ba-390a-458f-b95a-46c72c7a0b81",
          "published_at": "2025-09-11T06:54:10.018880049Z",
          "updated_at": "2025-09-11T06:54:10.018880049Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.dockersamples/mcp-docker-release-information",
      "description": "MCP server providing Docker Desktop release notes and security information.",
      "status": "active",
      "repository": {
        "url": "https://github.com/dockersamples/mcp-docker-release-information",
        "source": "github"
      },
      "version": "0.3.0",
      "packages": [
        {
          "registry_type": "oci",
          "identifier": "dockersamples/mcp-docker-release-information",
          "version": "0.3.0",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "71de5a2a-6cfb-4250-a196-f93080ecc860",
          "published_at": "2025-09-10T18:54:52.764339069Z",
          "updated_at": "2025-09-10T18:54:52.764339069Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.imbenrabi/financial-modeling-prep-mcp-server",
      "description": "MCP server for Financial Modeling Prep API with 250+ financial data tools",
      "status": "active",
      "repository": {
        "url": "https://github.com/imbenrabi/Financial-Modeling-Prep-MCP-Server",
        "source": "github",
        "id": "988409529"
      },
      "version": "2.5.1",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "financial-modeling-prep-mcp-server",
          "version": "2.5.1",
          "runtime_hint": "npx",
          "transport": {
            "type": "streamable-http",
            "url": "https://financial-modeling-prep-mcp-server-production.up.railway.app/mcp"
          },
          "package_arguments": [
            {
              "description": "Financial Modeling Prep API access token",
              "format": "string",
              "type": "named",
              "name": "--fmp-token"
            },
            {
              "description": "Port number for HTTP server mode",
              "format": "number",
              "type": "named",
              "name": "--port"
            },
            {
              "description": "Enable dynamic tool discovery mode",
              "format": "boolean",
              "type": "named",
              "name": "--dynamic-tool-discovery"
            },
            {
              "description": "Comma-separated list of tool sets to load",
              "format": "string",
              "type": "named",
              "name": "--fmp-tool-sets"
            }
          ],
          "environment_variables": [
            {
              "description": "Financial Modeling Prep API access token",
              "format": "string",
              "is_secret": true,
              "name": "FMP_ACCESS_TOKEN"
            },
            {
              "description": "Port number for HTTP server mode",
              "format": "number",
              "name": "PORT"
            },
            {
              "description": "Enable dynamic tool discovery mode",
              "format": "boolean",
              "name": "DYNAMIC_TOOL_DISCOVERY"
            },
            {
              "description": "Comma-separated list of tool sets to load",
              "format": "string",
              "name": "FMP_TOOL_SETS"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "74573935-5dac-4879-a567-9ecaa3256200",
          "published_at": "2025-09-11T12:44:51.14737572Z",
          "updated_at": "2025-09-11T12:44:51.14737572Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.huoshuiai42/huoshui-pdf-translator",
      "description": "An MCP server that provides PDF translation service",
      "status": "active",
      "repository": {
        "url": "https://github.com/huoshuiai42/huoshui-pdf-translator",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "huoshui-pdf-translator",
          "version": "1.0.0",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "7499cd69-6bca-46dd-9b27-57bc69cceab6",
          "published_at": "2025-09-11T01:31:51.354566076Z",
          "updated_at": "2025-09-11T01:31:51.354566076Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "ai.smithery/docfork-mcp",
      "description": "@latest documentation and code examples to 9000+ libraries for LLMs and AI code editors in a singl…",
      "status": "active",
      "repository": {
        "url": "https://github.com/docfork/docfork-mcp",
        "source": "github"
      },
      "version": "0.7.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@docfork/mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "77b25763-8cce-444e-9914-939596568922",
          "published_at": "2025-09-12T18:25:16.049646725Z",
          "updated_at": "2025-09-12T18:25:16.049646725Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "com.mintmcp/gmail",
      "description": "A MintMCP server for Gmail that lets you search, read, and draft emails and replies.",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://gmail.mintmcp.com/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "77c15324-cc34-417a-800f-673c2c44909b",
          "published_at": "2025-09-09T19:20:31.788880118Z",
          "updated_at": "2025-09-09T19:25:39.937486339Z",
          "is_latest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.ryaker/appstore-connect-mcp",
      "description": "MCP server for Apple Store Connect API integration with OAuth authentication support",
      "status": "active",
      "repository": {
        "url": "https://github.com/ryaker/appstore-connect-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@ryaker/appstore-connect-mcp",
          "version": "1.0.0",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Apple App Store Connect API Key ID",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "APPLE_KEY_ID"
            },
            {
              "description": "Apple App Store Connect Issuer ID",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "APPLE_ISSUER_ID"
            },
            {
              "description": "Apple App Store Connect Private Key (base64 encoded or raw)",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "APPLE_PRIVATE_KEY"
            },
            {
              "description": "Optional: Specific Bundle ID to filter apps",
              "format": "string",
              "name": "APPLE_BUNDLE_ID"
            },
            {
              "description": "Optional: Specific App Store ID",
              "format": "string",
              "name": "APPLE_APP_STORE_ID"
            },
            {
              "description": "Enable OAuth authentication (true/false)",
              "format": "string",
              "name": "OAUTH_ENABLED"
            },
            {
              "description": "OAuth issuer URL (e.g., https://your-tenant.auth0.com)",
              "format": "string",
              "name": "OAUTH_ISSUER"
            },
            {
              "description": "OAuth audience URL",
              "format": "string",
              "name": "OAUTH_AUDIENCE"
            },
            {
              "description": "OAuth JWKS URI for token validation",
              "format": "string",
              "name": "OAUTH_JWKS_URI"
            },
            {
              "description": "Server URL for OAuth deployment",
              "format": "string",
              "name": "SERVER_URL"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "783d46a6-9456-412b-bce2-2d9c5a26dada",
          "published_at": "2025-09-10T14:59:09.11988275Z",
          "updated_at": "2025-09-10T14:59:09.11988275Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.formulahendry/mcp-server-mcp-registry",
      "description": "MCP Server for MCP Registry to discover and search for available MCP servers in the registry",
      "status": "active",
      "repository": {
        "url": "https://github.com/formulahendry/mcp-server-mcp-registry",
        "source": "github"
      },
      "version": "0.1.0",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "mcp-server-mcp-registry",
          "version": "0.1.0",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "7881f8bf-ec94-417d-9f01-45771faaba17",
          "published_at": "2025-09-14T07:16:07.571743009Z",
          "updated_at": "2025-09-14T07:16:07.571743009Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "ai.smithery/sachicali-discordmcp-suite",
      "description": "Control your Discord community: send/read messages, manage channels and forums, and handle webhook…",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.2.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@sachicali/discordmcp-suite/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "79ba496b-2c62-45ca-8fd7-2f00f259c6d2",
          "published_at": "2025-09-10T18:19:06.20151699Z",
          "updated_at": "2025-09-10T18:19:06.20151699Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "ai.smithery/yuna0x0-hackmd-mcp",
      "description": "Interact with your HackMD notes and teams seamlessly. Manage your notes, view reading history, and…",
      "status": "active",
      "repository": {
        "url": "https://github.com/yuna0x0/hackmd-mcp",
        "source": "github"
      },
      "version": "1.5.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@yuna0x0/hackmd-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "7a139c10-a255-4de8-a17a-0046fa3916ae",
          "published_at": "2025-09-15T03:33:42.649641272Z",
          "updated_at": "2025-09-15T03:33:42.649641272Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "ai.waystation/slack",
      "description": "Send messages, access channels, and manage files in your Slack workspace.",
      "status": "active",
      "repository": {
        "url": "https://github.com/waystation-ai/mcp",
        "source": "github"
      },
      "version": "0.3.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://waystation.ai/slack/mcp"
        },
        {
          "type": "sse",
          "url": "https://waystation.ai/slack/mcp/sse"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "7a6efd6d-130c-4586-9399-376f11836b1a",
          "published_at": "2025-09-09T14:32:49.571767151Z",
          "updated_at": "2025-09-09T14:32:49.571767151Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.ryanbaumann/platform-ai",
      "description": "Google Maps Platform Code Assist MCP",
      "status": "active",
      "repository": {
        "url": "https://github.com/googlemaps/platform-ai",
        "source": "github"
      },
      "version": "0.2.0",
      "packages": [
        {
          "registry_type": "npm",
          "identifier": "@googlemaps/code-assist-mcp",
          "version": "0.2.0",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "7b66d3bf-72fa-4832-87fa-c80a60668aae",
          "published_at": "2025-09-10T17:56:34.808006126Z",
          "updated_at": "2025-09-10T17:56:34.808006126Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "ai.smithery/morosss-sdfsdf",
      "description": "Find academic papers across major sources like arXiv, PubMed, bioRxiv, and more. Download PDFs whe…",
      "status": "active",
      "repository": {
        "url": "https://github.com/morosss/sdfsdf",
        "source": "github"
      },
      "version": "1.14.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@morosss/sdfsdf/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "7bc56184-ea78-465a-863c-76c9fe7e48a8",
          "published_at": "2025-09-13T17:26:11.858999857Z",
          "updated_at": "2025-09-13T17:26:11.858999857Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.henilcalagiya/google-sheets-mcp",
      "description": "Powerful tools for automating Google Sheets using Model Context Protocol (MCP)",
      "status": "active",
      "repository": {
        "url": "https://github.com/henilcalagiya/google-sheets-mcp",
        "source": "github"
      },
      "version": "0.1.6",
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "google-sheets-mcp",
          "version": "0.1.6",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "7bf7e778-039a-4420-b96b-c614bef2f879",
          "published_at": "2025-09-11T05:56:37.073750488Z",
          "updated_at": "2025-09-11T05:56:37.073750488Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.b1ff/atlassian-dc-mcp-jira",
      "description": "MCP server for Atlassian Jira Data Center - search, view, and create issues",
      "status": "active",
      "repository": {
        "url": "https://github.com/b1ff/atlassian-dc-mcp",
        "source": "github"
      },
      "version": "0.9.7",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@atlassian-dc-mcp/jira",
          "version": "0.9.7",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Jira host domain (e.g. your-instance.atlassian.net)",
              "format": "string",
              "name": "JIRA_HOST"
            },
            {
              "description": "Jira API base path (alternative to JIRA_HOST)",
              "format": "string",
              "name": "JIRA_API_BASE_PATH"
            },
            {
              "description": "Jira Personal Access Token or API token",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "JIRA_API_TOKEN"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "7c414dfb-e7f1-4456-b296-0fd9f6cfc2ad",
          "published_at": "2025-09-13T13:17:32.827442866Z",
          "updated_at": "2025-09-13T13:18:50.721430383Z",
          "is_latest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.mickymultani/crypto-bytes",
      "description": "Crypto Bytes MCP Server",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.1.1",
      "packages": [
        {
          "registry_type": "pypi",
          "identifier": "crypto_bytes_mcp_server",
          "version": "0.1.1",
          "runtime_hint": "python",
          "transport": {
            "type": "stdio"
          },
          "runtime_arguments": [
            {
              "value": "-m",
              "type": "positional"
            },
            {
              "value": "crypto_bytes_mcp_server",
              "type": "positional"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "7e37fcc2-e95f-4f4e-a104-b7c617fbf3dc",
          "published_at": "2025-09-12T01:24:42.862303085Z",
          "updated_at": "2025-09-12T01:24:42.862303085Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.gradion-ai/ipybox",
      "description": "An MCP server for sandboxed Python code execution with IPython and Docker, and file transfer.",
      "status": "active",
      "repository": {
        "url": "https://github.com/gradion-ai/ipybox",
        "source": "github"
      },
      "version": "0.6.5",
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "ipybox",
          "version": "0.6.5",
          "runtime_hint": "uvx",
          "transport": {
            "type": "stdio"
          },
          "package_arguments": [
            {
              "description": "Required MCP server subcommand",
              "is_required": true,
              "value": "mcp",
              "type": "positional"
            },
            {
              "description": "Directory allowed for host filesystem operations",
              "type": "named",
              "name": "--allowed-dir",
              "is_repeated": true,
              "value_hint": "directory_path"
            },
            {
              "description": "Domain, IP address, or CIDR range allowed for outbound network access",
              "type": "named",
              "name": "--allowed-domain",
              "is_repeated": true,
              "value_hint": "domain_or_ip"
            },
            {
              "description": "Docker image tag to use",
              "type": "named",
              "name": "--container-tag",
              "value_hint": "docker_image_tag"
            },
            {
              "description": "Environment variable for container (KEY=VALUE format)",
              "type": "named",
              "name": "--container-env-var",
              "is_repeated": true,
              "value_hint": "env_var"
            },
            {
              "description": "Path to file containing container environment variables",
              "type": "named",
              "name": "--container-env-file",
              "value_hint": "file_path"
            },
            {
              "description": "Bind mount for container (host_path:container_path format)",
              "type": "named",
              "name": "--container-bind",
              "is_repeated": true,
              "value_hint": "bind_mount"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "7ee8d214-db7f-450d-93c7-c941d8196e03",
          "published_at": "2025-09-14T09:27:10.026612503Z",
          "updated_at": "2025-09-14T09:57:57.966657748Z",
          "is_latest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "ai.smithery/kwp-lab-rss-reader-mcp",
      "description": "Track and browse RSS feeds with ease. Fetch the latest entries from any feed URL and extract full…",
      "status": "active",
      "repository": {
        "url": "https://github.com/kwp-lab/rss-reader-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@kwp-lab/rss-reader-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "7f80c7e7-1906-4315-a639-9a82089224b2",
          "published_at": "2025-09-10T17:02:25.896522471Z",
          "updated_at": "2025-09-10T17:02:25.896522471Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "ai.smithery/BigVik193-reddit-user-mcp",
      "description": "Browse and manage Reddit posts, comments, and threads. Fetch user activity, explore hot/new/rising…",
      "status": "active",
      "repository": {
        "url": "https://github.com/BigVik193/reddit-user-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@BigVik193/reddit-user-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "80990c6c-9b96-4c8c-ad64-0cc19f78bc8d",
          "published_at": "2025-09-14T21:19:18.649080266Z",
          "updated_at": "2025-09-14T21:19:18.649080266Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "ai.toolprint/hypertool-mcp",
      "description": "Dynamically expose tools from proxied servers based on an Agent Persona",
      "status": "active",
      "repository": {
        "url": "https://github.com/toolprint/hypertool-mcp",
        "source": "github"
      },
      "version": "0.0.42",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@toolprint/hypertool-mcp",
          "version": "0.0.42",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "8177937a-2aa9-4956-8578-5e07976a1e25",
          "published_at": "2025-09-10T22:05:20.655840343Z",
          "updated_at": "2025-09-10T22:05:20.655840343Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.xkelxmc/uranium-mcp",
      "description": "MCP for Uranium NFT tools to mint, list, and manage digital assets on the permaweb.",
      "status": "active",
      "repository": {
        "url": "https://github.com/xkelxmc/uranium-mcp",
        "source": "github"
      },
      "version": "1.0.8",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "uranium-tools-mcp",
          "version": "1.0.8",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "You can generate an API key from your Uranium account settings: https://portal.uranium.pro/dashboard/profile/api-keys",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "URANIUM_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "8296f9ff-65ab-431a-8368-d348330ec141",
          "published_at": "2025-09-12T06:37:08.768329657Z",
          "updated_at": "2025-09-12T06:40:04.125900265Z",
          "is_latest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "ai.mcpcap/mcpcap",
      "description": "An MCP server for analyzing PCAP files.",
      "status": "active",
      "repository": {
        "url": "https://github.com/mcpcap/mcpcap",
        "source": "github"
      },
      "version": "0.5.9",
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "mcpcap",
          "version": "0.4.4",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "83673f9d-7093-4f48-b57c-34f21f774802",
          "published_at": "2025-09-12T04:48:10.687272107Z",
          "updated_at": "2025-09-12T05:10:59.819863662Z",
          "is_latest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.xkelxmc/uranium-mcp",
      "description": "MCP for Uranium NFT tools to mint, list, and manage digital assets on the permaweb.",
      "status": "active",
      "repository": {
        "url": "https://github.com/xkelxmc/uranium-mcp",
        "source": "github"
      },
      "version": "1.0.9",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "uranium-tools-mcp",
          "version": "1.0.9",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "You can generate an API key from your Uranium account settings: https://portal.uranium.pro/dashboard/profile/api-keys",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "URANIUM_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "83791fdd-0f24-4050-800c-0eb432e14022",
          "published_at": "2025-09-12T06:40:04.121499157Z",
          "updated_at": "2025-09-12T06:40:04.121499157Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "ai.smithery/demomagic-duckchain-mcp",
      "description": "Explore blockchain data across addresses, tokens, blocks, and transactions. Investigate any transa…",
      "status": "active",
      "repository": {
        "url": "https://github.com/demomagic/duckchain-mcp",
        "source": "github"
      },
      "version": "1.13.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@demomagic/duckchain-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "857bf329-eeca-4c11-aeb9-2f82f5a1fa24",
          "published_at": "2025-09-14T05:32:58.075993678Z",
          "updated_at": "2025-09-14T05:32:58.075993678Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.kevint-cerebras/cerebras-code-mcp",
      "description": "Model Context Protocol (MCP) server for Cerebras to make coding faster in AI-first IDEs",
      "status": "active",
      "repository": {
        "url": "https://github.com/kevint-cerebras/cerebras-code-mcp",
        "source": "github"
      },
      "version": "1.3.1",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "cerebras-code-mcp",
          "version": "1.3.1",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your Cerebras API key from cloud.cerebras.ai",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "CEREBRAS_API_KEY"
            },
            {
              "description": "Optional OpenRouter API key for fallback when Cerebras rate limits are hit",
              "format": "string",
              "is_secret": true,
              "name": "OPENROUTER_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "86627f06-52cf-41a8-8121-b1cfbea8f542",
          "published_at": "2025-09-09T19:59:53.502109932Z",
          "updated_at": "2025-09-09T19:59:53.502109932Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.joelverhagen/Knapcode.SampleMcpServer/aot",
      "description": "A sample MCP server using the MCP C# SDK. Generates random numbers and random weather.",
      "repository": {
        "url": "https://github.com/joelverhagen/Knapcode.SampleMcpServer.git",
        "source": "github"
      },
      "version": "0.8.0-beta",
      "packages": [
        {
          "registry_type": "nuget",
          "registry_base_url": "https://api.nuget.org",
          "identifier": "Knapcode.SampleMcpServer",
          "version": "0.8.0-beta",
          "transport": {
            "type": "stdio"
          },
          "package_arguments": [
            {
              "value": "mcp",
              "type": "positional",
              "value_hint": "mcp"
            },
            {
              "value": "start",
              "type": "positional",
              "value_hint": "start"
            }
          ],
          "environment_variables": [
            {
              "value": "{weather_choices}",
              "variables": {
                "weather_choices": {
                  "description": "Comma separated list of weather descriptions to randomly select.",
                  "is_required": true
                }
              },
              "name": "WEATHER_CHOICES"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "86667e38-34da-44eb-a0ce-e34112fd98c6",
          "published_at": "2025-09-12T21:54:51.656512708Z",
          "updated_at": "2025-09-12T21:54:51.656512708Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.kkjdaniel/bgg-mcp",
      "description": "BoardGameGeek MCP server providing access to BGG API data through standardized tools",
      "status": "active",
      "repository": {
        "url": "https://github.com/kkjdaniel/bgg-mcp",
        "source": "github"
      },
      "version": "1.3.2",
      "packages": [
        {
          "registry_type": "oci",
          "registry_base_url": "https://docker.io",
          "identifier": "kdaniel/bgg-mcp",
          "version": "1.3.2",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your BoardGameGeek username for references such as ME or MY in prompts",
              "format": "string",
              "name": "BGG_USERNAME"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "868fcbf0-a0d5-40fc-ab05-90150f408d12",
          "published_at": "2025-09-15T00:05:40.274408146Z",
          "updated_at": "2025-09-15T00:05:40.274408146Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "ai.smithery/Hint-Services-obsidian-github-mcp",
      "description": "Connect AI assistants to your GitHub-hosted Obsidian vault to seamlessly access, search, and analy…",
      "status": "active",
      "repository": {
        "url": "https://github.com/Hint-Services/obsidian-github-mcp",
        "source": "github"
      },
      "version": "0.4.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@Hint-Services/obsidian-github-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "86a34c13-67d8-4c36-9b29-47fee0e72635",
          "published_at": "2025-09-14T15:20:36.371442208Z",
          "updated_at": "2025-09-14T15:20:36.371442208Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "net.gepuro.mcp-company-lens-v1/company-lens-mcp-registry",
      "description": "Search Japanese company database",
      "status": "active",
      "repository": {
        "url": "https://github.com/gepuro/company-lens-mcp-registry",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp-company-lens-v1.gepuro.net/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "87793efe-79b4-4e91-8012-6a5cc6abe61e",
          "published_at": "2025-09-13T02:14:01.9221662Z",
          "updated_at": "2025-09-13T02:14:01.9221662Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "ai.smithery/smithery-ai-slack",
      "description": "Enable interaction with Slack workspaces. Supports subscribing to Slack events through Resources.",
      "status": "active",
      "repository": {
        "url": "https://github.com/smithery-ai/mcp-servers",
        "source": "github",
        "subfolder": "slack"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@smithery-ai/slack/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "87df9cc3-6c2b-40c4-8087-7644b05f005d",
          "published_at": "2025-09-10T20:56:36.643850073Z",
          "updated_at": "2025-09-10T20:56:36.643850073Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "com.mintmcp/outlook-email",
      "description": "A MCP server for Outlook email that lets you search, read, and draft emails and replies.",
      "status": "active",
      "repository": {
        "url": "https://github.com/mintmcp/servers",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://outlook-email.mintmcp.com/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "881c11dc-c6c4-4bdb-8baf-17c32f1e611b",
          "published_at": "2025-09-09T19:59:31.832251453Z",
          "updated_at": "2025-09-09T20:02:38.029140257Z",
          "is_latest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.mobile-next/mobile-mcp",
      "description": "MCP server for iOS and Android Mobile Development, Automation and Testing",
      "status": "active",
      "repository": {
        "url": "https://github.com/mobile-next/mobile-mcp",
        "source": "github"
      },
      "version": "0.0.26",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@mobilenext/mobile-mcp",
          "version": "0.0.26",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "name": ""
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "89304685-3f90-4915-9b41-7742cf94b56a",
          "published_at": "2025-09-09T06:51:49.988573415Z",
          "updated_at": "2025-09-09T06:51:49.988573415Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.surendranb/google-analytics-mcp",
      "description": "An MCP server that provides [describe what your server does]",
      "status": "active",
      "repository": {
        "url": "https://github.com/surendranb/google-analytics-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "google-analytics-mcp",
          "version": "1.2.0",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your API key for the service",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "YOUR_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "89606265-25b6-4e44-8c36-0988fd23211c",
          "published_at": "2025-09-09T06:10:41.49026764Z",
          "updated_at": "2025-09-09T06:10:41.49026764Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "com.mintmcp/gcal",
      "description": "A MCP server that works with Google Calendar to manage event listing, reading, and updates.",
      "status": "active",
      "repository": {
        "url": "https://github.com/mintmcp/mcp",
        "source": "github"
      },
      "version": "1.0.2",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://gcal.mintmcp.com/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "899391c2-e787-4df6-9788-0fcb0e1f086d",
          "published_at": "2025-09-09T19:36:27.962358954Z",
          "updated_at": "2025-09-09T19:42:00.468110436Z",
          "is_latest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.gradion-ai/ipybox",
      "description": "An MCP server for sandboxed Python code execution with IPython and Docker, and file transfer.",
      "status": "active",
      "repository": {
        "url": "https://github.com/gradion-ai/ipybox",
        "source": "github"
      },
      "version": "0.6.3-p2",
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "ipybox",
          "version": "0.6.3-p2",
          "runtime_hint": "uvx",
          "transport": {
            "type": "stdio"
          },
          "package_arguments": [
            {
              "description": "Required MCP server subcommand",
              "is_required": true,
              "value": "mcp",
              "type": "positional"
            },
            {
              "description": "Directory allowed for host filesystem operations",
              "type": "named",
              "name": "--allowed-dir",
              "is_repeated": true,
              "value_hint": "directory_path"
            },
            {
              "description": "Domain, IP address, or CIDR range allowed for outbound network access",
              "type": "named",
              "name": "--allowed-domain",
              "is_repeated": true,
              "value_hint": "domain_or_ip"
            },
            {
              "description": "Docker image tag to use",
              "type": "named",
              "name": "--container-tag",
              "value_hint": "docker_image_tag"
            },
            {
              "description": "Environment variable for container (KEY=VALUE format)",
              "type": "named",
              "name": "--container-env-var",
              "is_repeated": true,
              "value_hint": "env_var"
            },
            {
              "description": "Path to file containing container environment variables",
              "type": "named",
              "name": "--container-env-file",
              "value_hint": "file_path"
            },
            {
              "description": "Bind mount for container (host_path:container_path format)",
              "type": "named",
              "name": "--container-bind",
              "is_repeated": true,
              "value_hint": "bind_mount"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "89da352b-cb6c-4940-89bd-45b58a4740d3",
          "published_at": "2025-09-14T08:12:36.178778068Z",
          "updated_at": "2025-09-14T08:12:36.178778068Z",
          "is_latest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "ai.smithery/DynamicEndpoints-autogen_mcp",
      "description": "Create and manage AI agents that collaborate and solve problems through natural language interacti…",
      "status": "active",
      "repository": {
        "url": "https://github.com/DynamicEndpoints/Autogen_MCP",
        "source": "github"
      },
      "version": "0.3.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@DynamicEndpoints/autogen_mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "8d07348b-fc98-4ddd-8fa3-31502600c39c",
          "published_at": "2025-09-11T13:57:38.185529674Z",
          "updated_at": "2025-09-11T13:57:38.185529674Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.savhascelik/meta-api-mcp-server",
      "description": "A configuration-driven Meta API Gateway server for the Model Context Protocol (MCP).",
      "status": "active",
      "repository": {
        "url": "https://github.com/savhascelik/meta-api-mcp-server",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "meta-api-mcp-server",
          "version": "1.0.4",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "If the api you are connecting to requires api_key, you can use this variable and you can also define different variables",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "YOUR_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "8d2ec6b3-7e55-40b9-8d76-7e45f5063e29",
          "published_at": "2025-09-09T04:02:19.493255754Z",
          "updated_at": "2025-09-09T04:14:51.989316259Z",
          "is_latest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.GLips/Figma-Context-MCP",
      "description": "Give your coding agent access to your Figma data. Implement designs in any framework in one-shot.",
      "status": "active",
      "repository": {
        "url": "https://github.com/GLips/Figma-Context-MCP",
        "source": "github"
      },
      "version": "0.6.0",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "figma-developer-mcp",
          "version": "0.6.0",
          "transport": {
            "type": "stdio"
          },
          "package_arguments": [
            {
              "value": "--stdio",
              "type": "positional"
            }
          ],
          "environment_variables": [
            {
              "description": "Your Figma Personal Access Token, learn more here: https://www.figma.com/developers/api#access-tokens",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "FIGMA_API_KEY"
            },
            {
              "description": "Start the server in stdio mode, keep as CLI",
              "default": "cli",
              "name": "NODE_ENV"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "8e307ce2-4847-4aa9-952f-22017f14f7ef",
          "published_at": "2025-09-09T16:40:36.136529165Z",
          "updated_at": "2025-09-09T16:40:36.136529165Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.b1ff/atlassian-dc-mcp-bitbucket",
      "description": "MCP server for Atlassian Bitbucket Data Center - interact with repositories and code",
      "status": "active",
      "repository": {
        "url": "https://github.com/b1ff/atlassian-dc-mcp",
        "source": "github"
      },
      "version": "0.9.8",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@atlassian-dc-mcp/bitbucket",
          "version": "0.9.8",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Bitbucket host domain (e.g. your-instance.atlassian.net)",
              "format": "string",
              "name": "BITBUCKET_HOST"
            },
            {
              "description": "Bitbucket API base path (alternative to BITBUCKET_HOST)",
              "format": "string",
              "name": "BITBUCKET_API_BASE_PATH"
            },
            {
              "description": "Bitbucket Personal Access Token or API token",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "BITBUCKET_API_TOKEN"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "8f91d610-22eb-4116-9fb7-413af6d27c0a",
          "published_at": "2025-09-13T13:18:51.361262856Z",
          "updated_at": "2025-09-13T13:29:18.892466109Z",
          "is_latest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "ai.shawndurrani/mcp-registry",
      "description": "Search the public MCP Registry; discover servers and copy SSE URLs.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.1.0",
      "remotes": [
        {
          "type": "sse",
          "url": "https://mcp-registry.shawndurrani.ai/sse"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "8fc6704f-44b1-4c4b-9046-40bf54316419",
          "published_at": "2025-09-15T03:11:16.637453593Z",
          "updated_at": "2025-09-15T04:01:11.068068105Z",
          "is_latest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "com.pulsemcp.servers/pulse-fetch",
      "description": "MCP server that extracts clean, structured content from web pages with anti-bot bypass capabilities.",
      "status": "active",
      "repository": {
        "url": "https://github.com/pulsemcp/mcp-servers",
        "source": "github",
        "subfolder": "productionized/pulse-fetch"
      },
      "version": "0.2.14",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@pulsemcp/pulse-fetch",
          "version": "0.2.14",
          "runtime_hint": "npx",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "API key for Firecrawl service to bypass anti-bot measures",
              "is_secret": true,
              "name": "FIRECRAWL_API_KEY"
            },
            {
              "description": "Bearer token for BrightData Web Unlocker service",
              "is_secret": true,
              "name": "BRIGHTDATA_API_KEY"
            },
            {
              "description": "Path to markdown file containing scraping strategy configuration",
              "default": "/tmp/pulse-fetch/strategy.md",
              "name": "STRATEGY_CONFIG_PATH"
            },
            {
              "description": "Optimization strategy for scraping: cost or speed",
              "default": "cost",
              "choices": [
                "cost",
                "speed"
              ],
              "name": "OPTIMIZE_FOR"
            },
            {
              "description": "Storage backend for saved resources: memory or filesystem",
              "default": "memory",
              "choices": [
                "memory",
                "filesystem"
              ],
              "name": "MCP_RESOURCE_STORAGE"
            },
            {
              "description": "Directory for filesystem storage (only used with filesystem type)",
              "default": "/tmp/pulse-fetch/resources",
              "name": "MCP_RESOURCE_FILESYSTEM_ROOT"
            },
            {
              "description": "Skip API authentication health checks at startup",
              "format": "boolean",
              "default": "false",
              "name": "SKIP_HEALTH_CHECKS"
            },
            {
              "description": "LLM provider for extract feature: anthropic, openai, openai-compatible",
              "choices": [
                "anthropic",
                "openai",
                "openai-compatible"
              ],
              "name": "LLM_PROVIDER"
            },
            {
              "description": "API key for the chosen LLM provider",
              "is_secret": true,
              "name": "LLM_API_KEY"
            },
            {
              "description": "Base URL for OpenAI-compatible providers",
              "name": "LLM_API_BASE_URL"
            },
            {
              "description": "Specific model to use for extraction",
              "name": "LLM_MODEL"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "91091a5c-39bf-499b-a706-7036631faff1",
          "published_at": "2025-09-09T00:19:19.119117909Z",
          "updated_at": "2025-09-09T00:19:19.119117909Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "ai.smithery/BigVik193-reddit-ads-mcp-api",
      "description": "Manage Reddit advertising end to end across accounts, funding methods, campaigns, ad groups, and a…",
      "status": "active",
      "repository": {
        "url": "https://github.com/BigVik193/reddit-ads-mcp-api",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@BigVik193/reddit-ads-mcp-api/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "92fb64f2-8006-4551-bb6d-ed2b87b65887",
          "published_at": "2025-09-14T22:40:30.852738154Z",
          "updated_at": "2025-09-14T22:40:30.852738154Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.yuna0x0/hackmd-mcp",
      "description": "A Model Context Protocol server for integrating HackMD's note-taking platform with AI assistants.",
      "status": "active",
      "repository": {
        "url": "https://github.com/yuna0x0/hackmd-mcp",
        "source": "github"
      },
      "version": "1.4.2",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "hackmd-mcp",
          "version": "1.4.2",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your HackMD API token for API authentication",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "HACKMD_API_TOKEN"
            },
            {
              "description": "Optional HackMD API URL, defaults to https://api.hackmd.io/v1",
              "format": "string",
              "default": "https://api.hackmd.io/v1",
              "name": "HACKMD_API_URL"
            }
          ]
        },
        {
          "registry_type": "oci",
          "registry_base_url": "https://docker.io",
          "identifier": "yuna0x0/hackmd-mcp",
          "version": "1.4.2",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your HackMD API token for API authentication",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "HACKMD_API_TOKEN"
            },
            {
              "description": "Optional HackMD API URL, defaults to https://api.hackmd.io/v1",
              "format": "string",
              "default": "https://api.hackmd.io/v1",
              "name": "HACKMD_API_URL"
            }
          ]
        },
        {
          "registry_type": "mcpb",
          "identifier": "https://github.com/yuna0x0/hackmd-mcp/releases/download/v1.4.2/hackmd-mcp-1.4.2.mcpb",
          "version": "1.4.2",
          "file_sha256": "7b6ee105271d8595e3e5a0a3e4f9075ab3a2b7b373f529f4c3e99d1f93dead62",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your HackMD API token for API authentication",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "HACKMD_API_TOKEN"
            },
            {
              "description": "Optional HackMD API URL, defaults to https://api.hackmd.io/v1",
              "format": "string",
              "default": "https://api.hackmd.io/v1",
              "name": "HACKMD_API_URL"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "93c43441-0cd8-4fad-b46d-28887997e1d2",
          "published_at": "2025-09-13T08:20:45.650204026Z",
          "updated_at": "2025-09-15T03:10:53.114708285Z",
          "is_latest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "ai.waystation/office",
      "description": "Create, edit, and collaborate on Office documents and spreadsheets.",
      "status": "active",
      "repository": {
        "url": "https://github.com/waystation-ai/mcp",
        "source": "github"
      },
      "version": "0.3.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://waystation.ai/office/mcp"
        },
        {
          "type": "sse",
          "url": "https://waystation.ai/office/mcp/sse"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "94689419-d526-4008-b0df-d79635930fa1",
          "published_at": "2025-09-09T14:32:54.33420243Z",
          "updated_at": "2025-09-09T14:32:54.33420243Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.b1ff/atlassian-dc-mcp-jira",
      "description": "MCP server for Atlassian Jira Data Center - search, view, and create issues",
      "status": "active",
      "repository": {
        "url": "https://github.com/b1ff/atlassian-dc-mcp",
        "source": "github"
      },
      "version": "0.9.0",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@atlassian-dc-mcp/jira",
          "version": "0.9.0",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Jira host domain (e.g. your-instance.atlassian.net)",
              "format": "string",
              "name": "JIRA_HOST"
            },
            {
              "description": "Jira API base path (alternative to JIRA_HOST)",
              "format": "string",
              "name": "JIRA_API_BASE_PATH"
            },
            {
              "description": "Jira Personal Access Token or API token",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "JIRA_API_TOKEN"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "94c0be03-60cf-45e3-9f6e-db4ad643f243",
          "published_at": "2025-09-13T11:40:51.735988794Z",
          "updated_at": "2025-09-13T13:17:32.83365354Z",
          "is_latest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.himorishige/hatago-mcp-hub",
      "description": "Unified MCP Hub for managing multiple Model Context Protocol servers",
      "status": "active",
      "repository": {
        "url": "https://github.com/himorishige/hatago-mcp-hub",
        "source": "github"
      },
      "version": "0.0.13",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@himorishige/hatago-mcp-hub",
          "version": "0.0.13",
          "runtime_hint": "npx",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "94cfdee1-6a62-4d40-8bf4-dab7646d4548",
          "published_at": "2025-09-13T14:40:04.386322089Z",
          "updated_at": "2025-09-14T07:53:18.719599831Z",
          "is_latest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.priyankark/lighthouse-mcp",
      "description": "MCP server for Google Lighthouse performance metrics",
      "status": "active",
      "repository": {
        "url": "https://github.com/priyankark/lighthouse-mcp",
        "source": "github"
      },
      "version": "0.1.9",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "lighthouse-mcp",
          "version": "0.1.9",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "94d6b736-48d0-46f1-909f-9ce1dd82851e",
          "published_at": "2025-09-09T10:02:57.086660409Z",
          "updated_at": "2025-09-09T10:02:57.086660409Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.jkakar/recipe-mcp",
      "description": "Generate and remix recipes using cookwith.co",
      "status": "active",
      "repository": {
        "url": "https://github.com/blaideinc/recipe-mcp",
        "source": "github"
      },
      "version": "1.0.3",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@cookwith/recipe-mcp",
          "version": "1.0.3",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "94e6cd5b-6def-4054-bf2d-91c8c31205a5",
          "published_at": "2025-09-11T18:30:58.5302013Z",
          "updated_at": "2025-09-11T18:33:51.807883948Z",
          "is_latest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "md.install/try",
      "description": "Create guides to instruct coding agents to use your software (SDK, library, framework, API, etc).",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.1.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://install.md/mcp/try"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "95109f0a-8fb4-45ef-93d1-8c38874c2be7",
          "published_at": "2025-09-09T07:04:48.602631925Z",
          "updated_at": "2025-09-09T07:10:11.210375884Z",
          "is_latest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.p1va/symbols",
      "description": "MCP server to read, inspect and troubleshoot codebase symbols",
      "status": "active",
      "repository": {
        "url": "https://github.com/p1va/symbols",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@p1va/symbols",
          "version": "0.0.10",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "95837ebe-5fcd-4692-8020-5920d760d47c",
          "published_at": "2025-09-12T16:29:27.100278154Z",
          "updated_at": "2025-09-12T16:29:27.100278154Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "com.onkernel/kernel-mcp-server",
      "description": "Access Kernel's cloud-based browsers and app actions via MCP (remote HTTP + OAuth).",
      "status": "active",
      "repository": {
        "url": "https://github.com/onkernel/kernel-mcp-server",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.onkernel.com/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "95fc358c-7c94-4f0f-ad50-e7e516940dba",
          "published_at": "2025-09-09T18:04:37.61770657Z",
          "updated_at": "2025-09-09T18:04:37.61770657Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.ruvnet/claude-flow",
      "description": "AI orchestration with hive-mind swarms, neural networks, and 87 MCP tools for enterprise dev.",
      "status": "active",
      "repository": {
        "url": "https://github.com/ruvnet/claude-flow",
        "source": "github"
      },
      "version": "2.0.0-alpha.106",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "claude-flow",
          "version": "2.0.0-alpha.106",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Anthropic API key for Claude AI models",
              "format": "string",
              "is_secret": true,
              "name": "ANTHROPIC_API_KEY"
            },
            {
              "description": "Operation mode: development, production, or test",
              "format": "string",
              "name": "CLAUDE_FLOW_MODE"
            },
            {
              "description": "Path for persistent memory storage",
              "format": "string",
              "name": "CLAUDE_FLOW_MEMORY_PATH"
            },
            {
              "description": "Maximum number of concurrent agents",
              "format": "string",
              "name": "CLAUDE_FLOW_MAX_AGENTS"
            },
            {
              "description": "MCP server port",
              "format": "string",
              "name": "CLAUDE_FLOW_PORT"
            },
            {
              "description": "GitHub personal access token for repository operations",
              "format": "string",
              "is_secret": true,
              "name": "GITHUB_TOKEN"
            },
            {
              "description": "Flow Nexus cloud platform API key",
              "format": "string",
              "is_secret": true,
              "name": "FLOW_NEXUS_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "9623b70e-af1d-48ac-8338-e37ef96ca8cf",
          "published_at": "2025-09-10T16:55:33.070739114Z",
          "updated_at": "2025-09-10T16:59:34.223138386Z",
          "is_latest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.shinpr/mcp-image",
      "description": "AI image generation MCP server using Nano Banana with intelligent prompt enhancement",
      "status": "active",
      "repository": {
        "url": "https://github.com/shinpr/mcp-image",
        "source": "github"
      },
      "version": "0.2.3",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "mcp-image",
          "version": "0.2.3",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Google Gemini API key for image generation (get from https://aistudio.google.com/apikey)",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "GEMINI_API_KEY"
            },
            {
              "description": "Absolute path to directory where generated images will be saved (defaults to ./output)",
              "format": "string",
              "name": "IMAGE_OUTPUT_DIR"
            },
            {
              "description": "Set to 'true' to disable automatic prompt optimization and use direct prompts",
              "format": "boolean",
              "name": "SKIP_PROMPT_ENHANCEMENT"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "96cb8c0c-c096-4fa3-bc84-2e34a14f4f81",
          "published_at": "2025-09-12T00:28:17.174731889Z",
          "updated_at": "2025-09-12T00:28:17.174731889Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.bytedance/mcp-server-commands",
      "description": "An MCP server to run arbitrary commands",
      "status": "active",
      "repository": {
        "url": "https://github.com/bytedance/UI-TARS-desktop",
        "source": "github",
        "subfolder": "packages/agent-infra/mcp-servers/commands"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@agent-infra/mcp-server-commands",
          "version": "latest",
          "transport": {
            "type": "stdio"
          },
          "package_arguments": [
            {
              "description": "current working directory",
              "format": "string",
              "type": "named",
              "name": "cwd"
            }
          ]
        },
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@agent-infra/mcp-server-commands",
          "version": "latest",
          "runtime_hint": "npx",
          "transport": {
            "type": "sse",
            "url": "http://127.0.0.1:{port}/sse"
          },
          "package_arguments": [
            {
              "description": "current working directory",
              "format": "string",
              "type": "named",
              "name": "cwd"
            },
            {
              "description": "Server port number",
              "is_required": true,
              "format": "number",
              "default": "8089",
              "type": "named",
              "name": "port"
            }
          ]
        },
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@agent-infra/mcp-server-commands",
          "version": "latest",
          "runtime_hint": "npx",
          "transport": {
            "type": "streamable-http",
            "url": "http://127.0.0.1:{port}/mcp"
          },
          "runtime_arguments": [
            {
              "description": "current working directory",
              "format": "string",
              "type": "named",
              "name": "cwd"
            }
          ],
          "package_arguments": [
            {
              "description": "Server port number",
              "is_required": true,
              "format": "number",
              "default": "8089",
              "type": "named",
              "name": "port"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "97337d30-5e47-421e-9599-30487d21ea45",
          "published_at": "2025-09-09T06:16:30.41372415Z",
          "updated_at": "2025-09-09T06:16:30.41372415Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.coupler/remote-mcp-server",
      "description": "Coupler.io remote MCP server",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.0.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.coupler.io/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "975e0708-c43d-42ba-a27f-6d69f7c8e91a",
          "published_at": "2025-09-10T16:12:03.417415684Z",
          "updated_at": "2025-09-10T16:12:03.417415684Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "ai.smithery/jirispilka-actors-mcp-server",
      "description": "Greet anyone by name with friendly, personalized messages. Explore the origin of Hello, World thro…",
      "status": "active",
      "repository": {
        "url": "https://github.com/jirispilka/actors-mcp-server",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@jirispilka/actors-mcp-server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "983ebbb0-1365-44c9-9832-edafca128508",
          "published_at": "2025-09-11T11:59:13.452963424Z",
          "updated_at": "2025-09-11T11:59:13.452963424Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.bytedance/mcp-server-filesystem",
      "description": "MCP server for filesystem access",
      "status": "active",
      "repository": {
        "url": "https://github.com/bytedance/UI-TARS-desktop",
        "source": "github",
        "subfolder": "packages/agent-infra/mcp-servers/filesystem"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@agent-infra/mcp-server-filesystem",
          "version": "latest",
          "transport": {
            "type": "stdio"
          },
          "package_arguments": [
            {
              "description": "Comma-separated list of allowed directories for file operations",
              "is_required": true,
              "format": "string",
              "type": "named",
              "name": "allowed-directories"
            }
          ]
        },
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@agent-infra/mcp-server-filesystem",
          "version": "latest",
          "runtime_hint": "npx",
          "transport": {
            "type": "sse",
            "url": "http://127.0.0.1:{port}/sse"
          },
          "package_arguments": [
            {
              "description": "Comma-separated list of allowed directories for file operations",
              "is_required": true,
              "format": "string",
              "type": "named",
              "name": "allowed-directories"
            },
            {
              "description": "Server port number",
              "is_required": true,
              "format": "number",
              "default": "8089",
              "type": "named",
              "name": "port"
            }
          ]
        },
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@agent-infra/mcp-server-filesystem",
          "version": "latest",
          "runtime_hint": "npx",
          "transport": {
            "type": "streamable-http",
            "url": "http://127.0.0.1:{port}/mcp"
          },
          "package_arguments": [
            {
              "description": "Comma-separated list of allowed directories for file operations",
              "is_required": true,
              "format": "string",
              "type": "named",
              "name": "allowed-directories"
            },
            {
              "description": "Server port number",
              "is_required": true,
              "format": "number",
              "default": "8089",
              "type": "named",
              "name": "port"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "987b074f-a2ca-493d-9830-7ccb0b5bd165",
          "published_at": "2025-09-09T06:16:36.369747535Z",
          "updated_at": "2025-09-09T06:16:36.369747535Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.shalevshalit/image-recongnition-mcp",
      "description": "MCP server for AI-powered image recognition and description using OpenAI vision models.",
      "status": "active",
      "repository": {
        "url": "https://github.com/mcp-s-ai/image-recongnition-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "image-recongnition-mcp",
          "version": "1.0.4",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your OpenAI API key for image recognition and description services",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "OPENAI_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "98c4bba3-1c5d-4981-8ba5-6cda90f78c32",
          "published_at": "2025-09-10T15:01:36.626715571Z",
          "updated_at": "2025-09-10T15:01:36.626715571Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "com.enigma/enigma-mcp-server",
      "description": "An MCP server that provides access to trusted data about business identity and activity",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.enigma.com/http"
        },
        {
          "type": "streamable-http",
          "url": "https://mcp.enigma.com/http-token",
          "headers": [
            {
              "description": "Bearer token of Enigma API key. Used to enable authentication without presenting the user with an oAuth login.",
              "is_required": true,
              "is_secret": true,
              "name": "X-API-Key"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://mcp.enigma.com/sse"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "98f794d9-0a3c-432d-a8d2-3c5cb80eae2d",
          "published_at": "2025-09-10T19:14:36.3625643Z",
          "updated_at": "2025-09-10T19:14:36.3625643Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "info.mosaique/mcp",
      "description": "Search and list latest international news (sources, comments, knowledge graph).",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.mosaique.info",
          "headers": [
            {
              "description": "API key for authentication",
              "is_required": true,
              "is_secret": true,
              "name": "X-API-Key"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "999c8e2e-e96b-460c-9e98-f90a7603145c",
          "published_at": "2025-09-10T18:15:03.198216658Z",
          "updated_at": "2025-09-10T18:15:03.198216658Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.Selenium39/mcp-server-tempmail",
      "description": "MCP server for temporary email management using ChatTempMail API",
      "status": "active",
      "repository": {
        "url": "https://github.com/Selenium39/mcp-server-tempmail",
        "source": "github"
      },
      "version": "1.0.1",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "mcp-server-tempmail",
          "version": "1.0.1",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "API key for ChatTempMail service",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "TEMPMAIL_API_KEY"
            },
            {
              "description": "Base URL for ChatTempMail API (optional, defaults to https://chat-tempmail.com)",
              "format": "string",
              "name": "TEMPMAIL_BASE_URL"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "9b7b9ce9-886b-4281-9e3e-8b5d45998edb",
          "published_at": "2025-09-09T14:44:19.170379822Z",
          "updated_at": "2025-09-09T14:44:19.170379822Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.IvanMurzak/Unity-MCP",
      "description": "Make 3D games in Unity Engine with AI. MCP Server + Plugin for Unity Editor and Unity games.",
      "status": "active",
      "repository": {
        "url": "https://github.com/IvanMurzak/Unity-MCP",
        "source": "github",
        "subfolder": "Unity-MCP-Server"
      },
      "version": "0.17.0",
      "packages": [
        {
          "registry_type": "oci",
          "registry_base_url": "https://docker.io",
          "identifier": "ivanmurzakdev/unity-mcp-server",
          "version": "0.17.0",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Client -> Server <- Plugin connection port (default: 8080)",
              "format": "number",
              "name": "UNITY_MCP_PORT"
            },
            {
              "description": "Plugin -> Server connection timeout (ms) (default: 10000)",
              "format": "number",
              "name": "UNITY_MCP_PLUGIN_TIMEOUT"
            },
            {
              "description": "Client -> Server transport type: stdio or http (default: http)",
              "format": "string",
              "default": "stdio",
              "name": "UNITY_MCP_CLIENT_TRANSPORT"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "9c344d55-866d-4aad-8caa-5d08fa1ac54d",
          "published_at": "2025-09-12T10:14:26.342754989Z",
          "updated_at": "2025-09-12T11:41:26.342442162Z",
          "is_latest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "ai.waystation/teams",
      "description": "Collaborate, chat, and manage meetings in Microsoft Teams.",
      "status": "active",
      "repository": {
        "url": "https://github.com/waystation-ai/mcp",
        "source": "github"
      },
      "version": "0.3.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://waystation.ai/teams/mcp"
        },
        {
          "type": "sse",
          "url": "https://waystation.ai/teams/mcp/sse"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "9dcd9a6c-b7b1-45f0-98a7-3fd8d3c49d51",
          "published_at": "2025-09-09T14:46:08.709922175Z",
          "updated_at": "2025-09-09T14:46:08.709922175Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.agentailor/slimcontext-mcp-server",
      "description": "MCP Server for SlimContext - AI chat history compression tools",
      "status": "active",
      "repository": {
        "url": "https://github.com/agentailor/slimcontext-mcp-server",
        "source": "github"
      },
      "version": "0.1.1",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "slimcontext-mcp-server",
          "version": "0.1.1",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your API key for the service",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "YOUR_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "9e289796-16e8-440e-8b01-311e7bbb64cb",
          "published_at": "2025-09-10T15:57:56.189103539Z",
          "updated_at": "2025-09-10T15:57:56.189103539Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.cyanheads/mcp-ts-template",
      "description": "A production-grade TypeScript template for scalable MCP servers with built-in observability.",
      "status": "active",
      "repository": {
        "url": "https://github.com/cyanheads/mcp-ts-template",
        "source": "github"
      },
      "version": "2.0.2",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "mcp-ts-template",
          "version": "2.0.1",
          "runtime_hint": "bun",
          "transport": {
            "type": "stdio"
          },
          "package_arguments": [
            {
              "value": "run",
              "type": "positional"
            },
            {
              "value": "start:stdio",
              "type": "positional"
            }
          ],
          "environment_variables": [
            {
              "description": "Sets the minimum log level for output (e.g., 'debug', 'info', 'warn').",
              "format": "string",
              "default": "info",
              "name": "MCP_LOG_LEVEL"
            }
          ]
        },
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "mcp-ts-template",
          "version": "2.0.1",
          "runtime_hint": "bun",
          "transport": {
            "type": "streamable-http",
            "url": "http://localhost:3010/mcp"
          },
          "package_arguments": [
            {
              "value": "run",
              "type": "positional"
            },
            {
              "value": "start:http",
              "type": "positional"
            }
          ],
          "environment_variables": [
            {
              "description": "The port to run the HTTP server on.",
              "format": "string",
              "default": "3010",
              "name": "MCP_HTTP_PORT"
            },
            {
              "description": "Authentication mode to use: 'none', 'jwt', or 'oauth'.",
              "format": "string",
              "default": "none",
              "name": "MCP_AUTH_MODE"
            },
            {
              "description": "Sets the minimum log level for output (e.g., 'debug', 'info', 'warn').",
              "format": "string",
              "default": "info",
              "name": "MCP_LOG_LEVEL"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "a0bcd673-292a-4ba3-8dbc-eaf2ff92e7fc",
          "published_at": "2025-09-14T10:06:30.723296411Z",
          "updated_at": "2025-09-14T10:06:30.723296411Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "ai.smithery/aryankeluskar-poke-video-mcp",
      "description": "Search your Flashback video library with natural language to instantly find relevant moments. Get…",
      "status": "active",
      "repository": {
        "url": "https://github.com/aryankeluskar/poke-video-mcp",
        "source": "github"
      },
      "version": "1.14.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@aryankeluskar/poke-video-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "a1ca2e8c-20e7-44f7-a0ad-eb2aef2faf78",
          "published_at": "2025-09-14T17:42:05.006813829Z",
          "updated_at": "2025-09-14T17:42:05.006813829Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.leshchenko1979/fast-mcp-telegram",
      "description": "Telegram MCP server with search and messaging capabilities",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.4.4",
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "a31f1b64-c682-4771-a4a8-76b0a9d96ec9",
          "published_at": "2025-09-11T16:40:10.557651314Z",
          "updated_at": "2025-09-11T16:40:10.557651314Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.b1ff/atlassian-dc-mcp-confluence",
      "description": "MCP server for Atlassian Confluence Data Center - access and manage content",
      "status": "active",
      "repository": {
        "url": "https://github.com/b1ff/atlassian-dc-mcp",
        "source": "github"
      },
      "version": "0.9.7",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@atlassian-dc-mcp/confluence",
          "version": "0.9.7",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Confluence host domain (e.g. your-instance.atlassian.net)",
              "format": "string",
              "name": "CONFLUENCE_HOST"
            },
            {
              "description": "Confluence API base path (alternative to CONFLUENCE_HOST)",
              "format": "string",
              "name": "CONFLUENCE_API_BASE_PATH"
            },
            {
              "description": "Confluence Personal Access Token or API token",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "CONFLUENCE_API_TOKEN"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "a77e222c-d64a-4cd2-a44a-b4e46bdcbfed",
          "published_at": "2025-09-13T13:17:33.200471952Z",
          "updated_at": "2025-09-13T13:18:50.974154729Z",
          "is_latest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.yuna0x0/hackmd-mcp",
      "description": "A Model Context Protocol server for integrating HackMD's note-taking platform with AI assistants.",
      "status": "active",
      "repository": {
        "url": "https://github.com/yuna0x0/hackmd-mcp",
        "source": "github"
      },
      "version": "1.5.0",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "hackmd-mcp",
          "version": "1.5.0",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your HackMD API token for API authentication",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "HACKMD_API_TOKEN"
            },
            {
              "description": "Optional HackMD API URL, defaults to https://api.hackmd.io/v1",
              "format": "string",
              "default": "https://api.hackmd.io/v1",
              "name": "HACKMD_API_URL"
            }
          ]
        },
        {
          "registry_type": "oci",
          "registry_base_url": "https://docker.io",
          "identifier": "yuna0x0/hackmd-mcp",
          "version": "1.5.0",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your HackMD API token for API authentication",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "HACKMD_API_TOKEN"
            },
            {
              "description": "Optional HackMD API URL, defaults to https://api.hackmd.io/v1",
              "format": "string",
              "default": "https://api.hackmd.io/v1",
              "name": "HACKMD_API_URL"
            }
          ]
        },
        {
          "registry_type": "mcpb",
          "identifier": "https://github.com/yuna0x0/hackmd-mcp/releases/download/v1.5.0/hackmd-mcp-1.5.0.mcpb",
          "version": "1.5.0",
          "file_sha256": "6035e3082ffaf5627e1293a2c8a5d7f42496010431c9b026859dae3bbaa9ce38",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your HackMD API token for API authentication",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "HACKMD_API_TOKEN"
            },
            {
              "description": "Optional HackMD API URL, defaults to https://api.hackmd.io/v1",
              "format": "string",
              "default": "https://api.hackmd.io/v1",
              "name": "HACKMD_API_URL"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "a793348b-c4ba-457a-aa80-6b7269adc4ce",
          "published_at": "2025-09-15T03:10:52.965842649Z",
          "updated_at": "2025-09-15T03:10:52.965842649Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "com.mintmcp/gcal",
      "description": "A MintMCP server that works with Google Calendar to manage event listing, reading, and updates.",
      "status": "active",
      "repository": {
        "url": "https://github.com/mintmcp/mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://gcal.mintmcp.com/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "a7aa8d87-ead3-4ee3-9021-f41edf303f72",
          "published_at": "2025-09-09T19:28:43.15437668Z",
          "updated_at": "2025-09-09T19:35:28.126060102Z",
          "is_latest": false
        }
      }
    }
  ]
}