{
  "servers": [
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.delorenj/mcp-server-trello",
      "description": "MCP server for Trello boards with rate limiting, type safety, and comprehensive API integration.",
      "status": "active",
      "repository": {
        "url": "https://github.com/delorenj/mcp-server-trello",
        "source": "github"
      },
      "version": "1.5.5",
      "websiteUrl": "https://delorenj.github.io/mcp-server-trello",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@delorenj/mcp-server-trello",
          "version": "1.5.5",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your Trello API key",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "TRELLO_API_KEY"
            },
            {
              "description": "Your Trello token",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "TRELLO_TOKEN"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "9b94aaa3-e02f-4538-972e-f332b1428a1d",
          "versionId": "280397f6-cca9-4a7f-8aa9-c82ec4f4518b",
          "publishedAt": "2025-09-21T23:11:11.731178823Z",
          "updatedAt": "2025-09-24T08:48:44.278992465Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.timheuer/sampledotnetmcpserver",
      "description": "Sample .NET MCP Server",
      "repository": {
        "url": "https://github.com/timheuer/sampledotnetmcpserver",
        "source": "github"
      },
      "version": "0.1.28-beta",
      "packages": [
        {
          "registryType": "nuget",
          "identifier": "TimHeuer.SampleDotnetMcpServer",
          "version": "0.1.28-beta",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "98619929-a570-46c1-8e35-4cde888731ee",
          "versionId": "282edfdd-a4e5-46cb-877f-eae2ef06897c",
          "publishedAt": "2025-09-17T01:27:02.813144548Z",
          "updatedAt": "2025-09-17T01:44:26.048539235Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.Antonytm/mcp-sitecore-server",
      "description": "A Model Context Protocol server for Sitecore",
      "status": "active",
      "repository": {
        "url": "https://github.com/Antonytm/mcp-sitecore-server",
        "source": "github"
      },
      "version": "1.3.2",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@antonytm/mcp-sitecore-server",
          "version": "1.3.2",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "name": ""
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "397fbabe-4af0-4772-84f5-d660b761255c",
          "versionId": "28732cec-512d-49ec-940e-832ee19277bc",
          "publishedAt": "2025-09-17T16:49:19.073211847Z",
          "updatedAt": "2025-09-17T16:49:19.073211847Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.xcodebuildmcp/XcodeBuildMCP",
      "description": "XcodeBuildMCP provides tools for Xcode project management, simulator management, and app utilities.",
      "status": "active",
      "repository": {
        "url": "https://github.com/cameroncooke/XcodeBuildMCP",
        "source": "github",
        "id": "945551361"
      },
      "version": "1.12.10",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "xcodebuildmcp",
          "version": "1.12.10",
          "runtimeHint": "npx",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Enable experimental xcodemake incremental builds (true/false or 1/0).",
              "format": "boolean",
              "default": "false",
              "choices": [
                "true",
                "false",
                "1",
                "0"
              ],
              "name": "INCREMENTAL_BUILDS_ENABLED"
            },
            {
              "description": "Enable AI-powered dynamic tool discovery to load only relevant workflows.",
              "format": "boolean",
              "default": "false",
              "choices": [
                "true",
                "false"
              ],
              "name": "XCODEBUILDMCP_DYNAMIC_TOOLS"
            },
            {
              "description": "Comma-separated list of workflows to load in Static Mode (e.g., 'simulator,device,project-discovery').",
              "format": "string",
              "name": "XCODEBUILDMCP_ENABLED_WORKFLOWS"
            },
            {
              "description": "Disable Sentry error reporting (preferred flag).",
              "format": "boolean",
              "default": "false",
              "choices": [
                "true",
                "false"
              ],
              "name": "XCODEBUILDMCP_SENTRY_DISABLED"
            },
            {
              "description": "Enable verbose debug logging from the server.",
              "format": "boolean",
              "default": "false",
              "choices": [
                "true",
                "false"
              ],
              "name": "XCODEBUILDMCP_DEBUG"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "be9105fb-f8cb-4151-b6f8-21b49fd71fed",
          "versionId": "288ccf72-1fde-4754-8d0e-9d67a9795125",
          "publishedAt": "2025-09-10T14:44:46.398091571Z",
          "updatedAt": "2025-09-22T20:19:27.627630397Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.mintmcp/outlook-email",
      "description": "A MCP server for Outlook email that lets you search, read, and draft emails and replies.",
      "status": "active",
      "repository": {
        "url": "https://github.com/mintmcp/servers",
        "source": "github"
      },
      "version": "1.0.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://outlook-email.mintmcp.com/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "c331c604-5fd3-409f-b076-7790b9acbb20",
          "versionId": "29029c32-4067-48c0-b831-058bc34623a1",
          "publishedAt": "2025-09-09T20:02:38.025522049Z",
          "updatedAt": "2025-09-09T20:02:38.025522049Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/smithery-toolbox",
      "description": "Toolbox dynamically routes to all MCPs in the Smithery registry based on your agent's need. When aâ€¦",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@smithery/toolbox/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "35c6a9c3-9439-440a-9d97-b5d539c08b9d",
          "versionId": "292995df-7000-4eda-9cdb-2048ac93e8c4",
          "publishedAt": "2025-09-10T20:39:40.188723394Z",
          "updatedAt": "2025-09-10T20:39:40.188723394Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.jkawamoto/mcp-florence2",
      "description": "An MCP server for processing images using Florence-2",
      "status": "active",
      "repository": {
        "url": "https://github.com/jkawamoto/mcp-florence2",
        "source": "github"
      },
      "version": "0.3.2",
      "packages": [
        {
          "registryType": "mcpb",
          "identifier": "https://github.com/jkawamoto/mcp-florence2/releases/download/v0.3.2/mcp-florence2.mcpb",
          "version": "0.3.2",
          "fileSha256": "58fcb84d444c01f3d7e9a3dd3ea6fa45dc7515663141527936ee8daec2cd0f63",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "dcf30ab3-ffde-4a3f-8d36-522b9e3016e3",
          "versionId": "296598bd-aa8c-4ec5-acc8-4d57ad677139",
          "publishedAt": "2025-09-18T22:50:50.36439604Z",
          "updatedAt": "2025-09-19T00:50:28.853946312Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.spences10/mcp-sqlite-tools",
      "description": "MCP server for local SQLite database operations",
      "status": "active",
      "repository": {
        "url": "https://github.com/spences10/mcp-sqlite-tools",
        "source": "github"
      },
      "version": "0.0.11",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mcp-sqlite-tools",
          "version": "0.0.11",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "7650c939-7113-4dc9-a03d-54d191d03139",
          "versionId": "2a4159ec-d44c-4b6b-85c5-67aa9d054fa0",
          "publishedAt": "2025-09-10T19:01:31.903922632Z",
          "updatedAt": "2025-09-10T19:01:31.903922632Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.mcpcap/mcpcap",
      "description": "An MCP server for analyzing PCAP files.",
      "status": "active",
      "repository": {
        "url": "https://github.com/mcpcap/mcpcap",
        "source": "github"
      },
      "version": "0.4.3",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "mcpcap",
          "version": "0.4.3",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "1a77c0fe-c133-468d-aad0-52c60574d088",
          "versionId": "2aa61ac7-1ddc-4b02-9493-2bf42458130c",
          "publishedAt": "2025-09-11T01:00:19.713725403Z",
          "updatedAt": "2025-09-11T01:06:15.729222586Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/smithery-ai-cookbook-ts-smithery-cli",
      "description": "A simple Typescript MCP server built using the official MCP Typescript SDK and smithery/cli. Thisâ€¦",
      "status": "active",
      "repository": {
        "url": "https://github.com/smithery-ai/smithery-cookbook",
        "source": "github",
        "subfolder": "servers/typescript/migrate_stdio_to_http/server_with_smithery_cli"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@smithery-ai/cookbook-ts-smithery-cli/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "794aa361-eb55-40c4-8f4c-1be4a8a1c047",
          "versionId": "2aaa0953-917f-43d5-bbe3-d4c99688a86b",
          "publishedAt": "2025-09-13T12:45:28.964187978Z",
          "updatedAt": "2025-09-13T12:45:28.964187978Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/brave",
      "description": "Visit https://brave.com/search/api/ for a free API key. Search the web, local businesses, images,â€¦",
      "status": "active",
      "repository": {
        "url": "https://github.com/brave/brave-search-mcp-server",
        "source": "github"
      },
      "version": "1.3.7",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/brave/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "72fbc728-2894-4a60-aaf5-44d616ddd249",
          "versionId": "2ad4f9a6-1c40-4839-948a-9749d9435395",
          "publishedAt": "2025-09-10T19:25:38.948771647Z",
          "updatedAt": "2025-09-12T14:23:41.796186943Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/Kryptoskatt-mcp-server",
      "description": "Enable AI assistants to interact seamlessly with the DefiLlama API by translating MCP tool calls iâ€¦",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.1.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@Kryptoskatt/mcp-server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "99e3a9ea-0f34-4ae6-acfc-0fb3e821b058",
          "versionId": "2b930666-203a-431f-838e-34c408c93126",
          "publishedAt": "2025-09-16T19:42:06.349266762Z",
          "updatedAt": "2025-09-17T10:41:17.53656895Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/smithery-ai-national-weather-service",
      "description": "Provide real-time and forecast weather information for locations in the United States using naturaâ€¦",
      "status": "active",
      "repository": {
        "url": "https://github.com/smithery-ai/mcp-servers",
        "source": "github",
        "subfolder": "weather"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@smithery-ai/national-weather-service/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "b9c2130f-a35c-44ac-afea-412d4631814d",
          "versionId": "2bfeb809-2c63-4a03-94b6-5a9e316cda41",
          "publishedAt": "2025-09-11T02:29:56.9281054Z",
          "updatedAt": "2025-09-11T02:29:56.9281054Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/docfork-mcp",
      "description": "@latest documentation and code examples to 9000+ libraries for LLMs and AI code editors in a singlâ€¦",
      "status": "active",
      "repository": {
        "url": "https://github.com/docfork/docfork-mcp",
        "source": "github"
      },
      "version": "0.6.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@docfork/mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "3bbe0c48-41f7-4742-83d1-045499bef360",
          "versionId": "2d44fea0-9779-4e2b-b37f-fb8c4fd42e6e",
          "publishedAt": "2025-09-10T21:06:07.509501146Z",
          "updatedAt": "2025-09-12T18:25:16.141869963Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.shalevshalit/image-recognition-mcp",
      "description": "MCP server for AI-powered image recognition and description using OpenAI vision models.",
      "status": "active",
      "repository": {
        "url": "https://github.com/mcp-s-ai/image-recognition-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "image-recognition-mcp",
          "version": "1.0.0",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your OpenAI API key for image recognition and description services",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "OPENAI_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "b50c16a4-57a0-4f1f-a0f6-3081e2a8cccc",
          "versionId": "2d6c8c1c-bbd0-4bd1-8a22-1fbb8c23014b",
          "publishedAt": "2025-09-10T15:18:06.73756302Z",
          "updatedAt": "2025-09-10T15:18:06.73756302Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "app.thoughtspot/mcp-server",
      "description": "MCP Server for ThoughtSpot - provides OAuth authentication and tools for querying data",
      "status": "active",
      "repository": {
        "url": "https://github.com/thoughtspot/mcp-server",
        "source": "github"
      },
      "version": "0.5.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://agent.thoughtspot.app/mcp"
        },
        {
          "type": "sse",
          "url": "https://agent.thoughtspot.app/sse"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "c695356d-8607-402e-b15d-651af6d3cac7",
          "versionId": "2dafc3fb-4bde-4a22-aac2-9d3dc3c78f74",
          "publishedAt": "2025-09-17T20:04:01.821026897Z",
          "updatedAt": "2025-09-17T20:14:22.510543332Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/kaszek-kaszek-attio-mcp",
      "description": "Automate Attio CRM workflows with fast search and bulk operations across companies, people, deals,â€¦",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.2.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@kaszek/kaszek-attio-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "8adb4b44-ff32-48b3-9c2c-0ecdff6527a0",
          "versionId": "2dcc8f42-3551-4968-9b98-fff8a5c6111d",
          "publishedAt": "2025-09-20T23:26:13.62772396Z",
          "updatedAt": "2025-09-20T23:26:13.62772396Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.timheuer/sampledotnetmcpserver",
      "description": "Sample .NET MCP Server",
      "repository": {
        "url": "https://github.com/timheuer/sampledotnetmcpserver",
        "source": "github"
      },
      "version": "0.1.30-beta",
      "packages": [
        {
          "registryType": "nuget",
          "identifier": "TimHeuer.SampleDotnetMcpServer",
          "version": "0.1.30-beta",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "98619929-a570-46c1-8e35-4cde888731ee",
          "versionId": "2de2ee3a-fc9a-4ac4-8ded-3fda14b29051",
          "publishedAt": "2025-09-17T01:44:26.040148686Z",
          "updatedAt": "2025-09-18T17:33:36.29275102Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.TonySimonovsky/claude-code-conversation-search-mcp",
      "description": "Search Claude Code conversation history with natural language queries across all projects",
      "status": "active",
      "repository": {
        "url": "https://github.com/TonySimonovsky/claude-code-conversation-search-mcp",
        "source": "github"
      },
      "version": "1.1.3",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "claude-code-conversation-search-mcp",
          "version": "1.1.3",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "bad1e277-654e-492f-bbd9-063702fb42a2",
          "versionId": "2e60e113-3363-40a4-97d0-0ff8cbed03d8",
          "publishedAt": "2025-09-27T10:30:26.181168547Z",
          "updatedAt": "2025-09-27T10:30:26.181168547Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.pshivapr/selenium-mcp",
      "description": "Selenium Tools for MCP",
      "status": "active",
      "repository": {
        "url": "https://github.com/pshivapr/selenium-mcp",
        "source": "github"
      },
      "version": "0.3.8",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "selenium-webdriver-mcp",
          "version": "0.3.8",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your API key for the service",
              "format": "string",
              "isSecret": true,
              "name": "YOUR_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "e6648a72-6a2f-4b64-991e-4be3ed59ed3c",
          "versionId": "2e84c83f-1672-4916-a337-84e76d93b4e2",
          "publishedAt": "2025-09-09T13:53:12.051952089Z",
          "updatedAt": "2025-09-09T19:08:26.438447364Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/hithereiamaliff-mcp-datagovmy",
      "description": "This MCP server provides seamless access to Malaysia's government open data, including datasets, wâ€¦",
      "status": "active",
      "repository": {
        "url": "https://github.com/hithereiamaliff/mcp-datagovmy",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@hithereiamaliff/mcp-datagovmy/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "65a8cfef-3d35-45b6-a1b4-d9b93b639ef9",
          "versionId": "2eff9885-def0-4f46-84df-d1a4ae2cd697",
          "publishedAt": "2025-09-11T05:56:30.066840479Z",
          "updatedAt": "2025-09-11T05:56:30.066840479Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "app.thoughtspot/mcp-server",
      "description": "MCP Server for ThoughtSpot - provides OAuth authentication and tools for querying data",
      "status": "active",
      "repository": {
        "url": "https://github.com/thoughtspot/mcp-server",
        "source": "github"
      },
      "version": "1.0.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://agent.thoughtspot.app/mcp"
        },
        {
          "type": "sse",
          "url": "https://agent.thoughtspot.app/sse"
        },
        {
          "type": "streamable-http",
          "url": "https://agent.thoughtspot.app/bearer/mcp",
          "headers": [
            {
              "description": "Bearer token for authentication, have the ts-host as 'token@ts-host' or as a separate 'x-ts-host' header",
              "isRequired": true,
              "isSecret": true,
              "name": "Authorization"
            },
            {
              "description": "ThoughtSpot instance URL, if not provided in the authorization header",
              "name": "X-TS-Host"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://agent.thoughtspot.app/bearer/sse",
          "headers": [
            {
              "description": "Bearer token for authentication, have the ts-host as 'token@ts-host' or as a separate 'x-ts-host' header",
              "isRequired": true,
              "isSecret": true,
              "name": "Authorization"
            },
            {
              "description": "ThoughtSpot instance URL, if not provided in the authorization header",
              "name": "X-TS-Host"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "c695356d-8607-402e-b15d-651af6d3cac7",
          "versionId": "2f082904-ddd0-4f6e-8d12-f655111b2bc0",
          "publishedAt": "2025-09-17T20:15:17.362824581Z",
          "updatedAt": "2025-09-17T20:15:17.362824581Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.YinTokey/mcp_hackernews",
      "description": "MCP server exposing a simple Hacker News search tool (top stories).",
      "status": "active",
      "repository": {
        "url": "https://github.com/YinTokey/mcp_hackernews",
        "source": "github"
      },
      "version": "0.1.2",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "mcp-hackernews",
          "version": "0.1.2",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "24a4ab76-7ab6-4151-8cbb-692e6fe7d470",
          "versionId": "2f42d6f5-5dff-4d40-a85a-996ddca5a27f",
          "publishedAt": "2025-09-19T16:50:55.119395707Z",
          "updatedAt": "2025-09-19T20:06:35.162640348Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.himorishige/hatago-mcp-hub",
      "description": "Unified MCP Hub for managing multiple Model Context Protocol servers",
      "status": "active",
      "repository": {
        "url": "https://github.com/himorishige/hatago-mcp-hub",
        "source": "github"
      },
      "version": "0.0.15",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@himorishige/hatago-mcp-hub",
          "version": "0.0.15",
          "runtimeHint": "npx",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "27980499-f44a-453a-8b3c-6450b5c0947b",
          "versionId": "2f4d81e5-6933-4117-882b-105c9f0e0da5",
          "publishedAt": "2025-09-14T10:38:58.007599947Z",
          "updatedAt": "2025-09-14T14:57:18.60721393Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.p1va/symbols",
      "description": "MCP server to read, inspect and troubleshoot codebase symbols",
      "status": "active",
      "repository": {
        "url": "https://github.com/p1va/symbols",
        "source": "github"
      },
      "version": "0.0.12",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@p1va/symbols",
          "version": "0.0.12",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "d827a965-33bc-4262-87df-98ca6eac9a12",
          "versionId": "2f7c96af-4749-405b-9721-8e2651ff347b",
          "publishedAt": "2025-09-16T10:02:42.424531594Z",
          "updatedAt": "2025-09-16T10:02:42.424531594Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.close/close-mcp",
      "description": "Close CRM to manage your sales pipeline. Learn more at https://close.com or https://mcp.close.com",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.close.com/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "770f5812-1f2f-46c7-bef9-e05f6d62f304",
          "versionId": "2f86faac-87bf-49e5-bcec-e439687e0923",
          "publishedAt": "2025-09-22T21:07:57.602590144Z",
          "updatedAt": "2025-09-22T21:07:57.602590144Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.joelverhagen/Knapcode.SampleMcpServer",
      "description": "A sample MCP server using the MCP C# SDK. Generates random numbers and random weather.",
      "repository": {
        "url": "https://github.com/joelverhagen/Knapcode.SampleMcpServer.git",
        "source": "github"
      },
      "version": "0.7.0-beta",
      "packages": [
        {
          "registryType": "nuget",
          "registryBaseUrl": "https://api.nuget.org",
          "identifier": "Knapcode.SampleMcpServer",
          "version": "0.7.0-beta",
          "transport": {
            "type": "stdio"
          },
          "packageArguments": [
            {
              "value": "mcp",
              "type": "positional",
              "valueHint": "mcp"
            },
            {
              "value": "start",
              "type": "positional",
              "valueHint": "start"
            }
          ],
          "environmentVariables": [
            {
              "value": "{weather_choices}",
              "variables": {
                "weather_choices": {
                  "description": "Comma separated list of weather descriptions to randomly select.",
                  "isRequired": true
                }
              },
              "name": "WEATHER_CHOICES"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "16498a6c-38c5-45d4-83b2-977bdef88d80",
          "versionId": "30080003-fbcd-4552-b40e-a1c192d1f412",
          "publishedAt": "2025-09-12T15:42:35.512389899Z",
          "updatedAt": "2025-09-12T15:42:35.512389899Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.cr7258/elasticsearch-mcp-server",
      "description": "MCP server for interacting with Elasticsearch",
      "status": "active",
      "repository": {
        "url": "https://github.com/cr7258/elasticsearch-mcp-server",
        "source": "github"
      },
      "version": "2.0.15",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "elasticsearch-mcp-server",
          "version": "2.0.15",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Comma-separated list of Elasticsearch hosts (e.g., https://localhost:9200)",
              "format": "string",
              "default": "https://localhost:9200",
              "name": "ELASTICSEARCH_HOSTS"
            },
            {
              "description": "API key for Elasticsearch or Elastic Cloud authentication (recommended)",
              "format": "string",
              "isSecret": true,
              "name": "ELASTICSEARCH_API_KEY"
            },
            {
              "description": "Username for basic authentication (alternative to API key)",
              "format": "string",
              "name": "ELASTICSEARCH_USERNAME"
            },
            {
              "description": "Password for basic authentication (used with ELASTICSEARCH_USERNAME)",
              "format": "string",
              "isSecret": true,
              "name": "ELASTICSEARCH_PASSWORD"
            },
            {
              "description": "Whether to verify SSL certificates (true/false)",
              "format": "boolean",
              "default": "false",
              "name": "ELASTICSEARCH_VERIFY_CERTS"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "736191c3-915d-4643-b4c0-6dda9bef9bff",
          "versionId": "302ebbc8-8b7f-4952-9706-7ad2ade5fd38",
          "publishedAt": "2025-09-15T14:34:34.758628029Z",
          "updatedAt": "2025-09-15T14:34:34.758628029Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.brave/brave-search-mcp-server",
      "description": "Brave Search MCP Server: web results, images, videos, rich results, AI summaries, and more.",
      "status": "active",
      "repository": {
        "url": "https://github.com/brave/brave-search-mcp-server",
        "source": "github"
      },
      "version": "2.0.8",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@brave/brave-search-mcp-server",
          "version": "2.0.8",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your API key for the service",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "BRAVE_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "fe2e0e07-1466-499a-bcdd-16d07b8ccb40",
          "versionId": "309388c6-8bba-4ece-896f-e5b569597467",
          "publishedAt": "2025-09-19T11:35:34.688061767Z",
          "updatedAt": "2025-09-19T11:51:13.380613812Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.alpic.test/test-mcp-server",
      "description": "Alpic Test MCP Server - great server!",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.0.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://test.alpic.ai/"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "ff57c512-4e0d-497a-ae0c-18c093c3da6a",
          "versionId": "309d5dbf-3f27-4235-ae4d-56a1bb0285d1",
          "publishedAt": "2025-09-10T13:57:43.256738808Z",
          "updatedAt": "2025-09-10T13:57:43.256738808Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/pythondev-pro-egw_writings_mcp_server",
      "description": "Search Ellen G. Whiteâ€™s writings by topic or phrase. Retrieve exact references and passages instanâ€¦",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@pythondev-pro/egw_writings_mcp_server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "cfa49893-4e64-430d-8ea1-d3af4f8379f9",
          "versionId": "30a55449-cad5-46aa-9596-12828d287fa8",
          "publishedAt": "2025-09-19T16:18:36.558203742Z",
          "updatedAt": "2025-09-19T16:18:36.558203742Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.Lyellr88/marm-mcp-server",
      "description": "Universal MCP Server with advanced AI memory capabilities and semantic search.",
      "repository": {
        "url": "https://github.com/Lyellr88/MARM-Systems",
        "source": "github"
      },
      "version": "2.2.2",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "marm-mcp-server",
          "version": "2.2.2",
          "transport": {
            "type": "stdio"
          }
        },
        {
          "registryType": "oci",
          "identifier": "lyellr88/marm-mcp-server",
          "version": "2.2.2",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "73eda8a1-8138-43c0-ac0e-5f953d1d304e",
          "versionId": "317c4867-14ab-489f-8343-b2ddaa3142a1",
          "publishedAt": "2025-09-19T04:27:24.435507407Z",
          "updatedAt": "2025-09-19T07:39:05.791392866Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.mintmcp/outlook-calendar",
      "description": "A MCP server that works with Outlook Calendar to manage event listing, reading, and updates.",
      "status": "active",
      "repository": {
        "url": "https://github.com/mintmcp/servers",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://outlook-calendar.mintmcp.com/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "293ca7df-05a9-4490-b0d8-955adeb97385",
          "versionId": "31a850e0-2f62-4d61-b128-6c4bca76bdd1",
          "publishedAt": "2025-09-09T20:03:56.940660247Z",
          "updatedAt": "2025-09-09T20:03:56.940660247Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.wild-card/deepcontext",
      "description": "Advanced codebase indexing and semantic search MCP server",
      "status": "active",
      "repository": {
        "url": "https://github.com/Wildcard-Official/deepcontext",
        "source": "github"
      },
      "version": "0.1.15",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@wildcard-ai/deepcontext",
          "version": "0.1.15",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Jina AI API key for embeddings generation",
              "format": "string",
              "isSecret": true,
              "name": "JINA_API_KEY"
            },
            {
              "description": "Turbopuffer API key for vector storage",
              "format": "string",
              "isSecret": true,
              "name": "TURBOPUFFER_API_KEY"
            },
            {
              "description": "Wildcard API key for authentication",
              "format": "string",
              "isSecret": true,
              "name": "WILDCARD_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "1da9f9fc-d0ac-4297-a05e-024691f97791",
          "versionId": "31e49446-90e7-4f3c-a043-11512243977b",
          "publishedAt": "2025-09-26T03:44:16.929896103Z",
          "updatedAt": "2025-09-26T03:44:16.929896103Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/ImRonAI-mcp-server-browserbase",
      "description": "Automate cloud browsers to navigate websites, interact with elements, and extract structured data.â€¦",
      "status": "active",
      "repository": {
        "url": "https://github.com/ImRonAI/mcp-server-browserbase",
        "source": "github"
      },
      "version": "2.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@ImRonAI/mcp-server-browserbase/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "8295f72e-c2f2-4629-b6cb-15ce0b6ee3c8",
          "versionId": "31e8d9b1-e043-4594-8ccc-6cd7b829fa6c",
          "publishedAt": "2025-09-16T06:05:33.453618608Z",
          "updatedAt": "2025-09-16T06:05:33.453618608Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.mintmcp/gcal",
      "description": "A MintMCP server that works with Google Calendar to manage event listing, reading, and updates.",
      "status": "active",
      "repository": {
        "url": "https://github.com/mintmcp/mcp",
        "source": "github"
      },
      "version": "1.0.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://gcal.mintmcp.com/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "7b265ff1-5cd1-43fe-92c4-54cc6a0fd4d7",
          "versionId": "3295b540-5655-4ddd-9726-8dd060e7e05a",
          "publishedAt": "2025-09-09T19:35:28.121701943Z",
          "updatedAt": "2025-09-09T19:36:28.010860991Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.huoshuiai42/huoshui-fetch",
      "description": "An MCP server that provides tools for fetching, converting, and extracting data from web pages.",
      "status": "active",
      "repository": {
        "url": "https://github.com/huoshuiai42/huoshui-fetch",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "huoshui-fetch",
          "version": "1.0.0",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "71b6a637-4169-43d5-9ff5-bf34c27f6030",
          "versionId": "32d74c21-60c3-4dde-afe7-4ade73371301",
          "publishedAt": "2025-09-11T01:33:53.944848968Z",
          "updatedAt": "2025-09-11T01:33:53.944848968Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.bytedance/mcp-server-browser",
      "description": "MCP server for browser use access",
      "status": "active",
      "repository": {
        "url": "https://github.com/bytedance/UI-TARS-desktop",
        "source": "github",
        "subfolder": "packages/agent-infra/mcp-servers/browser"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@agent-infra/mcp-server-browser",
          "version": "latest",
          "transport": {
            "type": "stdio"
          },
          "packageArguments": [
            {
              "description": "browser or chrome channel to use, possible values: chrome, edge, firefox.",
              "format": "string",
              "type": "named",
              "name": "browser"
            },
            {
              "description": "Chrome DevTools Protocol endpoint URL",
              "format": "string",
              "type": "named",
              "name": "cdp-endpoint"
            },
            {
              "description": "WebSocket endpoint to connect to, for example",
              "format": "string",
              "type": "named",
              "name": "ws-endpoint"
            },
            {
              "description": "Path to the browser executable",
              "format": "string",
              "type": "named",
              "name": "executable-path"
            },
            {
              "description": "Path to the output directory",
              "format": "string",
              "type": "named",
              "name": "output-dir"
            },
            {
              "description": "Comma-separated list of patterns to bypass the proxy",
              "format": "string",
              "type": "named",
              "name": "proxy-bypass"
            },
            {
              "description": "Proxy server address",
              "format": "string",
              "type": "named",
              "name": "proxy-server"
            },
            {
              "description": "Run server that uses screenshots (Aria snapshots are used by default)",
              "format": "boolean",
              "type": "named",
              "name": "vision"
            }
          ],
          "environmentVariables": [
            {
              "description": "DISPLAY environment variable for browser rendering",
              "format": "string",
              "name": "DISPLAY"
            }
          ]
        },
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@agent-infra/mcp-server-browser",
          "version": "latest",
          "runtimeHint": "npx",
          "transport": {
            "type": "sse",
            "url": "http://127.0.0.1:{port}/sse"
          },
          "packageArguments": [
            {
              "description": "Server port number",
              "isRequired": true,
              "format": "number",
              "default": "8089",
              "type": "named",
              "name": "port"
            },
            {
              "description": "browser or chrome channel to use, possible values: chrome, edge, firefox.",
              "format": "string",
              "type": "named",
              "name": "browser"
            },
            {
              "description": "Chrome DevTools Protocol endpoint URL",
              "format": "string",
              "type": "named",
              "name": "cdp-endpoint"
            },
            {
              "description": "WebSocket endpoint to connect to, for example",
              "format": "string",
              "type": "named",
              "name": "ws-endpoint"
            },
            {
              "description": "Path to the browser executable",
              "format": "string",
              "type": "named",
              "name": "executable-path"
            },
            {
              "description": "Path to the output directory",
              "format": "string",
              "type": "named",
              "name": "output-dir"
            },
            {
              "description": "Comma-separated list of patterns to bypass the proxy",
              "format": "string",
              "type": "named",
              "name": "proxy-bypass"
            },
            {
              "description": "Proxy server address",
              "format": "string",
              "type": "named",
              "name": "proxy-server"
            },
            {
              "description": "Run server that uses screenshots (Aria snapshots are used by default)",
              "format": "boolean",
              "type": "named",
              "name": "vision"
            }
          ],
          "environmentVariables": [
            {
              "description": "DISPLAY environment variable for browser rendering",
              "format": "string",
              "name": "DISPLAY"
            }
          ]
        },
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@agent-infra/mcp-server-browser",
          "version": "latest",
          "runtimeHint": "npx",
          "transport": {
            "type": "streamable-http",
            "url": "http://127.0.0.1:{port}/mcp"
          },
          "packageArguments": [
            {
              "description": "Server port number",
              "isRequired": true,
              "format": "number",
              "default": "8089",
              "type": "named",
              "name": "port"
            },
            {
              "description": "browser or chrome channel to use, possible values: chrome, edge, firefox.",
              "format": "string",
              "type": "named",
              "name": "browser"
            },
            {
              "description": "Chrome DevTools Protocol endpoint URL",
              "format": "string",
              "type": "named",
              "name": "cdp-endpoint"
            },
            {
              "description": "WebSocket endpoint to connect to, for example",
              "format": "string",
              "type": "named",
              "name": "ws-endpoint"
            },
            {
              "description": "Path to the browser executable",
              "format": "string",
              "type": "named",
              "name": "executable-path"
            },
            {
              "description": "Path to the output directory",
              "format": "string",
              "type": "named",
              "name": "output-dir"
            },
            {
              "description": "Comma-separated list of patterns to bypass the proxy",
              "format": "string",
              "type": "named",
              "name": "proxy-bypass"
            },
            {
              "description": "Proxy server address",
              "format": "string",
              "type": "named",
              "name": "proxy-server"
            },
            {
              "description": "Run server that uses screenshots (Aria snapshots are used by default)",
              "format": "boolean",
              "type": "named",
              "name": "vision"
            }
          ],
          "environmentVariables": [
            {
              "description": "DISPLAY environment variable for browser rendering",
              "format": "string",
              "name": "DISPLAY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "74f08407-83aa-447a-8044-df93d6bfb0c2",
          "versionId": "34d352da-6c0f-4348-8cb5-f1c44f7eb7dd",
          "publishedAt": "2025-09-09T06:16:24.728252874Z",
          "updatedAt": "2025-09-09T06:16:24.728252874Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/yuna0x0-anilist-mcp",
      "description": "Access and interact with anime and manga data seamlessly. Retrieve detailed information about yourâ€¦",
      "status": "active",
      "repository": {
        "url": "https://github.com/yuna0x0/anilist-mcp",
        "source": "github"
      },
      "version": "1.3.3",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@yuna0x0/anilist-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "bd7f3260-8768-49b4-be09-19cd13793ba2",
          "versionId": "35516102-2530-4e9f-9c13-4e613c3375f3",
          "publishedAt": "2025-09-13T08:34:23.401483403Z",
          "updatedAt": "2025-09-13T08:34:23.401483403Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.ChromeDevTools/chrome-devtools-mcp",
      "description": "MCP server for Chrome DevTools",
      "status": "active",
      "repository": {
        "url": "https://github.com/ChromeDevTools/chrome-devtools-mcp",
        "source": "github"
      },
      "version": "0.2.7",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "chrome-devtools-mcp",
          "version": "0.2.7",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "a90d8a5b-ca0c-4e52-a82c-36027fdf7de2",
          "versionId": "35610df8-a6ad-400b-bab0-58cb21d0c5c5",
          "publishedAt": "2025-09-24T12:57:07.916238607Z",
          "updatedAt": "2025-09-25T16:53:34.191488001Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.apify/apify-mcp-server",
      "description": "Apify MCP Server providing access to thousands of web scraping and automation tools from Apify Store",
      "status": "active",
      "repository": {
        "url": "https://github.com/apify/apify-mcp-server",
        "source": "github"
      },
      "version": "0.4.10",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.apify.com/",
          "headers": [
            {
              "description": "Apify API token for authentication with Apify platform services. For example 'Bearer <apify-api-token>'",
              "isRequired": true,
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "2bc2f4cd-9894-48ac-9580-ca1ad1ceef26",
          "versionId": "36718efb-39b6-41e2-9762-1321ec57bddd",
          "publishedAt": "2025-09-19T12:42:08.357510933Z",
          "updatedAt": "2025-09-19T13:48:15.372766299Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/BigVik193-reddit-ads-mcp-test",
      "description": "Manage Reddit advertising end-to-end: browse ad accounts and payment methods, and organize campaigâ€¦",
      "status": "active",
      "repository": {
        "url": "https://github.com/BigVik193/reddit-ads-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@BigVik193/reddit-ads-mcp-test/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "1e2003ca-fb08-47cb-965d-8dd591f715f7",
          "versionId": "36b0da99-4b6f-4d12-b60f-b66950d8600d",
          "publishedAt": "2025-09-14T21:38:57.98433852Z",
          "updatedAt": "2025-09-14T21:38:57.98433852Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.croit/mcp-croit-ceph",
      "description": "MCP server for Croit Ceph cluster management with dynamic OpenAPI tool generation",
      "status": "active",
      "repository": {
        "url": "https://github.com/croit/mcp-croit-ceph",
        "source": "github",
        "id": "1058156155"
      },
      "version": "0.2.16",
      "packages": [
        {
          "registryType": "oci",
          "registryBaseUrl": "https://docker.io",
          "identifier": "croit/mcp-croit-ceph",
          "version": "0.2.16",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Croit cluster URL (e.g., http://your-cluster.croit.io:8080)",
              "name": "CROIT_HOST"
            },
            {
              "description": "API authentication token for Croit cluster",
              "name": "CROIT_API_TOKEN"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "a8786e4e-07a3-47ed-a808-52db2ada27db",
          "versionId": "36c22c9a-0448-40af-8312-2fb36b8b7cea",
          "publishedAt": "2025-09-17T09:30:42.325917413Z",
          "updatedAt": "2025-09-17T09:30:42.325917413Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.karanb192/reddit-buddy-mcp",
      "description": "Reddit MCP server - browse posts, search content, analyze users.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.6-test.7",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "@karanb192/reddit-buddy-mcp",
          "version": "1.0.6-test.7",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "9b13d420-4d1e-424e-9af2-bc9336c12892",
          "versionId": "37a73b98-7065-4144-8bd2-9b7aa57340a5",
          "publishedAt": "2025-09-15T07:27:45.7983415Z",
          "updatedAt": "2025-09-15T07:27:45.7983415Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.devcycle/mcp",
      "description": "DevCycle MCP server for feature flag management",
      "repository": {
        "url": "https://github.com/DevCycleHQ/cli",
        "source": "github"
      },
      "version": "6.1.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.devcycle.com/mcp"
        },
        {
          "type": "sse",
          "url": "https://mcp.devcycle.com/sse"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "6083a09f-1557-4e62-971f-ed2f0b692dd9",
          "versionId": "37cb7306-1433-4aae-9aa4-79eaedfb7b5a",
          "publishedAt": "2025-09-17T20:28:36.449466527Z",
          "updatedAt": "2025-09-17T20:28:36.449466527Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.localstack/localstack-mcp-server",
      "description": "A LocalStack MCP Server providing essential tools for local cloud development & testing",
      "status": "active",
      "repository": {
        "url": "https://github.com/localstack/localstack-mcp-server",
        "source": "github"
      },
      "version": "0.1.5",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@localstack/localstack-mcp-server",
          "version": "0.1.5",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "LocalStack Auth Token (optional for Pro features)",
              "format": "string",
              "isSecret": true,
              "name": "LOCALSTACK_AUTH_TOKEN"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "3e13ffea-7049-4d98-a932-7c06dc4a8077",
          "versionId": "37f249dd-58c5-45cf-b2a1-d72f7b2b9ebb",
          "publishedAt": "2025-09-18T14:38:06.908080633Z",
          "updatedAt": "2025-09-18T14:38:06.908080633Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.GitHub30/note-mcp-server",
      "description": "MCP server for note.com: create, edit and retrieve posts.",
      "status": "active",
      "repository": {
        "url": "https://github.com/GitHub30/note-mcp-server",
        "source": "github"
      },
      "version": "0.1.0",
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "955a2c36-3ce2-4ac2-a1ad-477890c3a3ea",
          "versionId": "38c744df-dcaa-4268-8375-dd4284171c79",
          "publishedAt": "2025-09-23T09:07:31.816269545Z",
          "updatedAt": "2025-09-23T09:07:31.816269545Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.ChromeDevTools/chrome-devtools-mcp",
      "description": "MCP server for Chrome DevTools",
      "status": "active",
      "repository": {
        "url": "https://github.com/ChromeDevTools/chrome-devtools-mcp",
        "source": "github"
      },
      "version": "0.4.0",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "chrome-devtools-mcp",
          "version": "0.4.0",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "a90d8a5b-ca0c-4e52-a82c-36027fdf7de2",
          "versionId": "3aaae027-4007-4297-b713-5178d0c0cbfc",
          "publishedAt": "2025-09-26T14:05:58.832060814Z",
          "updatedAt": "2025-09-26T14:05:58.832060814Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.cr7258/elasticsearch-mcp-server",
      "description": "MCP server for interacting with Elasticsearch",
      "status": "active",
      "repository": {
        "url": "https://github.com/cr7258/elasticsearch-mcp-server",
        "source": "github"
      },
      "version": "2.0.14",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "elasticsearch-mcp-server",
          "version": "2.0.14",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Comma-separated list of Elasticsearch hosts (e.g., https://localhost:9200)",
              "format": "string",
              "default": "https://localhost:9200",
              "name": "ELASTICSEARCH_HOSTS"
            },
            {
              "description": "API key for Elasticsearch or Elastic Cloud authentication (recommended)",
              "format": "string",
              "isSecret": true,
              "name": "ELASTICSEARCH_API_KEY"
            },
            {
              "description": "Username for basic authentication (alternative to API key)",
              "format": "string",
              "name": "ELASTICSEARCH_USERNAME"
            },
            {
              "description": "Password for basic authentication (used with ELASTICSEARCH_USERNAME)",
              "format": "string",
              "isSecret": true,
              "name": "ELASTICSEARCH_PASSWORD"
            },
            {
              "description": "Whether to verify SSL certificates (true/false)",
              "format": "boolean",
              "default": "false",
              "name": "ELASTICSEARCH_VERIFY_CERTS"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "736191c3-915d-4643-b4c0-6dda9bef9bff",
          "versionId": "3ace42d4-426f-4aed-bb97-1ef46d6cdcb5",
          "publishedAt": "2025-09-11T03:19:12.574630083Z",
          "updatedAt": "2025-09-15T14:34:34.785294588Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.nerfels/mind-map",
      "description": "Experimental code intelligence platform for Claude Code with AST parsing and context analysis",
      "status": "active",
      "repository": {
        "url": "https://github.com/nerfels/mind-map",
        "source": "github"
      },
      "version": "1.12.13",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mind-map-mcp",
          "version": "1.12.13",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Project root directory for MCP to analyze (optional - uses current working directory if not specified)",
              "format": "string",
              "name": "MCP_PROJECT_ROOT"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "adf4c7de-c80e-4ddf-8d60-178266570f18",
          "versionId": "3b9a8107-0e4f-4b30-b1af-004ba2e5db16",
          "publishedAt": "2025-09-16T16:29:26.08179909Z",
          "updatedAt": "2025-09-16T16:29:26.08179909Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/Nekzus-npm-sentinel-mcp",
      "description": "Provide AI-powered real-time analysis and intelligence on NPM packages, including security, dependâ€¦",
      "status": "active",
      "repository": {
        "url": "https://github.com/Nekzus/npm-sentinel-mcp",
        "source": "github"
      },
      "version": "1.9.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@Nekzus/npm-sentinel-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "a10fab8f-cce3-42a0-b3e4-e34e2f71c41c",
          "versionId": "3ba07713-0e79-4f16-86c2-7ec00756b0f8",
          "publishedAt": "2025-09-20T20:30:22.451323441Z",
          "updatedAt": "2025-09-20T21:15:59.347284446Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.cmpxchg16/mcp-ethical-hacking",
      "description": "An MCP server that provides LinkedIn & Reddit data",
      "status": "active",
      "repository": {
        "url": "https://github.com/cmpxchg16/mcp-ethical-hacking",
        "source": "github"
      },
      "version": "1.3.0",
      "packages": [
        {
          "registryType": "mcpb",
          "identifier": "https://github.com/cmpxchg16/mcp-ethical-hacking/releases/download/v1.3.0/server.mcpb",
          "version": "1.3.0",
          "fileSha256": "294365cbf53a602df093e3757e6a31cca6c50dd6af343fefa4a528ab869d24a0",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "ebe9848e-d092-4007-88bc-09b67823681b",
          "versionId": "3ba865b1-cea7-4427-851b-f5ab05a6ace1",
          "publishedAt": "2025-09-15T12:56:52.957978875Z",
          "updatedAt": "2025-09-16T04:55:02.308871938Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.mintmcp/gmail",
      "description": "A MintMCP server for Gmail that lets you search, read, and draft emails and replies.",
      "status": "active",
      "repository": {
        "url": "https://github.com/mintmcp/mcp",
        "source": "github"
      },
      "version": "1.0.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://gmail.mintmcp.com/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "108ee330-287d-40a7-98c6-6806dbb9eeac",
          "versionId": "3bd6e07f-df97-48f4-8ae1-58c1682f3255",
          "publishedAt": "2025-09-09T19:25:39.933995125Z",
          "updatedAt": "2025-09-09T19:44:30.666451776Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.lapfelix/xcodemcp",
      "description": "Control Xcode directly via JXA for build, test, debug operations with XCLogParser integration",
      "status": "active",
      "repository": {
        "url": "https://github.com/lapfelix/XcodeMCP",
        "source": "github"
      },
      "version": "2.1.2",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "xcodemcp",
          "version": "2.1.2",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "f3976f2e-7a54-4d1f-97de-4bce9fb901a2",
          "versionId": "3c4fd086-a0bc-46f9-9f71-cb3709dacf33",
          "publishedAt": "2025-09-16T18:37:57.587730906Z",
          "updatedAt": "2025-09-18T03:19:27.899606094Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.OtherVibes/mcp-as-a-judge",
      "description": "MCP as a Judge: a behavioral MCP that strengthens AI coding assistants via explicit LLM evaluations",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.3.2",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "mcp-as-a-judge",
          "version": "0.3.2",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "e8b7a95e-e0b7-44d1-9830-1ef945eed29d",
          "versionId": "3c57cfc7-c135-43a8-a3f5-c1c2b95fe020",
          "publishedAt": "2025-09-18T08:25:43.825449944Z",
          "updatedAt": "2025-09-18T20:23:31.617924504Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.abhijitjavelin/javelin-guardrails-mcp-server",
      "description": "An MCP server that provides Javelin Standalone Guardrails",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://abhijitjavelin.github.io/javelin-guardrails-mcp-server/mcp",
          "headers": [
            {
              "description": "Javelin API key for authentication",
              "isRequired": true,
              "isSecret": true,
              "name": "x-javelin-apikey"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "4e9a9c03-d422-4646-8376-7c7995eb35fb",
          "versionId": "3cd27f25-a778-4638-a77b-49fee7d9a676",
          "publishedAt": "2025-09-18T17:34:35.233239012Z",
          "updatedAt": "2025-09-18T17:34:35.233239012Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/arjunkmrm-watch2",
      "description": "Get the current time in your chosen timezone. Browse available continents and regions to pick theâ€¦",
      "status": "active",
      "repository": {
        "url": "https://github.com/arjunkmrm/clock",
        "source": "github"
      },
      "version": "1.14.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@arjunkmrm/watch2/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "fbf7b938-5340-46e6-bb1c-ed9717d25ccd",
          "versionId": "3cf0b534-6629-4f4e-96d1-0cc83262fd40",
          "publishedAt": "2025-09-19T08:31:21.361327554Z",
          "updatedAt": "2025-09-19T08:31:21.361327554Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.variflight/variflight-mcp",
      "description": "Variflight MCP Server",
      "status": "active",
      "repository": {
        "url": "https://github.com/variflight/variflight-mcp",
        "source": "github"
      },
      "version": "1.0.1",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@variflight-ai/variflight-mcp",
          "version": "1.0.0",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your API key for the service",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "VARIFLIGHT_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "314291ab-1ff5-4c6b-9879-9a236748c272",
          "versionId": "3d452687-9ce1-4b5e-98b9-2fbf1fb7abb7",
          "publishedAt": "2025-09-09T13:43:56.480560569Z",
          "updatedAt": "2025-09-12T07:06:18.911110007Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/sunub-obsidian-mcp-server",
      "description": "Search your Obsidian vault to quickly find notes by title or keyword, summarize related content, aâ€¦",
      "status": "active",
      "repository": {
        "url": "https://github.com/sunub/obsidian-mcp-server",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@sunub/obsidian-mcp-server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "793edb61-30ec-4fdd-8aa1-67aa523f8f08",
          "versionId": "3d457e31-2ee0-4aae-8570-22aed58bb977",
          "publishedAt": "2025-09-18T13:40:45.500066991Z",
          "updatedAt": "2025-09-18T13:40:45.500066991Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.cmpxchg16/mcp-ethical-hacking",
      "description": "An MCP server that provides LinkedIn & Reddit data",
      "status": "active",
      "repository": {
        "url": "https://github.com/cmpxchg16/mcp-ethical-hacking",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "mcpb",
          "identifier": "https://github.com/cmpxchg16/mcp-ethical-hacking/releases/download/v1.0.0/server.mcpb",
          "version": "1.0.0",
          "fileSha256": "fe333e598595000ae021bd27117db32ec69af6987f507ba7a63c90638ff633ce",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "ebe9848e-d092-4007-88bc-09b67823681b",
          "versionId": "3dc93eed-43b9-4a3d-9ed2-c40a39084e56",
          "publishedAt": "2025-09-13T16:13:29.782164285Z",
          "updatedAt": "2025-09-15T11:11:03.326685721Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.BenAHammond/code-auditor-mcp",
      "description": "Code Quality Auditor: Analyze code for SOLID principles, DRY violations, and more",
      "status": "active",
      "repository": {
        "url": "https://github.com/BenAHammond/code-auditor-mcp",
        "source": "github"
      },
      "version": "1.0.1",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "code-auditor-mcp",
          "version": "1.17.2",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "da4e7c0a-854f-46b7-86ab-35564aa3069f",
          "versionId": "3e07d24f-a331-4344-adb5-c456dfa7c817",
          "publishedAt": "2025-09-27T17:09:06.204827689Z",
          "updatedAt": "2025-09-27T17:09:06.204827689Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.savhascelik/meta-api-mcp-server",
      "description": "You can connect any API to LLMs. This enables AI to interact directly with APIs",
      "status": "active",
      "repository": {
        "url": "https://github.com/savhascelik/meta-api-mcp-server",
        "source": "github"
      },
      "version": "1.0.1",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "meta-api-mcp-server",
          "version": "1.0.4",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "If the api you are connecting to requires api_key, you can use this variable and you can also define different variables",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "YOUR_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "0c6c810c-c7b3-48ce-b343-dce410026b01",
          "versionId": "3e81fe2c-e973-4e0e-8aa1-d4c20b9aa106",
          "publishedAt": "2025-09-09T04:14:51.983727698Z",
          "updatedAt": "2025-09-09T04:14:51.983727698Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.b1ff/atlassian-dc-mcp-bitbucket",
      "description": "MCP server for Atlassian Bitbucket Data Center - interact with repositories and code",
      "status": "active",
      "repository": {
        "url": "https://github.com/b1ff/atlassian-dc-mcp",
        "source": "github"
      },
      "version": "0.9.9",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@atlassian-dc-mcp/bitbucket",
          "version": "0.9.9",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Bitbucket host domain (e.g. your-instance.atlassian.net)",
              "format": "string",
              "name": "BITBUCKET_HOST"
            },
            {
              "description": "Bitbucket API base path (alternative to BITBUCKET_HOST)",
              "format": "string",
              "name": "BITBUCKET_API_BASE_PATH"
            },
            {
              "description": "Bitbucket Personal Access Token or API token",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "BITBUCKET_API_TOKEN"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "632bfe48-4b52-4ef4-a266-c82075a80f1a",
          "versionId": "3ea9d856-0c93-4fcd-9d83-ede67968a5f4",
          "publishedAt": "2025-09-13T13:29:18.888401856Z",
          "updatedAt": "2025-09-13T13:29:18.888401856Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.bytedance/mcp-server-search",
      "description": "MCP server for web search operations",
      "status": "active",
      "repository": {
        "url": "https://github.com/bytedance/UI-TARS-desktop",
        "source": "github",
        "subfolder": "packages/agent-infra/mcp-servers/search"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@agent-infra/mcp-server-search",
          "version": "latest",
          "transport": {
            "type": "stdio"
          },
          "packageArguments": [
            {
              "description": "Search engine to use for browser search (default: google)",
              "format": "string",
              "default": "google",
              "type": "named",
              "name": "engine"
            },
            {
              "description": "API key for the search provider",
              "format": "string",
              "type": "named",
              "name": "api-key"
            },
            {
              "description": "Base URL for the search provider",
              "format": "string",
              "type": "named",
              "name": "base-url"
            }
          ]
        },
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@agent-infra/mcp-server-search",
          "version": "latest",
          "runtimeHint": "npx",
          "transport": {
            "type": "sse",
            "url": "http://127.0.0.1:{port}/sse"
          },
          "packageArguments": [
            {
              "description": "Search engine to use for browser search (default: google)",
              "format": "string",
              "default": "google",
              "type": "named",
              "name": "engine"
            },
            {
              "description": "API key for the search provider",
              "format": "string",
              "type": "named",
              "name": "api-key"
            },
            {
              "description": "Base URL for the search provider",
              "format": "string",
              "type": "named",
              "name": "base-url"
            },
            {
              "description": "Server port number",
              "isRequired": true,
              "format": "number",
              "default": "8089",
              "type": "named",
              "name": "port"
            }
          ]
        },
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@agent-infra/mcp-server-search",
          "version": "latest",
          "runtimeHint": "npx",
          "transport": {
            "type": "streamable-http",
            "url": "http://127.0.0.1:{port}/mcp"
          },
          "packageArguments": [
            {
              "description": "Search engine to use for browser search (default: google)",
              "format": "string",
              "default": "google",
              "type": "named",
              "name": "engine"
            },
            {
              "description": "API key for the search provider",
              "format": "string",
              "type": "named",
              "name": "api-key"
            },
            {
              "description": "Base URL for the search provider",
              "format": "string",
              "type": "named",
              "name": "base-url"
            },
            {
              "description": "Server port number",
              "isRequired": true,
              "format": "number",
              "default": "8089",
              "type": "named",
              "name": "port"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "cc89f0d3-8836-41e2-ad87-1955f41a047e",
          "versionId": "3ee8a0e0-fb00-4d94-b983-4aa4a9bfdd8f",
          "publishedAt": "2025-09-09T06:16:40.975101309Z",
          "updatedAt": "2025-09-09T06:16:40.975101309Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.ubaumann/mkdocs-mcp",
      "description": "An MCP server that provides serves MkDocs as resources.",
      "status": "active",
      "repository": {
        "url": "https://github.com/ubaumann/mkdocs-mcp",
        "source": "github"
      },
      "version": "0.1.2",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "mkdocs-mcp",
          "version": "0.1.2",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Path to the MkDocs project",
              "isRequired": true,
              "format": "string",
              "name": "MKDOCS_PROJECT_PATH"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "bb6084f0-c377-4ca1-901c-cfd3d952dfad",
          "versionId": "3f341d0b-0cb1-47a6-aedb-6ade17ef5135",
          "publishedAt": "2025-09-20T19:14:29.939373529Z",
          "updatedAt": "2025-09-20T19:14:29.939373529Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.pga/pga-golf",
      "description": "PGA's official MCP Server for all things golf-related. Find a coach, play golf, improve your game.",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.0.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.pga.com/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "8a9528bb-8c4a-4e20-8434-264e2fd67b0f",
          "versionId": "4025acb1-1da6-40bf-bcea-e8614fabe911",
          "publishedAt": "2025-09-10T15:44:45.139319366Z",
          "updatedAt": "2025-09-10T15:44:45.139319366Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.leshchenko1979/fast-mcp-telegram",
      "description": "Telegram MCP server with search and messaging capabilities",
      "status": "active",
      "repository": {
        "url": "https://github.com/leshchenko1979/fast-mcp-telegram",
        "source": "github"
      },
      "version": "0.4.5",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "fast-mcp-telegram",
          "version": "0.4.4",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Telegram API ID (from https://my.telegram.org/apps)",
              "isRequired": true,
              "name": "API_ID"
            },
            {
              "description": "Telegram API Hash (from https://my.telegram.org/apps)",
              "isRequired": true,
              "isSecret": true,
              "name": "API_HASH"
            },
            {
              "description": "Server mode: stdio (local), http-no-auth (dev), http-auth (prod)",
              "default": "stdio",
              "choices": [
                "stdio",
                "http-no-auth",
                "http-auth"
              ],
              "name": "SERVER_MODE"
            },
            {
              "description": "Custom session directory (defaults to ~/.config/fast-mcp-telegram/)",
              "name": "SESSION_DIR"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "a1a4d761-5635-480b-b636-4b6fef3c9a77",
          "versionId": "40ab6512-9c86-4a99-b057-84887e27b0a2",
          "publishedAt": "2025-09-15T08:03:29.248076221Z",
          "updatedAt": "2025-09-17T14:08:48.78146357Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.YinTokey/mcp_hackernews",
      "description": "MCP server exposing a simple Hacker News search tool (top stories).",
      "status": "active",
      "repository": {
        "url": "https://github.com/YinTokey/mcp_hackernews",
        "source": "github"
      },
      "version": "0.1.1",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "mcp-hackernews",
          "version": "0.1.1",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "24a4ab76-7ab6-4151-8cbb-692e6fe7d470",
          "versionId": "40ea433f-1885-4151-a331-0f0045fab476",
          "publishedAt": "2025-09-19T15:56:39.08426801Z",
          "updatedAt": "2025-09-19T16:50:55.13033967Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.p1va/symbols",
      "description": "MCP server to read, inspect and troubleshoot codebase symbols",
      "status": "active",
      "repository": {
        "url": "https://github.com/p1va/symbols",
        "source": "github"
      },
      "version": "0.0.13",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@p1va/symbols",
          "version": "0.0.13",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "d827a965-33bc-4262-87df-98ca6eac9a12",
          "versionId": "40fe13aa-29cb-4524-9230-6878bfde553b",
          "publishedAt": "2025-09-16T12:14:32.125980136Z",
          "updatedAt": "2025-09-16T12:14:32.125980136Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.yuna0x0/anilist-mcp",
      "description": "AniList MCP server for accessing AniList API data",
      "status": "active",
      "repository": {
        "url": "https://github.com/yuna0x0/anilist-mcp",
        "source": "github"
      },
      "version": "1.3.2",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "anilist-mcp",
          "version": "1.3.2",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "AniList API token for authenticated requests",
              "format": "string",
              "isSecret": true,
              "name": "ANILIST_TOKEN"
            }
          ]
        },
        {
          "registryType": "oci",
          "registryBaseUrl": "https://docker.io",
          "identifier": "yuna0x0/anilist-mcp",
          "version": "1.3.2",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "AniList API token for authenticated requests",
              "format": "string",
              "isSecret": true,
              "name": "ANILIST_TOKEN"
            }
          ]
        },
        {
          "registryType": "mcpb",
          "identifier": "https://github.com/yuna0x0/anilist-mcp/releases/download/v1.3.2/anilist-mcp-1.3.2.mcpb",
          "version": "1.3.2",
          "fileSha256": "5d6c9d0b6a420ccdb884ac982e9e1f8140be856012c157e85ab5bacb78a013c8",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "AniList API token for authenticated requests",
              "format": "string",
              "isSecret": true,
              "name": "ANILIST_TOKEN"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "6bdae0fa-dff2-4ae3-82f9-03710c1ffb86",
          "versionId": "4198dc87-4f6b-4470-8d35-691ad9c34771",
          "publishedAt": "2025-09-13T07:42:46.258254946Z",
          "updatedAt": "2025-09-13T07:58:52.384172296Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/brave",
      "description": "Visit https://brave.com/search/api/ for a free API key. Search the web, local businesses, images,â€¦",
      "status": "active",
      "repository": {
        "url": "https://github.com/brave/brave-search-mcp-server",
        "source": "github"
      },
      "version": "2.0.9",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/brave/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "72fbc728-2894-4a60-aaf5-44d616ddd249",
          "versionId": "419f1f04-f00b-49a4-97d6-fb6f6a317004",
          "publishedAt": "2025-09-19T12:13:23.217247561Z",
          "updatedAt": "2025-09-19T13:27:13.291855026Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.timheuer/sampledotnetmcpserver",
      "description": "Sample .NET MCP Server",
      "repository": {
        "url": "https://github.com/timheuer/sampledotnetmcpserver",
        "source": "github"
      },
      "version": "0.1.49-beta",
      "packages": [
        {
          "registryType": "nuget",
          "identifier": "TimHeuer.SampleDotnetMcpServer",
          "version": "0.1.49-beta",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "98619929-a570-46c1-8e35-4cde888731ee",
          "versionId": "419fee11-cdf7-4b4e-9dae-fdbc5bcd9844",
          "publishedAt": "2025-09-19T16:03:41.816983067Z",
          "updatedAt": "2025-09-19T21:00:37.915164645Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.marlenezw/publish-mcp-server",
      "description": "An MCP server that helps developers publish their MCP servers to the registry",
      "status": "active",
      "repository": {
        "url": "https://github.com/marlenezw/publish-mcp-server",
        "source": "github"
      },
      "version": "0.1.2",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "publish-mcp-server",
          "version": "0.1.2",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "8ae04d6a-da1e-419e-abc9-8c36f3d1f358",
          "versionId": "41a4f7e2-45d4-413c-b9e5-23272bac4728",
          "publishedAt": "2025-09-18T21:41:33.141494993Z",
          "updatedAt": "2025-09-18T22:42:06.389511199Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.cyanheads/git-mcp-server",
      "description": "Comprehensive Git MCP server enabling native git tools including clone, commit, worktree, & more.",
      "status": "active",
      "repository": {
        "url": "https://github.com/cyanheads/git-mcp-server",
        "source": "github"
      },
      "version": "2.3.4",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@cyanheads/git-mcp-server",
          "version": "2.3.4",
          "runtimeHint": "node",
          "transport": {
            "type": "stdio"
          },
          "packageArguments": [
            {
              "value": "dist/index.js",
              "type": "positional"
            }
          ],
          "environmentVariables": [
            {
              "description": "Specifies the transport mechanism for the server.",
              "isRequired": true,
              "format": "string",
              "default": "stdio",
              "name": "MCP_TRANSPORT_TYPE"
            },
            {
              "description": "Sets the minimum log level for output (e.g., 'debug', 'info', 'warn').",
              "format": "string",
              "default": "info",
              "name": "MCP_LOG_LEVEL"
            },
            {
              "description": "Set to 'true' to enable GPG/SSH signing for commits made via the git_commit tool.",
              "format": "string",
              "default": "false",
              "name": "GIT_SIGN_COMMITS"
            }
          ]
        },
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@cyanheads/git-mcp-server",
          "version": "2.3.4",
          "runtimeHint": "node",
          "transport": {
            "type": "streamable-http",
            "url": "http://127.0.0.1:3015/mcp"
          },
          "packageArguments": [
            {
              "value": "dist/index.js",
              "type": "positional"
            }
          ],
          "environmentVariables": [
            {
              "description": "Specifies the transport mechanism for the server.",
              "isRequired": true,
              "format": "string",
              "default": "http",
              "name": "MCP_TRANSPORT_TYPE"
            },
            {
              "description": "The port to run the HTTP server on.",
              "format": "string",
              "default": "3015",
              "name": "MCP_HTTP_PORT"
            },
            {
              "description": "The host interface for the HTTP server.",
              "format": "string",
              "default": "127.0.0.1",
              "name": "MCP_HTTP_HOST"
            },
            {
              "description": "The HTTP endpoint path for MCP requests.",
              "format": "string",
              "default": "/mcp",
              "name": "MCP_HTTP_ENDPOINT_PATH"
            },
            {
              "description": "Authentication mode to use: 'none', 'jwt', or 'oauth'.",
              "format": "string",
              "default": "none",
              "name": "MCP_AUTH_STRATEGY"
            },
            {
              "description": "Sets the minimum log level for output (e.g., 'debug', 'info', 'warn').",
              "format": "string",
              "default": "info",
              "name": "MCP_LOG_LEVEL"
            },
            {
              "description": "Set to 'true' to enable GPG/SSH signing for commits made via the git_commit tool.",
              "format": "string",
              "default": "false",
              "name": "GIT_SIGN_COMMITS"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "69052f97-2b99-4ab4-9d81-0de12a92b966",
          "versionId": "4262c056-422c-44a2-a545-c970216f986d",
          "publishedAt": "2025-09-26T16:34:39.110415456Z",
          "updatedAt": "2025-09-26T16:34:39.110415456Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.biodnd/agent-press",
      "description": "Agent Press: news MCP server streaming company headlines",
      "repository": {
        "url": "https://github.com/markchiang/go-agents",
        "source": "github",
        "subfolder": "src/go_agents/agents/press"
      },
      "version": "0.1.2",
      "remotes": [
        {
          "type": "sse",
          "url": "https://agent-press.biodnd.com/sse"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "8475fdbb-a38f-4d19-95ad-00e601276b42",
          "versionId": "428a0bb3-7bb6-4ff0-92f6-9636a39299c9",
          "publishedAt": "2025-09-23T09:47:04.193456925Z",
          "updatedAt": "2025-09-23T09:47:04.193456925Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.jztan/redmine-mcp-server",
      "description": "Production-ready MCP server for Redmine with security, pagination, and enterprise features",
      "status": "active",
      "repository": {
        "url": "https://github.com/jztan/redmine-mcp-server",
        "source": "github"
      },
      "version": "0.4.5",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "redmine-mcp-server",
          "version": "0.4.5",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "URL of your Redmine server (e.g., https://your-redmine-server.com)",
              "isRequired": true,
              "format": "string",
              "name": "REDMINE_URL"
            },
            {
              "description": "Redmine username for authentication (alternative to API key)",
              "format": "string",
              "name": "REDMINE_USERNAME"
            },
            {
              "description": "Redmine password for authentication (alternative to API key)",
              "format": "string",
              "isSecret": true,
              "name": "REDMINE_PASSWORD"
            },
            {
              "description": "Redmine API key for authentication (alternative to username/password)",
              "format": "string",
              "isSecret": true,
              "name": "REDMINE_API_KEY"
            },
            {
              "description": "Host address for the MCP server (default: 0.0.0.0)",
              "format": "string",
              "default": "0.0.0.0",
              "name": "SERVER_HOST"
            },
            {
              "description": "Port for the MCP server (default: 8000)",
              "format": "integer",
              "default": "8000",
              "name": "SERVER_PORT"
            },
            {
              "description": "Public hostname for file download URLs (default: localhost)",
              "format": "string",
              "default": "localhost",
              "name": "PUBLIC_HOST"
            },
            {
              "description": "Public port for file download URLs (default: 8000)",
              "format": "integer",
              "default": "8000",
              "name": "PUBLIC_PORT"
            },
            {
              "description": "Directory for storing downloaded attachments (default: ./attachments)",
              "format": "string",
              "default": "./attachments",
              "name": "ATTACHMENTS_DIR"
            },
            {
              "description": "Enable automatic cleanup of expired files (default: true)",
              "format": "boolean",
              "default": "true",
              "name": "AUTO_CLEANUP_ENABLED"
            },
            {
              "description": "Interval between cleanup runs in minutes (default: 10)",
              "format": "integer",
              "default": "10",
              "name": "CLEANUP_INTERVAL_MINUTES"
            },
            {
              "description": "Default expiry time for attachments in minutes (default: 60)",
              "format": "integer",
              "default": "60",
              "name": "ATTACHMENT_EXPIRES_MINUTES"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "a583b5d9-530d-4f56-97b4-d061b3aa9a2a",
          "versionId": "429e5de1-9038-4791-9b53-49a2710edfb7",
          "publishedAt": "2025-09-24T12:09:39.852727599Z",
          "updatedAt": "2025-09-24T12:09:39.852727599Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.nickzren/opentargets",
      "description": "Open Targets MCP server for targets, diseases, drugs, variants, and evidence",
      "status": "active",
      "repository": {
        "url": "https://github.com/nickzren/opentargets-mcp",
        "source": "github",
        "id": "984363568"
      },
      "version": "0.1.0",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "opentargets-mcp",
          "version": "0.1.0",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "224e7593-863e-4ec9-8b77-ef5b6b011250",
          "versionId": "42b4e771-e8d6-4a5d-8988-0707672f922b",
          "publishedAt": "2025-09-16T22:22:05.051791975Z",
          "updatedAt": "2025-09-22T16:27:58.093087071Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.Nekzus/npm-sentinel-mcp",
      "description": "NPM Sentinel MCP - AI-powered NPM package analysis for security, dependencies, and performance.",
      "status": "active",
      "repository": {
        "url": "https://github.com/Nekzus/npm-sentinel-mcp",
        "source": "github"
      },
      "version": "1.9.0",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@nekzus/mcp-server",
          "version": "1.9.0",
          "runtimeHint": "npx",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "364d771b-c515-4071-805d-75513fa308ce",
          "versionId": "42d70334-c6a7-48fa-af42-a3aa27340b97",
          "publishedAt": "2025-09-20T19:44:08.651401017Z",
          "updatedAt": "2025-09-20T21:15:29.26617904Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.LinuxSuRen/atest-mcp-server",
      "description": "Auto-download & launch https://github.com/LinuxSuRen/atest-mcp-server",
      "status": "active",
      "repository": {
        "url": "https://github.com/LinuxSuRen/atest-mcp-server",
        "source": "github"
      },
      "version": "1.0.2",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "atest-mcp-server-launcher",
          "version": "1.0.2",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "374be861-2966-4300-934d-a7f47011a94a",
          "versionId": "4356c3f4-4a0c-4d2c-970e-213eef76ce21",
          "publishedAt": "2025-09-09T07:37:00.342793911Z",
          "updatedAt": "2025-09-09T07:37:00.342793911Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.p1va/symbols",
      "description": "MCP server to read, inspect and troubleshoot codebase symbols",
      "status": "active",
      "repository": {
        "url": "https://github.com/p1va/symbols",
        "source": "github"
      },
      "version": "0.0.14",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@p1va/symbols",
          "version": "0.0.14",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "d827a965-33bc-4262-87df-98ca6eac9a12",
          "versionId": "435db01f-5936-44ac-8165-469b1e3491b6",
          "publishedAt": "2025-09-17T14:15:12.928928281Z",
          "updatedAt": "2025-09-17T14:15:12.928928281Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.mcpanalytics/analytics",
      "description": "MCP Analytics, searchable tools and reports with interactive HTML visualization",
      "repository": {
        "url": "https://github.com/embeddedlayers/mcp-analytics",
        "source": "github"
      },
      "version": "1.0.3",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://api.mcpanalytics.ai/auth0"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "219a2fa3-ba26-4574-9c45-44886d4ff9e8",
          "versionId": "4385f929-3b4c-4d4a-993f-a59a90d4c2be",
          "publishedAt": "2025-09-17T03:17:49.595345663Z",
          "updatedAt": "2025-09-17T03:17:49.595345663Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.ChiR24/unreal-engine-mcp",
      "description": "Production-ready MCP server for Unreal Engine with comprehensive game development tools",
      "repository": {
        "url": "https://github.com/ChiR24/Unreal_mcp.git",
        "source": "github"
      },
      "version": "0.4.0",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "unreal-engine-mcp-server",
          "version": "0.4.0",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Unreal Engine host address",
              "value": "127.0.0.1",
              "name": "UE_HOST"
            },
            {
              "description": "Remote Control HTTP port",
              "value": "30010",
              "name": "UE_RC_HTTP_PORT"
            },
            {
              "description": "Remote Control WebSocket port",
              "value": "30020",
              "name": "UE_RC_WS_PORT"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "49c64feb-2e4c-406d-b39f-1236bf2212a6",
          "versionId": "443e7b8a-779a-45a3-af72-6920083bb317",
          "publishedAt": "2025-09-20T06:29:35.18499785Z",
          "updatedAt": "2025-09-20T06:29:35.18499785Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.YinTokey/mcp_hackernews",
      "description": "MCP server exposing a simple Hacker News search tool (top stories).",
      "status": "active",
      "repository": {
        "url": "https://github.com/YinTokey/mcp_hackernews",
        "source": "github"
      },
      "version": "1.1.0",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "mcp-hackernews",
          "version": "1.1.0",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "24a4ab76-7ab6-4151-8cbb-692e6fe7d470",
          "versionId": "4543a8e4-14f0-421e-973e-6589b4bd1f22",
          "publishedAt": "2025-09-19T20:06:35.10356138Z",
          "updatedAt": "2025-09-19T20:06:35.10356138Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/BigVik193-reddit-ads-mcp",
      "description": "Manage Reddit advertising across accounts, campaigns, ad groups, posts, and ads. List accounts, fuâ€¦",
      "status": "active",
      "repository": {
        "url": "https://github.com/BigVik193/reddit-ads-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@BigVik193/reddit-ads-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "a2b19133-66ab-4184-a31f-90b39887825f",
          "versionId": "455556b3-fce2-42d7-87f5-4fa1ed3db5e1",
          "publishedAt": "2025-09-14T22:00:51.726310747Z",
          "updatedAt": "2025-09-14T22:00:51.726310747Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.Snowflake-Labs/mcp",
      "description": "MCP Server for Snowflake from Snowflake Labs",
      "status": "active",
      "repository": {
        "url": "https://github.com/Snowflake-Labs/mcp",
        "source": "github"
      },
      "version": "1.3.3",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "snowflake-labs-mcp",
          "version": "1.3.3",
          "transport": {
            "type": "stdio"
          },
          "packageArguments": [
            {
              "description": "Path to service specification file",
              "isRequired": true,
              "type": "named",
              "name": "--service-config-file"
            },
            {
              "description": "Account identifier (e.g. xy12345.us-east-1)",
              "type": "named",
              "name": "--account"
            },
            {
              "description": "Snowflake host URL",
              "type": "named",
              "name": "--host"
            },
            {
              "description": "Username for authentication",
              "type": "named",
              "name": "--user"
            },
            {
              "description": "Password or programmatic access token",
              "type": "named",
              "name": "--password"
            },
            {
              "description": "Role to use for connection",
              "type": "named",
              "name": "--role"
            },
            {
              "description": "Warehouse to use for queries",
              "type": "named",
              "name": "--warehouse"
            },
            {
              "description": "Whether passcode is embedded in password",
              "type": "named",
              "name": "--passcode-in-password"
            },
            {
              "description": "MFA passcode for authentication",
              "type": "named",
              "name": "--passcode"
            },
            {
              "description": "Private key for key pair authentication",
              "type": "named",
              "name": "--private-key"
            },
            {
              "description": "Path to private key file",
              "type": "named",
              "name": "--private-key-file"
            },
            {
              "description": "Password for encrypted private key",
              "type": "named",
              "name": "--private-key-file-pwd"
            },
            {
              "description": "Authentication type",
              "default": "snowflake",
              "type": "named",
              "name": "--authenticator"
            },
            {
              "description": "Name of connection from connections.toml (or config.toml) file",
              "type": "named",
              "name": "--connection-name"
            },
            {
              "description": "Transport for the MCP server",
              "default": "stdio",
              "choices": [
                "stdio",
                "http",
                "sse",
                "streamable-http"
              ],
              "type": "named",
              "name": "--transport"
            },
            {
              "description": "Custom endpoint path for HTTP transports",
              "default": "/mcp",
              "type": "named",
              "name": "--endpoint"
            }
          ],
          "environmentVariables": [
            {
              "description": "Account identifier (e.g. xy12345.us-east-1)",
              "format": "string",
              "name": "SNOWFLAKE_ACCOUNT"
            },
            {
              "description": "Snowflake host URL",
              "format": "string",
              "name": "SNOWFLAKE_HOST"
            },
            {
              "description": "Username for authentication",
              "format": "string",
              "name": "SNOWFLAKE_USER"
            },
            {
              "description": "Password or programmatic access token",
              "format": "string",
              "name": "SNOWFLAKE_PASSWORD"
            },
            {
              "description": "Role to use for connection",
              "format": "string",
              "name": "SNOWFLAKE_ROLE"
            },
            {
              "description": "Warehouse to use for queries",
              "format": "string",
              "name": "SNOWFLAKE_WAREHOUSE"
            },
            {
              "description": "MFA passcode for authentication",
              "format": "string",
              "name": "SNOWFLAKE_PASSCODE"
            },
            {
              "description": "Private key for key pair authentication",
              "format": "string",
              "name": "SNOWFLAKE_PRIVATE_KEY"
            },
            {
              "description": "Path to private key file",
              "format": "string",
              "name": "SNOWFLAKE_PRIVATE_KEY_FILE"
            },
            {
              "description": "Password for encrypted private key",
              "format": "string",
              "name": "SNOWFLAKE_PRIVATE_KEY_FILE_PWD"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "cd9210af-efe4-4112-97c2-32e2a6f25813",
          "versionId": "45a95eb6-1651-44eb-85bd-cf921aa14831",
          "publishedAt": "2025-09-26T18:50:29.355753394Z",
          "updatedAt": "2025-09-26T18:50:29.355753394Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.waystation/airtable",
      "description": "Access and manage your Airtable bases, tables, and records seamlessly",
      "status": "active",
      "repository": {
        "url": "https://github.com/waystation-ai/mcp",
        "source": "github"
      },
      "version": "0.3.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://waystation.ai/airtable/mcp"
        },
        {
          "type": "sse",
          "url": "https://waystation.ai/airtable/mcp/sse"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "161a89b9-90f0-4307-ad04-ebd7e916a760",
          "versionId": "45c4154d-8dbe-4452-aff1-739b8107d11b",
          "publishedAt": "2025-09-09T14:23:23.086629092Z",
          "updatedAt": "2025-09-09T14:23:23.086629092Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.teamwork/mcp",
      "description": "The Teamwork.com official MCP server helps teams efficiently manage client projects with AI.",
      "status": "active",
      "repository": {
        "url": "https://github.com/teamwork/mcp",
        "source": "github"
      },
      "version": "1.2.4",
      "packages": [
        {
          "registryType": "oci",
          "registryBaseUrl": "https://docker.io",
          "identifier": "teamwork/mcp",
          "version": "v1.2.4",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "API key generated from the Teamwork.com OAuth2 process: https://apidocs.teamwork.com/guides/teamwork/app-login-flow",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "TW_MCP_BEARER_TOKEN"
            },
            {
              "description": "Choose log output format between 'text' or 'json'. Default is 'text'.",
              "format": "string",
              "name": "TW_MCP_LOG_FORMAT"
            },
            {
              "description": "Choose log level between 'debug', 'info', 'warn' or 'error'. Default is 'info'.",
              "format": "string",
              "name": "TW_MCP_LOG_LEVEL"
            }
          ]
        }
      ],
      "remotes": [
        {
          "type": "sse",
          "url": "https://mcp.ai.teamwork.com",
          "headers": [
            {
              "description": "API key generated from the Teamwork.com OAuth2 process: https://apidocs.teamwork.com/guides/teamwork/app-login-flow",
              "isRequired": true,
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://mcp.ai.teamwork.com",
          "headers": [
            {
              "description": "API key generated from the Teamwork.com OAuth2 process: https://apidocs.teamwork.com/guides/teamwork/app-login-flow",
              "isRequired": true,
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "8e1daf12-8a74-4718-93ec-86b05728241d",
          "versionId": "45c8d51d-6b71-4f8c-aecd-733f1fc60d75",
          "publishedAt": "2025-09-12T15:06:41.256512883Z",
          "updatedAt": "2025-09-15T12:27:37.741620698Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/fitaf-ai-fitaf-mcp",
      "description": "Track workouts, nutrition, body metrics, habits, and SMART goals with insights and trends. Connectâ€¦",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@fitaf-ai/fitaf-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "40878ab8-8373-4113-8040-fc62619053d4",
          "versionId": "45dd171d-1cc6-4868-a6a3-e56dab5185ce",
          "publishedAt": "2025-09-12T20:09:50.974662926Z",
          "updatedAt": "2025-09-12T20:09:50.974662926Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.srikrishna235/scrimba-teaching-mcp",
      "description": "Unified MCP for Scrimba interactive programming education with visual learning",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "3.0.1",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "scrimba-teaching-mcp",
          "version": "3.0.1",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "9af8219e-a44d-4cce-a08d-8d5b8b7466fe",
          "versionId": "46761a87-81e6-4126-bc3e-4c0c35decf40",
          "publishedAt": "2025-09-24T14:46:53.165686451Z",
          "updatedAt": "2025-09-24T14:46:53.165686451Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/smithery-ai-github",
      "description": "Access the GitHub API, enabling file operations, repository management, search functionality, andâ€¦",
      "status": "active",
      "repository": {
        "url": "https://github.com/smithery-ai/mcp-servers",
        "source": "github",
        "subfolder": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@smithery-ai/github/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "f5bd4398-46bd-4f1a-b6e2-7a175ce401d5",
          "versionId": "467b0011-9334-4913-8a5f-bf597ea09179",
          "publishedAt": "2025-09-10T18:22:12.93052822Z",
          "updatedAt": "2025-09-10T18:22:12.93052822Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.tedfytw1209/mcp-server-EVEfleet",
      "description": "An MCP server that provides tools for EVE Online players to manage their fleets",
      "status": "active",
      "repository": {
        "url": "https://github.com/tedfytw1209/mcp-server-EVEfleet",
        "source": "github"
      },
      "version": "1.0.1",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "mcp-server-evefleet",
          "version": "0.1.3",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your API key for the service",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "YOUR_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "540d0e52-a6cb-4d28-9377-887eca830e5d",
          "versionId": "470fe31e-737b-476a-b54a-fb75e5134219",
          "publishedAt": "2025-09-20T03:21:10.599411209Z",
          "updatedAt": "2025-09-20T15:35:31.256350662Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.waystation/mcp",
      "description": "Ultimate toolbox to connect your LLM to popular productivity tools such as Monday, AirTable, Slack",
      "status": "active",
      "repository": {
        "url": "https://github.com/waystation-ai/mcp",
        "source": "github"
      },
      "version": "0.3.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://waystation.ai/mcp"
        },
        {
          "type": "sse",
          "url": "https://waystation.ai/mcp/sse"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "cfa6ee14-19e7-4d65-b5f5-ac103c484bed",
          "versionId": "48932704-6cfe-4708-b935-50c82afb3d42",
          "publishedAt": "2025-09-09T12:10:02.487930463Z",
          "updatedAt": "2025-09-09T12:10:02.487930463Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.apify/apify-mcp-server",
      "description": "Apify MCP server provides access to a marketplace for web scraping and data extraction tools.",
      "status": "active",
      "repository": {
        "url": "https://github.com/apify/apify-mcp-server",
        "source": "github"
      },
      "version": "0.4.15",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.apify.com/",
          "headers": [
            {
              "description": "Apify API token for authentication with Apify platform services. For example 'Bearer <apify-api-token>'",
              "isRequired": true,
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "2bc2f4cd-9894-48ac-9580-ca1ad1ceef26",
          "versionId": "489c7d6e-1b49-4d94-a36a-19bc9de45671",
          "publishedAt": "2025-09-19T13:48:15.323674338Z",
          "updatedAt": "2025-09-19T13:48:15.323674338Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.gradion-ai/ipybox",
      "description": "An MCP server for sandboxed Python code execution with IPython and Docker, and file transfer.",
      "status": "active",
      "repository": {
        "url": "https://github.com/gradion-ai/ipybox",
        "source": "github"
      },
      "version": "0.6.3",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "ipybox",
          "version": "0.6.3",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "2310a088-c5ba-429e-84b2-82d92622023b",
          "versionId": "489daf00-1b61-4a8d-a421-5aa1e4058360",
          "publishedAt": "2025-09-13T14:43:00.869172467Z",
          "updatedAt": "2025-09-14T09:27:10.09472192Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.MR901/plots-mcp",
      "description": "MCP server for data visualization with Mermaid charts.",
      "status": "active",
      "repository": {
        "url": "https://github.com/MR901/plots-mcp",
        "source": "github"
      },
      "version": "0.0.1",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "mcp-plots",
          "version": "0.0.1",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "bdbc2c30-2654-4e63-a034-aa20c09e8dbf",
          "versionId": "48d478fe-9fb1-4b8c-9132-3b0e3e22b2ca",
          "publishedAt": "2025-09-22T19:25:51.843169807Z",
          "updatedAt": "2025-09-22T19:25:51.843169807Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "dev.rostro/rostro",
      "description": "Turn any LLM multimodal; generate images, voices, videos, 3D models, music, and more.",
      "status": "active",
      "repository": {
        "url": "https://github.com/francis-ros/rostro-mcp-server",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://proto.rostro.dev/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "ad9fa350-fafb-4e58-a075-a28c9d358ed3",
          "versionId": "48f54e2e-d42d-4182-9598-351aa48f7a0c",
          "publishedAt": "2025-09-10T16:44:28.57398885Z",
          "updatedAt": "2025-09-10T16:44:28.57398885Z",
          "isLatest": true
        },
        "io.modelcontextprotocol.registry/publisher-provided": {
          "build_info": {
            "commit": "f7e8d9c2b1a0",
            "deployment_id": "remote-fs-deploy-456",
            "region": "us-west-2",
            "timestamp": "2023-12-05T08:45:00Z"
          },
          "tool": "cloud-deployer",
          "version": "2.4.0"
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.wonderwhy-er/desktop-commander",
      "description": "MCP server for terminal commands, file operations, and process management",
      "status": "active",
      "repository": {
        "url": "https://github.com/wonderwhy-er/DesktopCommanderMCP",
        "source": "github"
      },
      "version": "0.2.14",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@wonderwhy-er/desktop-commander",
          "version": "0.2.14",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "70b472c6-0bf2-44b2-97fc-be12bfc3cdca",
          "versionId": "490703ba-12b3-48d8-81ef-056010280a9a",
          "publishedAt": "2025-09-12T19:05:34.284609703Z",
          "updatedAt": "2025-09-18T13:15:52.412827978Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.Antonytm/mcp-sitecore-server",
      "description": "A Model Context Protocol server for Sitecore",
      "status": "active",
      "repository": {
        "url": "https://github.com/Antonytm/mcp-sitecore-server",
        "source": "github"
      },
      "version": "1.3.0",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@antonytm/mcp-sitecore-server",
          "version": "1.3.0",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "name": ""
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "397fbabe-4af0-4772-84f5-d660b761255c",
          "versionId": "491dd4a6-86a5-41d9-8ab0-dafaa3e9d2d0",
          "publishedAt": "2025-09-17T16:40:08.3256487Z",
          "updatedAt": "2025-09-17T16:49:19.079089206Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.teamwork/mcp",
      "description": "The Teamwork.com official MCP server helps teams efficiently manage client projects with AI.",
      "status": "active",
      "repository": {
        "url": "https://github.com/teamwork/mcp",
        "source": "github"
      },
      "version": "1.3.0",
      "packages": [
        {
          "registryType": "oci",
          "registryBaseUrl": "https://docker.io",
          "identifier": "teamwork/mcp",
          "version": "v1.3.0",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "API key generated from the Teamwork.com OAuth2 process: https://apidocs.teamwork.com/guides/teamwork/app-login-flow",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "TW_MCP_BEARER_TOKEN"
            },
            {
              "description": "Choose log output format between 'text' or 'json'. Default is 'text'.",
              "format": "string",
              "name": "TW_MCP_LOG_FORMAT"
            },
            {
              "description": "Choose log level between 'debug', 'info', 'warn' or 'error'. Default is 'info'.",
              "format": "string",
              "name": "TW_MCP_LOG_LEVEL"
            }
          ]
        }
      ],
      "remotes": [
        {
          "type": "sse",
          "url": "https://mcp.ai.teamwork.com",
          "headers": [
            {
              "description": "API key generated from the Teamwork.com OAuth2 process: https://apidocs.teamwork.com/guides/teamwork/app-login-flow",
              "isRequired": true,
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://mcp.ai.teamwork.com",
          "headers": [
            {
              "description": "API key generated from the Teamwork.com OAuth2 process: https://apidocs.teamwork.com/guides/teamwork/app-login-flow",
              "isRequired": true,
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "8e1daf12-8a74-4718-93ec-86b05728241d",
          "versionId": "498f3840-d628-416f-bccd-db23adaf4700",
          "publishedAt": "2025-09-15T12:27:37.668500509Z",
          "updatedAt": "2025-09-17T18:13:49.787673531Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/brave",
      "description": "Visit https://brave.com/search/api/ for a free API key. Search the web, local businesses, images,â€¦",
      "status": "active",
      "repository": {
        "url": "https://github.com/brave/brave-search-mcp-server",
        "source": "github"
      },
      "version": "2.0.7",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/brave/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "72fbc728-2894-4a60-aaf5-44d616ddd249",
          "versionId": "4a3dfc88-8bc3-48f3-92b5-0285b455ba46",
          "publishedAt": "2025-09-19T11:31:50.983916145Z",
          "updatedAt": "2025-09-19T11:38:30.02190701Z",
          "isLatest": false
        }
      }
    }
  ]
}