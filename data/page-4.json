{
  "servers": [
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.cyanheads/mcp-ts-template",
      "description": "A production-grade TypeScript template for scalable MCP servers with built-in observability.",
      "status": "active",
      "repository": {
        "url": "https://github.com/cyanheads/mcp-ts-template",
        "source": "github"
      },
      "version": "2.0.2",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "mcp-ts-template",
          "version": "2.0.1",
          "runtime_hint": "bun",
          "transport": {
            "type": "stdio"
          },
          "package_arguments": [
            {
              "value": "run",
              "type": "positional"
            },
            {
              "value": "start:stdio",
              "type": "positional"
            }
          ],
          "environment_variables": [
            {
              "description": "Sets the minimum log level for output (e.g., 'debug', 'info', 'warn').",
              "format": "string",
              "default": "info",
              "name": "MCP_LOG_LEVEL"
            }
          ]
        },
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "mcp-ts-template",
          "version": "2.0.1",
          "runtime_hint": "bun",
          "transport": {
            "type": "streamable-http",
            "url": "http://localhost:3010/mcp"
          },
          "package_arguments": [
            {
              "value": "run",
              "type": "positional"
            },
            {
              "value": "start:http",
              "type": "positional"
            }
          ],
          "environment_variables": [
            {
              "description": "The port to run the HTTP server on.",
              "format": "string",
              "default": "3010",
              "name": "MCP_HTTP_PORT"
            },
            {
              "description": "Authentication mode to use: 'none', 'jwt', or 'oauth'.",
              "format": "string",
              "default": "none",
              "name": "MCP_AUTH_MODE"
            },
            {
              "description": "Sets the minimum log level for output (e.g., 'debug', 'info', 'warn').",
              "format": "string",
              "default": "info",
              "name": "MCP_LOG_LEVEL"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "a0bcd673-292a-4ba3-8dbc-eaf2ff92e7fc",
          "published_at": "2025-09-14T10:06:30.723296411Z",
          "updated_at": "2025-09-15T13:43:27.500265535Z",
          "is_latest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.balldontlie/mcp",
      "description": "MCP server for BALLDONTLIE API",
      "status": "active",
      "repository": {
        "url": "https://github.com/balldontlie-api/mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.balldontlie.io/mcp",
          "headers": [
            {
              "description": "API key for authentication",
              "is_required": true,
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "a1338208-2314-4d5d-bf1b-073348067148",
          "published_at": "2025-09-18T00:33:15.822454699Z",
          "updated_at": "2025-09-18T00:35:55.651573674Z",
          "is_latest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "ai.smithery/aryankeluskar-poke-video-mcp",
      "description": "Search your Flashback video library with natural language to instantly find relevant moments. Getâ€¦",
      "status": "active",
      "repository": {
        "url": "https://github.com/aryankeluskar/poke-video-mcp",
        "source": "github"
      },
      "version": "1.14.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@aryankeluskar/poke-video-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "a1ca2e8c-20e7-44f7-a0ad-eb2aef2faf78",
          "published_at": "2025-09-14T17:42:05.006813829Z",
          "updated_at": "2025-09-14T17:42:05.006813829Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.linxule/lotus-wisdom",
      "description": "An MCP server for problem-solving using the Lotus Sutra's wisdom framework.",
      "status": "active",
      "repository": {
        "url": "https://github.com/linxule/lotus-wisdom-mcp",
        "source": "github",
        "id": "963596268"
      },
      "version": "0.1.2",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "lotus-wisdom-mcp",
          "version": "0.1.2",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "a2e1778e-50cf-4972-a9cb-e31a89068e6f",
          "published_at": "2025-09-16T23:53:10.712981505Z",
          "updated_at": "2025-09-16T23:53:10.712981505Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.leshchenko1979/fast-mcp-telegram",
      "description": "Telegram MCP server with search and messaging capabilities",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.4.4",
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "a31f1b64-c682-4771-a4a8-76b0a9d96ec9",
          "published_at": "2025-09-11T16:40:10.557651314Z",
          "updated_at": "2025-09-15T08:03:29.365893275Z",
          "is_latest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "com.docfork/docfork-mcp",
      "description": "MCP server for Docfork",
      "status": "active",
      "repository": {
        "url": "https://github.com/docfork/docfork-mcp",
        "source": "github"
      },
      "version": "0.7.2",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "docfork",
          "version": "0.7.2",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your API key for the service",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "YOUR_API_KEY"
            }
          ]
        }
      ],
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.docfork.com/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "a6ab98ca-2224-4dc5-b7ce-91f97c40cb56",
          "published_at": "2025-09-17T14:44:53.975619664Z",
          "updated_at": "2025-09-17T14:44:53.975619664Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.b1ff/atlassian-dc-mcp-confluence",
      "description": "MCP server for Atlassian Confluence Data Center - access and manage content",
      "status": "active",
      "repository": {
        "url": "https://github.com/b1ff/atlassian-dc-mcp",
        "source": "github"
      },
      "version": "0.9.7",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@atlassian-dc-mcp/confluence",
          "version": "0.9.7",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Confluence host domain (e.g. your-instance.atlassian.net)",
              "format": "string",
              "name": "CONFLUENCE_HOST"
            },
            {
              "description": "Confluence API base path (alternative to CONFLUENCE_HOST)",
              "format": "string",
              "name": "CONFLUENCE_API_BASE_PATH"
            },
            {
              "description": "Confluence Personal Access Token or API token",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "CONFLUENCE_API_TOKEN"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "a77e222c-d64a-4cd2-a44a-b4e46bdcbfed",
          "published_at": "2025-09-13T13:17:33.200471952Z",
          "updated_at": "2025-09-13T13:18:50.974154729Z",
          "is_latest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.yuna0x0/hackmd-mcp",
      "description": "A Model Context Protocol server for integrating HackMD's note-taking platform with AI assistants.",
      "status": "active",
      "repository": {
        "url": "https://github.com/yuna0x0/hackmd-mcp",
        "source": "github"
      },
      "version": "1.5.0",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "hackmd-mcp",
          "version": "1.5.0",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your HackMD API token for API authentication",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "HACKMD_API_TOKEN"
            },
            {
              "description": "Optional HackMD API URL, defaults to https://api.hackmd.io/v1",
              "format": "string",
              "default": "https://api.hackmd.io/v1",
              "name": "HACKMD_API_URL"
            }
          ]
        },
        {
          "registry_type": "oci",
          "registry_base_url": "https://docker.io",
          "identifier": "yuna0x0/hackmd-mcp",
          "version": "1.5.0",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your HackMD API token for API authentication",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "HACKMD_API_TOKEN"
            },
            {
              "description": "Optional HackMD API URL, defaults to https://api.hackmd.io/v1",
              "format": "string",
              "default": "https://api.hackmd.io/v1",
              "name": "HACKMD_API_URL"
            }
          ]
        },
        {
          "registry_type": "mcpb",
          "identifier": "https://github.com/yuna0x0/hackmd-mcp/releases/download/v1.5.0/hackmd-mcp-1.5.0.mcpb",
          "version": "1.5.0",
          "file_sha256": "6035e3082ffaf5627e1293a2c8a5d7f42496010431c9b026859dae3bbaa9ce38",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your HackMD API token for API authentication",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "HACKMD_API_TOKEN"
            },
            {
              "description": "Optional HackMD API URL, defaults to https://api.hackmd.io/v1",
              "format": "string",
              "default": "https://api.hackmd.io/v1",
              "name": "HACKMD_API_URL"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "a793348b-c4ba-457a-aa80-6b7269adc4ce",
          "published_at": "2025-09-15T03:10:52.965842649Z",
          "updated_at": "2025-09-15T03:10:52.965842649Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "com.mintmcp/gcal",
      "description": "A MintMCP server that works with Google Calendar to manage event listing, reading, and updates.",
      "status": "active",
      "repository": {
        "url": "https://github.com/mintmcp/mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://gcal.mintmcp.com/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "a7aa8d87-ead3-4ee3-9021-f41edf303f72",
          "published_at": "2025-09-09T19:28:43.15437668Z",
          "updated_at": "2025-09-09T19:35:28.126060102Z",
          "is_latest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.himorishige/hatago-mcp-hub",
      "description": "Unified MCP Hub for managing multiple Model Context Protocol servers",
      "status": "active",
      "repository": {
        "url": "https://github.com/himorishige/hatago-mcp-hub",
        "source": "github"
      },
      "version": "0.0.12",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@himorishige/hatago-mcp-hub",
          "version": "0.0.12",
          "runtime_hint": "npx",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "a7fef886-c01c-4752-877e-b0da11049d3d",
          "published_at": "2025-09-13T13:55:18.531630059Z",
          "updated_at": "2025-09-13T14:40:04.494030232Z",
          "is_latest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.chris-schra/mcp-funnel",
      "description": "MCP proxy that aggregates multiple servers with tool filtering and customization",
      "status": "active",
      "repository": {
        "url": "https://github.com/chris-schra/mcp-funnel",
        "source": "github"
      },
      "version": "0.0.6",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "mcp-funnel",
          "version": "0.0.6",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "a8a5c761-c1dc-4d1d-9100-b57df4c9ec0d",
          "published_at": "2025-09-17T18:33:35.912597Z",
          "updated_at": "2025-09-17T18:55:31.893305521Z",
          "is_latest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "ai.smithery/Aman-Amith-Shastry-scientific_computation_mcp",
      "description": "This MCP server enables users to perform scientific computations regarding linear algebra and vectâ€¦",
      "status": "active",
      "repository": {
        "url": "https://github.com/Aman-Amith-Shastry/scientific_computation_mcp",
        "source": "github"
      },
      "version": "1.13.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@Aman-Amith-Shastry/scientific_computation_mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "a8f1ddcb-c162-4a50-8295-74ffbfbf76a7",
          "published_at": "2025-09-12T01:14:07.078270174Z",
          "updated_at": "2025-09-12T01:14:07.078270174Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.OpenCageData/opencage-geocoding-mcp",
      "description": "MCP server for OpenCage geocoding API",
      "status": "active",
      "repository": {
        "url": "https://github.com/OpenCageData/opencage-geocoding-mcp",
        "source": "github"
      },
      "version": "1.0.3",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@opencage/mcp-opencage-server",
          "version": "1.0.3",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your API key for the service",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "YOUR_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "a953ea94-b7e7-415c-8766-33c4d5b64b4d",
          "published_at": "2025-09-11T18:24:40.318380733Z",
          "updated_at": "2025-09-11T18:24:40.318380733Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.domdomegg/airtable-mcp-server",
      "description": "Read and write access to Airtable database schemas, tables, and records.",
      "status": "active",
      "repository": {
        "url": "https://github.com/domdomegg/airtable-mcp-server.git",
        "source": "github"
      },
      "version": "1.7.3",
      "packages": [
        {
          "registry_type": "npm",
          "identifier": "airtable-mcp-server",
          "version": "1.7.3",
          "runtime_hint": "npx",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Airtable personal access token (e.g., pat123.abc123). Create at https://airtable.com/create/tokens/new with scopes: schema.bases:read, data.records:read, and optionally schema.bases:write and data.records:write.",
              "is_required": true,
              "is_secret": true,
              "name": "AIRTABLE_API_KEY"
            }
          ]
        },
        {
          "registry_type": "oci",
          "identifier": "domdomegg/airtable-mcp-server",
          "version": "1.7.3",
          "runtime_hint": "docker",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Airtable personal access token (e.g., pat123.abc123). Create at https://airtable.com/create/tokens/new with scopes: schema.bases:read, data.records:read, and optionally schema.bases:write and data.records:write.",
              "is_required": true,
              "is_secret": true,
              "name": "AIRTABLE_API_KEY"
            }
          ]
        },
        {
          "registry_type": "mcpb",
          "identifier": "https://github.com/domdomegg/airtable-mcp-server/releases/download/v1.7.3/airtable-mcp-server.mcpb",
          "version": "1.7.3",
          "file_sha256": "0f28a9129cfebd262dfb77854c872355d21401bb3e056575b3027081f5d570ca",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "a9ab84c2-d56e-4bf2-8dc2-ad725fdb8d27",
          "published_at": "2025-09-12T03:19:04.49211253Z",
          "updated_at": "2025-09-12T03:19:04.49211253Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "ai.smithery/plainyogurt21-sec-edgar-mcp",
      "description": "Provide AI assistants with real-time access to official SEC EDGAR filings and financial data. Enabâ€¦",
      "status": "active",
      "repository": {
        "url": "https://github.com/plainyogurt21/sec-edgar-mcp",
        "source": "github"
      },
      "version": "1.14.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@plainyogurt21/sec-edgar-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "aa5b856a-de58-4023-b828-489a606c4fba",
          "published_at": "2025-09-13T21:20:44.610657663Z",
          "updated_at": "2025-09-13T21:20:44.610657663Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.gradion-ai/ipybox",
      "description": "An MCP server for sandboxed Python code execution with IPython and Docker, and file transfer.",
      "status": "active",
      "repository": {
        "url": "https://github.com/gradion-ai/ipybox",
        "source": "github"
      },
      "version": "0.6.6",
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "ipybox",
          "version": "0.6.6",
          "runtime_hint": "uvx",
          "transport": {
            "type": "stdio"
          },
          "package_arguments": [
            {
              "description": "Required MCP server subcommand",
              "is_required": true,
              "value": "mcp",
              "type": "positional"
            },
            {
              "description": "Directory allowed for host filesystem operations",
              "type": "named",
              "name": "--allowed-dir",
              "is_repeated": true,
              "value_hint": "directory_path"
            },
            {
              "description": "Domain, IP address, or CIDR range allowed for outbound network access",
              "type": "named",
              "name": "--allowed-domain",
              "is_repeated": true,
              "value_hint": "domain_or_ip"
            },
            {
              "description": "Docker image tag to use",
              "type": "named",
              "name": "--container-tag",
              "value_hint": "docker_image_tag"
            },
            {
              "description": "Environment variable for container (KEY=VALUE format)",
              "type": "named",
              "name": "--container-env-var",
              "is_repeated": true,
              "value_hint": "env_var"
            },
            {
              "description": "Path to file containing container environment variables",
              "type": "named",
              "name": "--container-env-file",
              "value_hint": "file_path"
            },
            {
              "description": "Bind mount for container (host_path:container_path format)",
              "type": "named",
              "name": "--container-bind",
              "is_repeated": true,
              "value_hint": "bind_mount"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "aa8580fa-a837-4ca7-83b3-181bed182529",
          "published_at": "2025-09-14T09:57:57.864977026Z",
          "updated_at": "2025-09-14T09:57:57.864977026Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "ai.waystation/monday",
      "description": "Access and manage your Monday.com boards, items, and updates seamlessly",
      "status": "active",
      "repository": {
        "url": "https://github.com/waystation-ai/mcp",
        "source": "github"
      },
      "version": "0.3.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://waystation.ai/monday/mcp"
        },
        {
          "type": "sse",
          "url": "https://waystation.ai/monday/mcp/sse"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "aaf0e62a-eaa9-49d9-a6f1-c10cf459274e",
          "published_at": "2025-09-09T14:20:40.836347203Z",
          "updated_at": "2025-09-09T14:20:40.836347203Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.cyanheads/git-mcp-server",
      "description": "Comprehensive Git MCP server enabling native git tools including clone, commit, worktree, & more.",
      "status": "active",
      "repository": {
        "url": "https://github.com/cyanheads/git-mcp-server",
        "source": "github"
      },
      "version": "2.3.3",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@cyanheads/git-mcp-server",
          "version": "2.3.3",
          "runtime_hint": "node",
          "transport": {
            "type": "stdio"
          },
          "package_arguments": [
            {
              "value": "dist/index.js",
              "type": "positional"
            }
          ],
          "environment_variables": [
            {
              "description": "Specifies the transport mechanism for the server.",
              "is_required": true,
              "format": "string",
              "default": "stdio",
              "name": "MCP_TRANSPORT_TYPE"
            },
            {
              "description": "Sets the minimum log level for output (e.g., 'debug', 'info', 'warn').",
              "format": "string",
              "default": "info",
              "name": "MCP_LOG_LEVEL"
            },
            {
              "description": "Set to 'true' to enable GPG/SSH signing for commits made via the git_commit tool.",
              "format": "string",
              "default": "false",
              "name": "GIT_SIGN_COMMITS"
            }
          ]
        },
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@cyanheads/git-mcp-server",
          "version": "2.3.3",
          "runtime_hint": "node",
          "transport": {
            "type": "streamable-http",
            "url": "http://127.0.0.1:3015/mcp"
          },
          "package_arguments": [
            {
              "value": "dist/index.js",
              "type": "positional"
            }
          ],
          "environment_variables": [
            {
              "description": "Specifies the transport mechanism for the server.",
              "is_required": true,
              "format": "string",
              "default": "http",
              "name": "MCP_TRANSPORT_TYPE"
            },
            {
              "description": "The port to run the HTTP server on.",
              "format": "string",
              "default": "3015",
              "name": "MCP_HTTP_PORT"
            },
            {
              "description": "The host interface for the HTTP server.",
              "format": "string",
              "default": "127.0.0.1",
              "name": "MCP_HTTP_HOST"
            },
            {
              "description": "The HTTP endpoint path for MCP requests.",
              "format": "string",
              "default": "/mcp",
              "name": "MCP_HTTP_ENDPOINT_PATH"
            },
            {
              "description": "Authentication mode to use: 'none', 'jwt', or 'oauth'.",
              "format": "string",
              "default": "none",
              "name": "MCP_AUTH_STRATEGY"
            },
            {
              "description": "Sets the minimum log level for output (e.g., 'debug', 'info', 'warn').",
              "format": "string",
              "default": "info",
              "name": "MCP_LOG_LEVEL"
            },
            {
              "description": "Set to 'true' to enable GPG/SSH signing for commits made via the git_commit tool.",
              "format": "string",
              "default": "false",
              "name": "GIT_SIGN_COMMITS"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "ab48df60-848e-4f96-b5d0-9fa505deb331",
          "published_at": "2025-09-15T12:59:07.492836786Z",
          "updated_at": "2025-09-15T12:59:07.492836786Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.grupo-avispa/dsr_mcp_server",
      "description": "An MCP server that provides tools for interacting with Deep State Representation (DSR) graphs.",
      "status": "active",
      "repository": {
        "url": "https://github.com/grupo-avispa/dsr_mcp_server",
        "source": "github"
      },
      "version": "1.0.0",
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "aba25196-788f-4923-8fc8-836533ad0745",
          "published_at": "2025-09-17T10:15:32.830670599Z",
          "updated_at": "2025-09-17T10:22:23.142839077Z",
          "is_latest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.abelljs/abell",
      "description": "AI tools related to Abell. Currently includes MCP of Abell",
      "status": "active",
      "repository": {
        "url": "https://github.com/abelljs/abell",
        "source": "github"
      },
      "version": "0.0.9",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "abell-ai",
          "version": "0.0.9",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "ac1b1492-c254-4727-85e5-21c7efaa26f5",
          "published_at": "2025-09-17T14:53:07.562174808Z",
          "updated_at": "2025-09-17T14:53:07.562174808Z",
          "is_latest": true
        }
      }
    },
    {
      "name": "io.github.ruvnet/claude-flow",
      "description": "AI orchestration with hive-mind swarms, neural networks, and 87 MCP tools for enterprise dev.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "2.0.0-alpha.105",
      "packages": [
        {
          "registry_type": "npm",
          "identifier": "claude-flow",
          "version": "2.0.0-alpha.105",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "aca46879-069c-4052-99a4-b6941bc6fb26",
          "published_at": "2025-09-10T16:46:39.96638146Z",
          "updated_at": "2025-09-10T16:55:33.075242785Z",
          "is_latest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "ai.smithery/MetehanGZL-pokemcp",
      "description": "Provide detailed PokÃ©mon data and information through a standardized MCP interface. Enable LLMs anâ€¦",
      "status": "active",
      "repository": {
        "url": "https://github.com/MetehanGZL/PokeMCP",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@MetehanGZL/pokemcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "ace42071-ecbd-472a-9738-a4701d427aef",
          "published_at": "2025-09-15T17:56:16.252320146Z",
          "updated_at": "2025-09-15T17:56:16.252320146Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.jkakar/recipe-mcp",
      "description": "Generate and remix recipes using cookwith.co",
      "status": "active",
      "repository": {
        "url": "https://github.com/blaideinc/recipe-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@cookwith/recipe-mcp",
          "version": "1.0.1",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "ad491a05-3439-4f9b-ac52-d3801bdffba4",
          "published_at": "2025-09-11T18:11:49.433940965Z",
          "updated_at": "2025-09-11T18:27:40.596727222Z",
          "is_latest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "com.notion/mcp",
      "description": "Official Notion MCP server",
      "status": "active",
      "repository": {
        "url": "https://github.com/makenotion/notion-next",
        "source": "github",
        "subfolder": "src/cloudflare-mcp"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.notion.com/mcp"
        },
        {
          "type": "sse",
          "url": "https://mcp.notion.com/sse"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "ad85ae5f-c107-4d47-b2c1-af82a1a9a7af",
          "published_at": "2025-09-11T22:19:32.446786781Z",
          "updated_at": "2025-09-11T22:25:50.746839158Z",
          "is_latest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.xorrkaz/cml-mcp",
      "description": "An MCP server that provides access to common Cisco Modeling Labs (CML) operations.",
      "status": "active",
      "repository": {
        "url": "https://github.com/xorrkaz/cml-mcp",
        "source": "github"
      },
      "version": "0.8.4",
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "cml-mcp",
          "version": "0.8.4",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "URL for the CML Server",
              "is_required": true,
              "format": "string",
              "name": "CML_URL"
            },
            {
              "description": "Username for CML authentication",
              "is_required": true,
              "format": "string",
              "name": "CML_USERNAME"
            },
            {
              "description": "Password for CML authentication",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "CML_PASSWORD"
            },
            {
              "description": "Username for authentication to devices running in CML",
              "format": "string",
              "name": "PYATS_USERNAME"
            },
            {
              "description": "Password for authentication to devices running in CML",
              "format": "string",
              "is_secret": true,
              "name": "PYATS_PASSWORD"
            },
            {
              "description": "Enable password for authentication to devices running in CML",
              "format": "string",
              "is_secret": true,
              "name": "PYATS_AUTH_PASS"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "add45668-2a60-42e1-aed8-09a9f957c589",
          "published_at": "2025-09-14T14:57:56.266090296Z",
          "updated_at": "2025-09-14T14:57:56.266090296Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://modelcontextprotocol.io/schemas/draft/2025-07-09/server.json",
      "name": "io.github.timheuer/sampledotnetmcpserver",
      "description": "Sample .NET MCP Server",
      "repository": {
        "url": "https://github.com/timheuer/sampledotnetmcpserver",
        "source": "github"
      },
      "version": "0.1.26-beta",
      "packages": [
        {
          "registry_type": "nuget",
          "identifier": "TimHeuer.SampleDotnetMcpServer",
          "version": "0.1.26-beta",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "ae385caf-a601-48d2-8ff4-eea1cbc424da",
          "published_at": "2025-09-16T22:11:37.310707427Z",
          "updated_at": "2025-09-16T22:30:54.36195718Z",
          "is_latest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "ai.zine/mcp",
      "description": "Your memory, everywhere AI goes. Build knowledge once, access it via MCP anywhere.",
      "status": "active",
      "repository": {
        "url": "https://github.com/graphlit/graphlit-mcp-server",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://www.zine.ai/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "b082814d-7200-439d-9ebf-9683529e2b33",
          "published_at": "2025-09-09T20:16:56.788715831Z",
          "updated_at": "2025-09-10T18:02:28.779912076Z",
          "is_latest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.tuannvm/mcp-trino",
      "description": "MCP server for Trino distributed SQL query engine access",
      "status": "active",
      "repository": {
        "url": "https://github.com/tuannvm/mcp-trino",
        "source": "github"
      },
      "version": "2.2.1",
      "packages": [
        {
          "registry_type": "mcpb",
          "identifier": "https://github.com/tuannvm/mcp-trino/releases/download/v2.2.1/mcp-trino_2.2.1_darwin_arm64.tar.gz",
          "version": "2.2.1",
          "file_sha256": "1a18882ab43243e17420f3562118a4c3e7fff12bc6b145066ae64b90b2dc0159",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Trino server hostname",
              "is_required": true,
              "format": "string",
              "name": "TRINO_HOST"
            },
            {
              "description": "Trino server port",
              "format": "string",
              "name": "TRINO_PORT"
            },
            {
              "description": "Trino username",
              "is_required": true,
              "format": "string",
              "name": "TRINO_USER"
            },
            {
              "description": "Trino password",
              "format": "string",
              "is_secret": true,
              "name": "TRINO_PASSWORD"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "b092f116-9b0c-4ffd-abb2-a3d2e554c4fc",
          "published_at": "2025-09-09T05:26:17.749412364Z",
          "updated_at": "2025-09-09T05:26:17.749412364Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.cyanheads/mcp-ts-template",
      "description": "A production-grade TypeScript template for scalable MCP servers with built-in observability.",
      "status": "active",
      "repository": {
        "url": "https://github.com/cyanheads/mcp-ts-template",
        "source": "github"
      },
      "version": "2.0.1",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "mcp-ts-template",
          "version": "2.0.1",
          "runtime_hint": "bun",
          "transport": {
            "type": "stdio"
          },
          "package_arguments": [
            {
              "value": "run",
              "type": "positional"
            },
            {
              "value": "start:stdio",
              "type": "positional"
            }
          ]
        },
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "mcp-ts-template",
          "version": "2.0.1",
          "runtime_hint": "bun",
          "transport": {
            "type": "streamable-http",
            "url": "http://localhost:3010/mcp"
          },
          "package_arguments": [
            {
              "value": "run",
              "type": "positional"
            },
            {
              "value": "start:http",
              "type": "positional"
            }
          ],
          "environment_variables": [
            {
              "description": "The port to run the HTTP server on.",
              "format": "string",
              "default": "3010",
              "name": "MCP_HTTP_PORT"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "b0d0defb-6cdd-43ea-bcef-6db41f3906f6",
          "published_at": "2025-09-14T09:08:13.356523069Z",
          "updated_at": "2025-09-14T10:06:30.730167416Z",
          "is_latest": false
        }
      }
    },
    {
      "$schema": "https://modelcontextprotocol.io/schemas/draft/2025-07-09/server.json",
      "name": "io.github.timheuer/sampledotnetmcpserver",
      "description": "Sample .NET MCP Server",
      "repository": {
        "url": "https://github.com/timheuer/sampledotnetmcpserver",
        "source": "github"
      },
      "version": "0.1.18-beta",
      "packages": [
        {
          "registry_type": "nuget",
          "identifier": "TimHeuer.SampleDotnetMcpServer",
          "version": "0.1.18-beta",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "b0d7e2ec-250a-42a7-bc01-198e42672eeb",
          "published_at": "2025-09-10T15:31:23.614864173Z",
          "updated_at": "2025-09-10T16:00:22.19485388Z",
          "is_latest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.promplate/hmr",
      "description": "Hot Module Reload (HMR) for Python with reactive programming and MCP tools",
      "repository": {
        "url": "https://github.com/promplate/pyth-on-line",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://promplate.github.io/pyth-on-line/hmr/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "b2342344-c506-4b06-a8e3-931cb18d22ef",
          "published_at": "2025-09-17T20:50:30.150753217Z",
          "updated_at": "2025-09-17T20:50:30.150753217Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "ai.smithery/rainbowgore-stealthee-mcp-tools",
      "description": "Spot pre-launch products before they trend. Search the web and tech sites, extract and parse pagesâ€¦",
      "status": "active",
      "repository": {
        "url": "https://github.com/rainbowgore/stealthee-MCP-tools",
        "source": "github"
      },
      "version": "1.14.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@rainbowgore/stealthee-mcp-tools/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "b302b4d4-9e21-40b3-b3ec-72df9940b81c",
          "published_at": "2025-09-18T08:35:04.917712832Z",
          "updated_at": "2025-09-18T08:35:04.917712832Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "com.letta/memory-mcp",
      "description": "MCP server for AI memory management using Letta - Standard MCP format",
      "status": "active",
      "repository": {
        "url": "https://github.com/letta-ai/memory-mcp",
        "source": "github"
      },
      "version": "2.0.2",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@letta-ai/memory-mcp",
          "version": "2.0.2",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Letta API key for memory operations",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "LETTA_API_KEY"
            },
            {
              "description": "Unique user identifier for associated memories",
              "format": "string",
              "name": "LETTA_USER_ID"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "b305e6df-7c51-4067-a28c-d5964c68bd74",
          "published_at": "2025-09-09T06:28:26.340372855Z",
          "updated_at": "2025-09-09T06:28:26.340372855Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.globalping/mcp",
      "description": "Interact with a global network measurement platform.Run network commands from any point in the world",
      "status": "active",
      "repository": {
        "url": "https://github.com/jsdelivr/globalping-mcp-server",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "sse",
          "url": "https://mcp.globalping.io/sse"
        },
        {
          "type": "streamable-http",
          "url": "https://mcp.globalping.io/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "b30f06c4-c3de-4734-8996-88c9d13ad12c",
          "published_at": "2025-09-09T15:58:08.139458885Z",
          "updated_at": "2025-09-09T15:58:08.139458885Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "ai.smithery/browserbasehq-mcp-browserbase",
      "description": "Provides cloud browser automation capabilities using Stagehand and Browserbase, enabling LLMs to iâ€¦",
      "status": "active",
      "repository": {
        "url": "https://github.com/browserbase/mcp-server-browserbase",
        "source": "github"
      },
      "version": "2.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@browserbasehq/mcp-browserbase/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "b35a6287-b91e-4a86-9eaa-776fc7d272dc",
          "published_at": "2025-09-16T17:17:18.587291714Z",
          "updated_at": "2025-09-16T17:17:18.587291714Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.AungMyoKyaw/betterprompt-mcp",
      "description": "MCP server for AI-enhanced prompt engineering and request conversion.",
      "status": "active",
      "repository": {
        "url": "https://github.com/AungMyoKyaw/betterprompt-mcp",
        "source": "github"
      },
      "version": "0.2.1",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "betterprompt-mcp",
          "version": "0.2.1",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "b361137f-582b-4748-8f7f-eb144fd4ed2c",
          "published_at": "2025-09-17T17:15:50.170627394Z",
          "updated_at": "2025-09-17T17:15:50.170627394Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "com.getclockwise/clockwise-mcp",
      "description": "An MCP server for managing your calendar, via Clockwise",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.getclockwise.com/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "b3c4cf45-bfc9-44b2-8b0f-d2b07f801567",
          "published_at": "2025-09-15T23:12:29.67036488Z",
          "updated_at": "2025-09-15T23:12:29.67036488Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "ai.mcpcap/mcpcap",
      "description": "An MCP server for analyzing PCAP files.",
      "status": "active",
      "repository": {
        "url": "https://github.com/mcpcap/mcpcap",
        "source": "github"
      },
      "version": "0.5.5",
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "mcpcap",
          "version": "0.4.4",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "b3f3ce4a-be05-4483-ace1-854555225f00",
          "published_at": "2025-09-12T01:55:40.782813803Z",
          "updated_at": "2025-09-12T02:03:43.967160658Z",
          "is_latest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.stefanoamorelli/fred-mcp-server",
      "description": "Federal Reserve Economic Data (FRED) MCP Server - Access all 800,000+ economic time series",
      "status": "active",
      "repository": {
        "url": "https://github.com/stefanoamorelli/fred-mcp-server",
        "source": "github"
      },
      "version": "1.0.1",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "fred-mcp-server",
          "version": "1.0.1",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your FRED API key to access the API",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "FRED_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "b5251106-16c6-40e7-89d7-b123841d18ea",
          "published_at": "2025-09-14T11:16:38.3334627Z",
          "updated_at": "2025-09-14T11:16:38.3334627Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "ai.smithery/zwldarren-akshare-one-mcp",
      "description": "Provide access to Chinese stock market data including historical prices, real-time data, news, andâ€¦",
      "status": "active",
      "repository": {
        "url": "https://github.com/zwldarren/akshare-one-mcp",
        "source": "github"
      },
      "version": "1.14.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@zwldarren/akshare-one-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "b54429bf-2285-4bc9-bd62-ec79299fc34b",
          "published_at": "2025-09-11T19:15:39.848820116Z",
          "updated_at": "2025-09-11T19:15:39.848820116Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.dynatrace-oss/Dynatrace-mcp",
      "description": "Model Context Protocol server for Dynatrace - access logs, events, metrics from Dynatrace via MCP.",
      "status": "active",
      "repository": {
        "url": "https://github.com/dynatrace-oss/Dynatrace-mcp",
        "source": "github"
      },
      "version": "0.6.0-rc.1",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@dynatrace-oss/dynatrace-mcp-server",
          "version": "0.6.0-rc.1",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your Dynatrace Platform Token",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "DT_PLATFORM_TOKEN"
            },
            {
              "description": "The URL of your Dynatrace environment (e.g. 'https://abc12345.apps.dynatrace.com')",
              "format": "string",
              "name": "DT_ENVIRONMENT"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "b5557497-4ef1-4ae1-a7af-08ebce3f5870",
          "published_at": "2025-09-15T11:13:59.272010592Z",
          "updated_at": "2025-09-18T08:07:03.507178909Z",
          "is_latest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "com.enigma/enigma-mcp-server",
      "description": "An MCP server that provides access to trusted data about business identity and activity",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0-build1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.enigma.com/http"
        },
        {
          "type": "streamable-http",
          "url": "https://mcp.enigma.com/http-key",
          "headers": [
            {
              "description": "Token of Enigma API key. Used to enable authentication without presenting the user with an oAuth login.",
              "is_required": true,
              "is_secret": true,
              "name": "x-api-key"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://mcp.enigma.com/sse"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "b5c49bdf-07bc-478b-9048-23590f4052fb",
          "published_at": "2025-09-10T19:23:14.035830574Z",
          "updated_at": "2025-09-10T19:23:14.035830574Z",
          "is_latest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "ai.smithery/fengyinxia-jimeng-mcp",
      "description": "Create images and videos from prompts, with options for image mixing, reference images, and start/â€¦",
      "status": "active",
      "repository": {
        "url": "https://github.com/fengyinxia/jimeng-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@fengyinxia/jimeng-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "b6c1667c-b54f-4fdf-80cf-3185aa22cc0a",
          "published_at": "2025-09-12T13:13:51.71154341Z",
          "updated_at": "2025-09-12T13:13:51.71154341Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.jkawamoto/mcp-florence2",
      "description": "An MCP server for processing images using Florence-2",
      "status": "active",
      "repository": {
        "url": "https://github.com/jkawamoto/mcp-florence2",
        "source": "github"
      },
      "version": "0.3.3",
      "packages": [
        {
          "registry_type": "mcpb",
          "identifier": "https://github.com/jkawamoto/mcp-florence2/releases/download/v0.3.3/mcp-florence2.mcpb",
          "version": "0.3.3",
          "file_sha256": "4e176c58148fde7ef8a548b5ba2ca5d6b4a2f496fb3ab3b84c7329e1c732147b",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "b6d97b5e-f822-4f10-b6fe-1c5d2210e3aa",
          "published_at": "2025-09-19T00:50:28.842922547Z",
          "updated_at": "2025-09-19T00:50:28.842922547Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.burningion/video-editing-mcp",
      "description": "An MCP server that provides [describe what your server does]",
      "status": "active",
      "repository": {
        "url": "https://github.com/burningion/video-editing-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "video-editor-mcp",
          "version": "1.0.0",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Video Jungle API Key (found at https://www.video-jungle.com/user/settings)",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "VJ_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "b8b7c038-1a6f-4152-9282-6de6ea3fe0ff",
          "published_at": "2025-09-10T13:57:16.410605636Z",
          "updated_at": "2025-09-12T12:58:23.995884425Z",
          "is_latest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "ai.smithery/Danushkumar-V-mcp-discord",
      "description": "An MCP server that integrates with Discord to provide AI-powered features.",
      "status": "active",
      "repository": {
        "url": "https://github.com/Danushkumar-V/mcp-discord",
        "source": "github"
      },
      "version": "1.2.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@Danushkumar-V/mcp-discord/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "b946c91b-b9b9-49af-b32a-f47f20484a85",
          "published_at": "2025-09-13T22:54:39.805524875Z",
          "updated_at": "2025-09-13T22:54:39.805524875Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.motherduckdb/mcp-server-motherduck",
      "description": "Fast analytics and data processing with DuckDB and MotherDuck",
      "status": "active",
      "repository": {
        "url": "https://github.com/motherduckdb/mcp-server-motherduck",
        "source": "github"
      },
      "version": "0.6.4",
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "mcp-server-motherduck",
          "version": "0.6.4",
          "transport": {
            "type": "stdio"
          },
          "package_arguments": [
            {
              "description": "Transport type for MCP server",
              "default": "stdio",
              "choices": [
                "stdio",
                "sse",
                "stream"
              ],
              "type": "named",
              "name": "--transport"
            },
            {
              "description": "Port to listen on for sse and stream transport mode",
              "format": "number",
              "default": "8000",
              "type": "named",
              "name": "--port"
            },
            {
              "description": "Path to local DuckDB database file or MotherDuck database",
              "default": "md:",
              "type": "named",
              "name": "--db-path"
            },
            {
              "description": "Access token to use for MotherDuck database connections",
              "is_secret": true,
              "type": "named",
              "name": "--motherduck-token"
            },
            {
              "description": "Flag for connecting to DuckDB or MotherDuck in read-only mode",
              "type": "named",
              "name": "--read-only"
            },
            {
              "description": "Home directory for DuckDB",
              "type": "named",
              "name": "--home-dir"
            },
            {
              "description": "Flag for connecting to MotherDuck in SaaS mode (disables filesystem and write permissions for local DuckDB)",
              "type": "named",
              "name": "--saas-mode"
            },
            {
              "description": "Enable JSON responses for HTTP stream (only supported for stream transport)",
              "type": "named",
              "name": "--json-response"
            }
          ],
          "environment_variables": [
            {
              "description": "Access token to use for MotherDuck database connections",
              "is_secret": true,
              "name": "motherduck_token"
            },
            {
              "description": "Home directory for DuckDB (used as default if --home-dir not specified)",
              "name": "HOME"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "b9848a83-605f-4cb3-a9b1-2ed5dd02dd56",
          "published_at": "2025-09-10T15:38:28.952824815Z",
          "updated_at": "2025-09-10T15:38:28.952824815Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://modelcontextprotocol.io/schemas/draft/2025-07-09/server.json",
      "name": "io.github.timheuer/sampledotnetmcpserver",
      "description": "Sample .NET MCP Server",
      "repository": {
        "url": "https://github.com/timheuer/sampledotnetmcpserver",
        "source": "github"
      },
      "version": "0.1.46-beta",
      "packages": [
        {
          "registry_type": "nuget",
          "identifier": "TimHeuer.SampleDotnetMcpServer",
          "version": "0.1.46-beta",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "b9d93fa8-9d3f-474b-9f50-54c61731bd01",
          "published_at": "2025-09-18T21:24:07.737452346Z",
          "updated_at": "2025-09-18T23:12:00.040130344Z",
          "is_latest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.spences10/mcp-omnisearch",
      "description": "MCP server for integrating Omnisearch with LLMs",
      "status": "active",
      "repository": {
        "url": "https://github.com/spences10/mcp-omnisearch",
        "source": "github"
      },
      "version": "0.0.15",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "mcp-omnisearch",
          "version": "0.0.15",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "b9e152e0-8f25-4edb-96be-81e19075dbe6",
          "published_at": "2025-09-10T19:32:04.459621013Z",
          "updated_at": "2025-09-10T19:32:04.459621013Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "ai.smithery/MisterSandFR-supabase-mcp-selfhosted",
      "description": "Manage Supabase projects end to end across database, auth, storage, realtime, and migrations. Moniâ€¦",
      "status": "active",
      "repository": {
        "url": "https://github.com/MisterSandFR/Supabase-MCP-SelfHosted",
        "source": "github"
      },
      "version": "1.14.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@MisterSandFR/supabase-mcp-selfhosted/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "babb48c9-0ae5-4436-b957-3fd988656ac2",
          "published_at": "2025-09-18T14:42:06.197814736Z",
          "updated_at": "2025-09-18T14:42:06.197814736Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.saucelabs-sample-test-frameworks/sauce-api-mcp",
      "description": "An open-source MCP server that provides LLM access to the Sauce Labs API",
      "status": "active",
      "repository": {
        "url": "https://github.com/saucelabs/sauce-api-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "sauce-api-mcp",
          "version": "1.0.1",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "value": "<sauce-user-name>",
              "name": "SAUCE_USERNAME"
            },
            {
              "value": "<sauce-access-key>",
              "name": "SAUCE_ACCESS_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "bb04de05-3784-4641-a864-e8eb37b1a901",
          "published_at": "2025-09-12T22:36:40.555152268Z",
          "updated_at": "2025-09-12T22:36:40.555152268Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.burningion/video-editing-mcp",
      "description": "MCP Server for Video Jungle - Analyze, Search, Generate, and Edit Videos",
      "status": "active",
      "repository": {
        "url": "https://github.com/burningion/video-editing-mcp",
        "source": "github"
      },
      "version": "1.0.1",
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "video-editor-mcp",
          "version": "1.0.1",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Video Jungle API Key (found at https://www.video-jungle.com/user/settings)",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "VJ_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "bbf32ba9-5e10-40ed-ba62-186b509b87c5",
          "published_at": "2025-09-12T12:58:23.949572999Z",
          "updated_at": "2025-09-12T12:58:23.949572999Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "ai.waystation/supabase",
      "description": "Connect to your Supabase database to query data and schemas.",
      "status": "active",
      "repository": {
        "url": "https://github.com/waystation-ai/mcp",
        "source": "github"
      },
      "version": "0.3.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://waystation.ai/supabase/mcp"
        },
        {
          "type": "sse",
          "url": "https://waystation.ai/supabase/mcp/sse"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "bc101c44-3702-449a-b569-74f3078eac9d",
          "published_at": "2025-09-09T14:46:10.221625416Z",
          "updated_at": "2025-09-09T14:46:10.221625416Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://modelcontextprotocol.io/schemas/draft/2025-07-09/server.json",
      "name": "io.github.timheuer/sampledotnetmcpserver",
      "description": "Sample .NET MCP Server",
      "repository": {
        "url": "https://github.com/timheuer/sampledotnetmcpserver",
        "source": "github"
      },
      "version": "0.1.27-beta",
      "packages": [
        {
          "registry_type": "nuget",
          "identifier": "TimHeuer.SampleDotnetMcpServer",
          "version": "0.1.27-beta",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "bcafddd0-d2f1-4dfd-8411-433242ee6202",
          "published_at": "2025-09-16T22:30:54.35634821Z",
          "updated_at": "2025-09-17T01:27:02.860023046Z",
          "is_latest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "ai.smithery/arjunkmrm-lta-mcp",
      "description": "Provide real-time transportation data including bus arrivals, train service alerts, carpark availaâ€¦",
      "status": "active",
      "repository": {
        "url": "https://github.com/arjunkmrm/lta-mcp",
        "source": "github"
      },
      "version": "0.1.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@arjunkmrm/lta-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "bdbc5988-0d10-4957-8c87-45678bf5d404",
          "published_at": "2025-09-11T16:52:48.059122135Z",
          "updated_at": "2025-09-11T16:52:48.059122135Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "com.mintmcp/gcal",
      "description": "A MCP server that works with Google Calendar to manage event listing, reading, and updates.",
      "status": "active",
      "repository": {
        "url": "https://github.com/mintmcp/servers",
        "source": "github"
      },
      "version": "1.0.3",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://gcal.mintmcp.com/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "bde26216-0984-4c1d-bc1c-7d9096688a79",
          "published_at": "2025-09-09T19:42:00.464295781Z",
          "updated_at": "2025-09-09T19:49:54.017385171Z",
          "is_latest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "ai.smithery/faithk7-gmail-mcp",
      "description": "Manage Gmail messages, threads, labels, drafts, and settings from your workflows. Send and organizâ€¦",
      "status": "active",
      "repository": {
        "url": "https://github.com/faithk7/gmail-mcp",
        "source": "github"
      },
      "version": "1.7.4",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@faithk7/gmail-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "bf89e9e0-a6aa-417a-9295-ac03d9493dd3",
          "published_at": "2025-09-14T13:42:20.13425818Z",
          "updated_at": "2025-09-14T13:42:20.13425818Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "ai.smithery/cc25a-openai-api-agent-project123123123",
      "description": "Look up the latest stock prices by ticker symbol across global markets. Get current price and esseâ€¦",
      "status": "active",
      "repository": {
        "url": "https://github.com/cc25a/openai-api-agent-project",
        "source": "github"
      },
      "version": "1.14.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@cc25a/openai-api-agent-project123123123/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "bfcc47f4-8a2f-4c3a-8767-9ab71d609fb1",
          "published_at": "2025-09-17T03:32:54.14301964Z",
          "updated_at": "2025-09-17T03:32:54.14301964Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "ai.smithery/pythondev-pro-egw_writings_mcp_server",
      "description": "Search Ellen G. Whiteâ€™s writings by keyword to surface relevant quotations. Retrieve exact passageâ€¦",
      "status": "active",
      "repository": {
        "url": "https://github.com/pythondev-pro/egw_writings_mcp_server",
        "source": "github"
      },
      "version": "1.12.4",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@pythondev-pro/egw_writings_mcp_server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "c0a8366b-7531-4a2d-990e-6ba630cd3712",
          "published_at": "2025-09-11T12:48:16.278544327Z",
          "updated_at": "2025-09-11T12:48:16.278544327Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "com.agilitycms/mcp-server",
      "description": "An MCP server that provides access to Agility CMS.  See https://mcp.agilitycms.com for more details.",
      "status": "active",
      "repository": {
        "url": "https://github.com/agility/agility-mcp-server",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.agilitycms.com/api/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "c0d0e773-8e78-437f-a9d5-b417e26aa3fa",
          "published_at": "2025-09-15T21:00:43.348780132Z",
          "updated_at": "2025-09-15T21:00:43.348780132Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.CursorTouch/Windows-MCP",
      "description": "An MCP Server for computer-use in Windows OS",
      "status": "active",
      "repository": {
        "url": "https://github.com/CursorTouch/Windows-MCP",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "windows_mcp",
          "version": "0.3.0",
          "runtime_hint": "uvx",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "c20de9bf-9464-472b-8dcb-32503b984d56",
          "published_at": "2025-09-17T13:24:08.521350318Z",
          "updated_at": "2025-09-17T13:24:08.521350318Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "ai.mcpcap/mcpcap",
      "description": "An MCP server for analyzing PCAP files.",
      "status": "active",
      "repository": {
        "url": "https://github.com/mcpcap/mcpcap",
        "source": "github"
      },
      "version": "0.5.8",
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "mcpcap",
          "version": "0.4.4",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "c29777b7-3957-42a7-8000-d675c0ecb2b2",
          "published_at": "2025-09-12T04:28:40.558477428Z",
          "updated_at": "2025-09-12T04:48:10.705163493Z",
          "is_latest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.huoshuiai42/huoshui-pdf-converter",
      "description": "An MCP server that provides PDF file conversion",
      "status": "active",
      "repository": {
        "url": "https://github.com/huoshuiai42/huoshui-pdf-converter",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "huoshui-pdf-converter",
          "version": "1.0.0",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "c2c0a8ed-6ad8-42fd-97d8-5da83965d302",
          "published_at": "2025-09-11T01:34:53.40476072Z",
          "updated_at": "2025-09-11T01:34:53.40476072Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.zhongweili/nanobanana-mcp-server",
      "description": "An MCP server that provides image generation and editing capabilities",
      "status": "active",
      "repository": {
        "url": "https://github.com/zhongweili/nanobanana-mcp-server",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "nanobanana-mcp-server",
          "version": "1.0.0",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your Gemini API key",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "GEMINI_API_KEY"
            },
            {
              "description": "The image output directory",
              "format": "string",
              "name": "IMAGE_OUTPUT_DIR"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "c339f751-fd5c-487a-b5c2-14971011acb4",
          "published_at": "2025-09-09T13:45:29.896269404Z",
          "updated_at": "2025-09-09T13:45:29.896269404Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "ai.smithery/arjunkmrm-ahoy",
      "description": "Send friendly, personalized greetings by name. Switch to a playful pirate voice for themed salutatâ€¦",
      "status": "active",
      "repository": {
        "url": "https://github.com/arjunkmrm/ahoy",
        "source": "github"
      },
      "version": "1.13.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@arjunkmrm/ahoy/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "c372a906-9758-46ce-8211-602c545dffc3",
          "published_at": "2025-09-14T03:11:31.224722296Z",
          "updated_at": "2025-09-14T03:11:31.224722296Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.minnas/mcp",
      "description": "Share prompts and context with your team and discover community collections.",
      "status": "active",
      "repository": {
        "url": "https://github.com/sensoris/minnas-service",
        "source": "github"
      },
      "version": "1.1.0",
      "remotes": [
        {
          "type": "sse",
          "url": "https://api.minnas.io/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "c3bda903-da17-48a7-b7ec-e2195c38e78c",
          "published_at": "2025-09-18T16:40:24.146729603Z",
          "updated_at": "2025-09-18T16:40:24.146729603Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.variflight/variflight-mcp",
      "description": "Variflight MCP Server",
      "status": "active",
      "repository": {
        "url": "https://github.com/variflight/variflight-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@variflight-ai/variflight-mcp",
          "version": "1.0.0",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your API key for the service",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "VARIFLIGHT_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "c41fdf1c-b9b0-4101-ba38-7584f2e6135a",
          "published_at": "2025-09-09T13:30:29.381063731Z",
          "updated_at": "2025-09-09T13:43:56.537303875Z",
          "is_latest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "ai.smithery/lineex-pubmed-mcp-smithery",
      "description": "Search PubMed with precision using keyword and journal filters and smart sorting. Uncover MeSH terâ€¦",
      "status": "active",
      "repository": {
        "url": "https://github.com/lineex/pubmed-mcp-smithery",
        "source": "github"
      },
      "version": "1.14.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@lineex/pubmed-mcp-smithery/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "c477c6e2-388e-43a1-892d-250cbf90120c",
          "published_at": "2025-09-16T01:10:37.458958533Z",
          "updated_at": "2025-09-16T01:10:37.458958533Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "ai.smithery/adamamer20-paper-search-mcp-openai",
      "description": "Search and download academic papers from arXiv, PubMed, bioRxiv, medRxiv, Google Scholar, Semanticâ€¦",
      "status": "active",
      "repository": {
        "url": "https://github.com/adamamer20/paper-search-mcp-openai",
        "source": "github"
      },
      "version": "1.14.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@adamamer20/paper-search-mcp-openai/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "c4eee19a-f32f-4400-b996-0386fb66c46e",
          "published_at": "2025-09-18T10:21:35.77628635Z",
          "updated_at": "2025-09-18T10:21:35.77628635Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "ai.smithery/kodey-ai-mapwise-mcp",
      "description": "Send friendly, personalized greetings on demand. Generate quick salutations with a simple prompt.â€¦",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@kodey-ai/mapwise-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "c5e7c259-731f-42f5-959c-b2f423acbffc",
          "published_at": "2025-09-18T21:55:01.522892141Z",
          "updated_at": "2025-09-18T21:55:01.522892141Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.OtherVibes/mcp-as-a-judge",
      "description": "MCP as a Judge: a behavioral MCP that strengthens AI coding assistants via explicit LLM evaluations",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.3.3",
      "packages": [
        {
          "registry_type": "pypi",
          "identifier": "mcp-as-a-judge",
          "version": "0.3.3",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "c5f3c013-d154-4bbf-ad6f-f68c247c3371",
          "published_at": "2025-09-18T20:23:31.611474327Z",
          "updated_at": "2025-09-18T21:45:57.098844508Z",
          "is_latest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "ai.smithery/minionszyw-bazi",
      "description": "Generate BaZi charts from birth details. Explore Four Pillars, solar terms, and Luck Pillars for dâ€¦",
      "status": "active",
      "repository": {
        "url": "https://github.com/minionszyw/bazi",
        "source": "github"
      },
      "version": "1.14.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@minionszyw/bazi/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "c6a1f6a6-e9c1-47cc-a280-e67cf0015f96",
          "published_at": "2025-09-18T08:13:10.601277709Z",
          "updated_at": "2025-09-18T08:13:10.601277709Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.cameroncooke/XcodeBuildMCP",
      "description": "XcodeBuildMCP provides tools for Xcode project management, simulator management, and app utilities.",
      "status": "active",
      "repository": {
        "url": "https://github.com/cameroncooke/XcodeBuildMCP",
        "source": "github"
      },
      "version": "1.12.8",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "xcodebuildmcp",
          "version": "1.12.8",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "c6f34744-715a-490d-996c-7e87596b8681",
          "published_at": "2025-09-09T19:54:23.228606748Z",
          "updated_at": "2025-09-09T19:54:23.228606748Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.jkawamoto/mcp-youtube-transcript",
      "description": "An MCP server retrieving transcripts of YouTube videos",
      "status": "active",
      "repository": {
        "url": "https://github.com/jkawamoto/mcp-youtube-transcript",
        "source": "github"
      },
      "version": "0.5.1",
      "packages": [
        {
          "registry_type": "mcpb",
          "identifier": "https://github.com/jkawamoto/mcp-youtube-transcript/releases/download/v0.5.1/mcp-youtube-transcript.mcpb",
          "version": "0.5.1",
          "file_sha256": "3356e741d4dafa24b0e931e3afd773c64d503f6624338beec62885f0dde59695",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "c6fe5633-4091-4018-8fd7-57b555f568ec",
          "published_at": "2025-09-17T08:10:03.858868083Z",
          "updated_at": "2025-09-17T08:10:03.858868083Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "com.close/close-mcp",
      "description": "Close CRM to manage your sales pipeline. Learn more at https://close.com or https://mcp.close.com",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.close.com/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "c9fdc775-1ff6-4c60-a696-58b5a07ab59e",
          "published_at": "2025-09-09T18:15:23.108331317Z",
          "updated_at": "2025-09-09T18:15:23.108331317Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "ai.smithery/arjunkmrm-ahoy2",
      "description": "Create friendly greetings by name, with an optional pirate tone. Explore the origin of 'Hello, Worâ€¦",
      "status": "active",
      "repository": {
        "url": "https://github.com/arjunkmrm/ahoy",
        "source": "github"
      },
      "version": "1.13.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@arjunkmrm/ahoy2/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "ca5f80fd-1eab-4967-b9a3-c921b0319446",
          "published_at": "2025-09-18T09:44:13.762613275Z",
          "updated_at": "2025-09-18T09:44:13.762613275Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "com.vercel/vercel-mcp",
      "description": "An MCP server for Vercel",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.0.2",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.vercel.com"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "ca97ce9f-45a6-4249-a6de-d2a1797adf0f",
          "published_at": "2025-09-17T21:29:22.383255285Z",
          "updated_at": "2025-09-17T21:29:22.383255285Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.domdomegg/time-mcp-pypi",
      "description": "Get the current UTC time in RFC 3339 format.",
      "status": "active",
      "repository": {
        "url": "https://github.com/domdomegg/time-mcp-pypi.git",
        "source": "github"
      },
      "version": "1.0.6",
      "packages": [
        {
          "registry_type": "pypi",
          "identifier": "time-mcp-pypi",
          "version": "1.0.6",
          "runtime_hint": "python",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "cc123f69-0820-4c87-b304-99e82175a541",
          "published_at": "2025-09-12T02:14:45.618237925Z",
          "updated_at": "2025-09-12T02:14:45.618237925Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.pshivapr/selenium-mcp",
      "description": "Selenium Tools for MCP",
      "status": "active",
      "repository": {
        "url": "https://github.com/pshivapr/selenium-mcp",
        "source": "github"
      },
      "version": "0.3.9",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "selenium-webdriver-mcp",
          "version": "0.3.9",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your API key for the service",
              "format": "string",
              "is_secret": true,
              "name": "YOUR_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "cc6f63b8-d592-4ca8-9440-9e3be35be2c8",
          "published_at": "2025-09-09T19:08:26.435100548Z",
          "updated_at": "2025-09-11T13:43:51.367329854Z",
          "is_latest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.ChiR24/unreal-engine-mcp",
      "description": "Production-ready MCP server for Unreal Engine with comprehensive game development tools",
      "repository": {
        "url": "https://github.com/ChiR24/Unreal_mcp.git",
        "source": "github"
      },
      "version": "0.3.0",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "unreal-engine-mcp-server",
          "version": "0.3.0",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Unreal Engine host address",
              "value": "127.0.0.1",
              "name": "UE_HOST"
            },
            {
              "description": "Remote Control HTTP port",
              "value": "30010",
              "name": "UE_RC_HTTP_PORT"
            },
            {
              "description": "Remote Control WebSocket port",
              "value": "30020",
              "name": "UE_RC_WS_PORT"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "ccdf5061-3cb1-4dfe-a36a-f6bbbf6c3abf",
          "published_at": "2025-09-17T12:43:41.483739766Z",
          "updated_at": "2025-09-17T12:43:41.483739766Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "ai.mcpanalytics/analytics",
      "description": "MCP Analytics, searchable tools and reports with interactive HTML visualization",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://api.mcpanalytics.ai/auth0"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "cd5b8366-f0bb-42fd-98bb-e8e467db2554",
          "published_at": "2025-09-17T02:38:18.067163459Z",
          "updated_at": "2025-09-17T03:00:38.275209785Z",
          "is_latest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "com.cloudflare.mcp/mcp",
      "description": "Cloudflare MCP servers",
      "status": "active",
      "repository": {
        "url": "https://github.com/cloudflare/mcp-server-cloudflare",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://docs.mcp.cloudflare.com/mcp"
        },
        {
          "type": "streamable-http",
          "url": "https://observability.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "is_secret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://bindings.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "is_secret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://builds.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "is_secret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://radar.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "is_secret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://containers.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "is_secret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://browser.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "is_secret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://logs.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "is_secret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://ai-gateway.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "is_secret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://autorag.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "is_secret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://auditlogs.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "is_secret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://dns-analytics.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "is_secret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://dex.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "is_secret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://casb.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "is_secret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://graphql.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "is_secret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://docs.mcp.cloudflare.com/sse"
        },
        {
          "type": "sse",
          "url": "https://observability.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "is_secret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://bindings.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "is_secret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://builds.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "is_secret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://radar.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "is_secret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://containers.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "is_secret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://browser.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "is_secret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://logs.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "is_secret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://ai-gateway.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "is_secret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://autorag.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "is_secret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://auditlogs.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "is_secret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://dns-analytics.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "is_secret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://dex.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "is_secret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://casb.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "is_secret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://graphql.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "is_secret": true,
              "name": "Authentication"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "ceb6f1e9-0f6b-4668-aa74-a7308963775f",
          "published_at": "2025-09-16T22:06:29.987728525Z",
          "updated_at": "2025-09-16T22:06:29.987728525Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.cyanheads/pubmed-mcp-server",
      "description": "Comprehensive PubMed MCP Server to search, retrieve, and analyze biomedical literature from NCBI.",
      "status": "active",
      "repository": {
        "url": "https://github.com/cyanheads/pubmed-mcp-server",
        "source": "github"
      },
      "version": "1.4.4",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@cyanheads/pubmed-mcp-server",
          "version": "1.4.4",
          "runtime_hint": "node",
          "transport": {
            "type": "stdio"
          },
          "package_arguments": [
            {
              "value": "dist/index.js",
              "type": "positional"
            }
          ],
          "environment_variables": [
            {
              "description": "Specifies the transport mechanism for the server.",
              "is_required": true,
              "format": "string",
              "default": "stdio",
              "name": "MCP_TRANSPORT_TYPE"
            },
            {
              "description": "Sets the minimum log level for output (e.g., 'debug', 'info', 'warn').",
              "format": "string",
              "default": "info",
              "name": "MCP_LOG_LEVEL"
            },
            {
              "description": "Your NCBI API key for higher rate limits.",
              "format": "string",
              "name": "NCBI_API_KEY"
            }
          ]
        },
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@cyanheads/pubmed-mcp-server",
          "version": "1.4.4",
          "runtime_hint": "node",
          "transport": {
            "type": "streamable-http",
            "url": "http://localhost:3017/mcp"
          },
          "package_arguments": [
            {
              "value": "dist/index.js",
              "type": "positional"
            }
          ],
          "environment_variables": [
            {
              "description": "Specifies the transport mechanism for the server.",
              "is_required": true,
              "format": "string",
              "default": "http",
              "name": "MCP_TRANSPORT_TYPE"
            },
            {
              "description": "The host for the HTTP server.",
              "format": "string",
              "default": "localhost",
              "name": "MCP_HTTP_HOST"
            },
            {
              "description": "The port for the HTTP server.",
              "format": "string",
              "default": "3017",
              "name": "MCP_HTTP_PORT"
            },
            {
              "description": "The endpoint path for MCP requests.",
              "format": "string",
              "default": "/mcp",
              "name": "MCP_HTTP_ENDPOINT_PATH"
            },
            {
              "description": "Authentication mode: 'none', 'jwt', or 'oauth'.",
              "format": "string",
              "default": "none",
              "name": "MCP_AUTH_MODE"
            },
            {
              "description": "Sets the minimum log level (e.g., 'debug', 'info', 'warn').",
              "format": "string",
              "default": "info",
              "name": "MCP_LOG_LEVEL"
            },
            {
              "description": "Your NCBI API key for higher rate limits.",
              "format": "string",
              "name": "NCBI_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "cee0c5a8-9a97-455d-91c4-14135d905e43",
          "published_at": "2025-09-15T13:34:11.145838692Z",
          "updated_at": "2025-09-15T13:34:11.145838692Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "ai.smithery/neverinfamous-memory-journal-mcp",
      "description": "A MCP server built for developers enabling Git based project management with project and personalâ€¦",
      "status": "active",
      "repository": {
        "url": "https://github.com/neverinfamous/memory-journal-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@neverinfamous/memory-journal-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "cf109d3d-025a-4fad-82ce-701c2741df50",
          "published_at": "2025-09-15T03:39:21.908030323Z",
          "updated_at": "2025-09-15T03:39:21.908030323Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.himorishige/hatago-mcp-hub",
      "description": "Unified MCP Hub for managing multiple Model Context Protocol servers",
      "status": "active",
      "repository": {
        "url": "https://github.com/himorishige/hatago-mcp-hub",
        "source": "github"
      },
      "version": "0.0.16",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@himorishige/hatago-mcp-hub",
          "version": "0.0.16",
          "runtime_hint": "npx",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "cf1ae9e0-e572-47a9-961b-21c516bb7606",
          "published_at": "2025-09-14T14:57:18.596180971Z",
          "updated_at": "2025-09-14T14:57:18.596180971Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "ai.shawndurrani/mcp-merchant",
      "description": "Search-only commerce MCP server backed by Stripe (test)",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.1.0",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "mcp-merchant",
          "version": "0.1.0",
          "runtime_hint": "npx",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Stripe secret key (test mode)",
              "is_required": true,
              "is_secret": true,
              "name": "STRIPE_SECRET_KEY"
            },
            {
              "description": "Max products to cache",
              "default": "100",
              "name": "PRODUCT_LIMIT"
            },
            {
              "description": "Catalog refresh interval in seconds",
              "default": "600",
              "name": "REFRESH_INTERVAL_SEC"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "cfe9b2c3-e001-4c33-8cb8-1a6aca43b309",
          "published_at": "2025-09-09T10:36:46.541849731Z",
          "updated_at": "2025-09-14T02:22:00.59735517Z",
          "is_latest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.pedro-rivas/android-puppeteer-mcp",
      "description": "MCP server for Android automation with UI interaction, screenshots, and device control",
      "status": "active",
      "repository": {
        "url": "https://github.com/pedro-rivas/android-puppeteer-mcp",
        "source": "github"
      },
      "version": "1.0.1",
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "android-puppeteer-mcp",
          "version": "1.0.1",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "d01babcd-d7a6-44b9-b5bd-0e0b8f6cb969",
          "published_at": "2025-09-18T02:09:11.965570935Z",
          "updated_at": "2025-09-18T02:09:11.965570935Z",
          "is_latest": true
        }
      }
    },
    {
      "name": "io.github.ruvnet/claude-flow",
      "description": "AI orchestration with hive-mind swarms, neural networks, and 87 MCP tools for enterprise dev.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "2.0.0-alpha.104",
      "packages": [
        {
          "registry_type": "npm",
          "identifier": "claude-flow",
          "version": "2.0.0-alpha.104",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "d04e69ef-3bd3-4216-8145-928c3c775ee8",
          "published_at": "2025-09-10T16:20:48.985187906Z",
          "updated_at": "2025-09-10T16:46:39.972611608Z",
          "is_latest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "com.timeslope/timeslope-mcp",
      "description": "Equip AI with tools for researching economic data from Federal Reserve Economic Data (FRED).",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.1.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.timeslope.com/mcp",
          "headers": [
            {
              "description": "Authorization Bearer header containing API key or OAuth token",
              "is_required": true,
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "d0551f52-173b-4443-8125-a58153f8f82e",
          "published_at": "2025-09-11T18:16:25.262687063Z",
          "updated_at": "2025-09-11T18:16:25.262687063Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.ycjcl868/mcp-server-fear-greed",
      "description": "An MCP server for mcp-server-fear-greed",
      "status": "active",
      "repository": {
        "url": "https://github.com/ycjcl868/mcp-server-fear-greed",
        "source": "github"
      },
      "version": "1.0.1",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "mcp-server-fear-greed",
          "version": "1.0.1",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "d1378e5e-f1cf-4eeb-bbb1-9e9527654acf",
          "published_at": "2025-09-09T03:01:43.052528327Z",
          "updated_at": "2025-09-09T04:08:35.763104718Z",
          "is_latest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.overstarry/qweather-mcp",
      "description": "a qweather mcp server",
      "status": "active",
      "repository": {
        "url": "https://github.com/overstarry/qweather-mcp",
        "source": "github"
      },
      "version": "1.0.12",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "qweather-mcp",
          "version": "1.0.12",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your qweather api host",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "QWEATHER_API_BASE"
            },
            {
              "description": "Your qweather api key",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "QWEATHER_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "d19619da-84d8-4b62-a2f4-766eca866ea2",
          "published_at": "2025-09-10T14:28:10.30769765Z",
          "updated_at": "2025-09-10T14:28:10.30769765Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://registry.modelcontextprotocol.io/schemas/server.json",
      "name": "io.github.pubnub/mcp-server",
      "description": "PubNub MCP for Real-time messaging. API Access and SDK documentation.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.104",
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "d1e7a64f-300f-4506-bf0f-30e8684b857b",
          "published_at": "2025-09-19T02:42:31.411220651Z",
          "updated_at": "2025-09-19T02:42:31.411220651Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "com.supabase/mcp",
      "description": "MCP server for interacting with the Supabase platform",
      "status": "active",
      "repository": {
        "url": "https://github.com/supabase-community/supabase-mcp",
        "source": "github",
        "subfolder": "packages/mcp-server-supabase"
      },
      "version": "0.5.5",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@supabase/mcp-server-supabase",
          "version": "0.5.5",
          "runtime_hint": "npx",
          "transport": {
            "type": "stdio"
          },
          "runtime_arguments": [
            {
              "description": "Supabase project reference ID",
              "format": "string",
              "type": "named",
              "name": "--project-ref"
            },
            {
              "description": "Enable read-only mode",
              "format": "boolean",
              "type": "named",
              "name": "--read-only"
            },
            {
              "description": "Comma-separated list of features to enable",
              "format": "string",
              "type": "named",
              "name": "--features"
            },
            {
              "description": "Custom API URL",
              "format": "string",
              "type": "named",
              "name": "--api-url"
            }
          ],
          "environment_variables": [
            {
              "description": "Personal access token for Supabase API",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "SUPABASE_ACCESS_TOKEN"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "d1eeec4d-9cad-4acb-8d79-4f44332fe3f9",
          "published_at": "2025-09-18T21:32:17.512331682Z",
          "updated_at": "2025-09-18T21:32:17.512331682Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "ai.waystation/wrike",
      "description": "Manage projects, tasks, and workflows with Wrike project management.",
      "status": "active",
      "repository": {
        "url": "https://github.com/waystation-ai/mcp",
        "source": "github"
      },
      "version": "0.3.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://waystation.ai/wrike/mcp"
        },
        {
          "type": "sse",
          "url": "https://waystation.ai/wrike/mcp/sse"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "d2fa299a-65ac-4c2d-8d48-b30826140fb3",
          "published_at": "2025-09-09T14:37:01.216778711Z",
          "updated_at": "2025-09-09T14:37:01.216778711Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "ai.smithery/yuna0x0-hackmd-mcp",
      "description": "Interact with your HackMD notes and teams seamlessly. Manage your notes, view reading history, andâ€¦",
      "status": "active",
      "repository": {
        "url": "https://github.com/yuna0x0/hackmd-mcp",
        "source": "github"
      },
      "version": "1.4.2",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@yuna0x0/hackmd-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "d300fcf6-437a-444d-ac42-f7e55f9d5380",
          "published_at": "2025-09-13T08:37:37.613854961Z",
          "updated_at": "2025-09-15T03:33:42.700252156Z",
          "is_latest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.rbonestell/ap-mcp-server",
      "description": "Model Context Protocol (MCP) server for the Associated Press Media API",
      "status": "active",
      "repository": {
        "url": "https://github.com/rbonestell/ap-mcp-server",
        "source": "github"
      },
      "version": "1.2.6",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "ap-mcp-server",
          "version": "1.2.6",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your API key for the service",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "YOUR_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "d50ffd11-3650-48ce-ba9b-6aaaea10ee1c",
          "published_at": "2025-09-09T14:57:28.79470971Z",
          "updated_at": "2025-09-09T14:57:28.79470971Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.ignission/mcp",
      "description": "TikTok video data analytics and content strategy tools",
      "status": "active",
      "repository": {
        "url": "https://github.com/ignission-io/mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.ignission.io/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "d544bbcc-44e2-4774-b097-e886b50dd022",
          "published_at": "2025-09-10T16:49:33.978580087Z",
          "updated_at": "2025-09-10T16:49:33.978580087Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.taurgis/sfcc-dev-mcp",
      "description": "MCP server for Salesforce B2C Commerce Cloud development assistance",
      "status": "active",
      "repository": {
        "url": "https://github.com/taurgis/sfcc-dev-mcp",
        "source": "github"
      },
      "version": "1.0.14",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "sfcc-dev-mcp",
          "version": "1.0.14",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "d76fb4c9-af0a-4588-9de3-2dd0856ba874",
          "published_at": "2025-09-17T07:22:50.583895618Z",
          "updated_at": "2025-09-17T07:22:50.583895618Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "ai.smithery/JMoak-chrono-mcp",
      "description": "Convert and compare dates and times across any timezone with flexible, locale-aware formatting. Adâ€¦",
      "status": "active",
      "repository": {
        "url": "https://github.com/JMoak/chrono-mcp",
        "source": "github"
      },
      "version": "0.2.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@JMoak/chrono-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "d7d98bbe-95e6-491b-af67-3646314b554a",
          "published_at": "2025-09-17T02:23:35.312972065Z",
          "updated_at": "2025-09-17T02:23:35.312972065Z",
          "is_latest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.b1ff/atlassian-dc-mcp-bitbucket",
      "description": "MCP server for Atlassian Bitbucket Data Center - interact with repositories and code",
      "status": "active",
      "repository": {
        "url": "https://github.com/b1ff/atlassian-dc-mcp",
        "source": "github"
      },
      "version": "0.9.7",
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@atlassian-dc-mcp/bitbucket",
          "version": "0.9.7",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Bitbucket host domain (e.g. your-instance.atlassian.net)",
              "format": "string",
              "name": "BITBUCKET_HOST"
            },
            {
              "description": "Bitbucket API base path (alternative to BITBUCKET_HOST)",
              "format": "string",
              "name": "BITBUCKET_API_BASE_PATH"
            },
            {
              "description": "Bitbucket Personal Access Token or API token",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "BITBUCKET_API_TOKEN"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "id": "d8bd9e48-abc3-47b9-b08b-3840ecb838c5",
          "published_at": "2025-09-13T13:17:33.579913494Z",
          "updated_at": "2025-09-13T13:18:51.365304119Z",
          "is_latest": false
        }
      }
    }
  ]
}