{
  "servers": [
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.cr7258/elasticsearch-mcp-server",
      "description": "MCP server for interacting with Elasticsearch",
      "status": "active",
      "repository": {
        "url": "https://github.com/cr7258/elasticsearch-mcp-server",
        "source": "github"
      },
      "version": "2.0.12",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "elasticsearch-mcp-server",
          "version": "2.0.12",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Comma-separated list of Elasticsearch hosts (e.g., https://localhost:9200)",
              "format": "string",
              "default": "https://localhost:9200",
              "name": "ELASTICSEARCH_HOSTS"
            },
            {
              "description": "API key for Elasticsearch or Elastic Cloud authentication (recommended)",
              "format": "string",
              "isSecret": true,
              "name": "ELASTICSEARCH_API_KEY"
            },
            {
              "description": "Username for basic authentication (alternative to API key)",
              "format": "string",
              "name": "ELASTICSEARCH_USERNAME"
            },
            {
              "description": "Password for basic authentication (used with ELASTICSEARCH_USERNAME)",
              "format": "string",
              "isSecret": true,
              "name": "ELASTICSEARCH_PASSWORD"
            },
            {
              "description": "Whether to verify SSL certificates (true/false)",
              "format": "boolean",
              "default": "false",
              "name": "ELASTICSEARCH_VERIFY_CERTS"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "736191c3-915d-4643-b4c0-6dda9bef9bff",
          "versionId": "6e44548a-ef55-4303-86aa-eaf8807c7dab",
          "publishedAt": "2025-09-11T02:48:54.493070641Z",
          "updatedAt": "2025-09-11T03:19:12.600102971Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.mcpcap/mcpcap",
      "description": "An MCP server for analyzing PCAP files.",
      "status": "active",
      "repository": {
        "url": "https://github.com/mcpcap/mcpcap",
        "source": "github"
      },
      "version": "0.5.4",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "mcpcap",
          "version": "0.4.4",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "1a77c0fe-c133-468d-aad0-52c60574d088",
          "versionId": "6f1c2c5d-192b-4964-919f-d2850f383aa2",
          "publishedAt": "2025-09-12T01:53:51.972295258Z",
          "updatedAt": "2025-09-12T01:55:40.789431661Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/ctaylor86-mcp-video-download-server",
      "description": "Connect your video workflows to cloud storage. Organize and access video assets across projects wi…",
      "status": "active",
      "repository": {
        "url": "https://github.com/ctaylor86/mcp-video-download-server",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@ctaylor86/mcp-video-download-server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "3322d4c3-80c5-4fce-b75d-828287df297f",
          "versionId": "6f36c75d-1776-443a-b9d9-ed6f45dd1f88",
          "publishedAt": "2025-09-15T11:45:18.173946266Z",
          "updatedAt": "2025-09-15T11:45:18.173946266Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.JustasMonkev/mcp-accessibility-scanner",
      "description": "MCP server for automated web accessibility scanning with Playwright and Axe-core.",
      "status": "active",
      "repository": {
        "url": "https://github.com/JustasMonkev/mcp-accessibility-scanner",
        "source": "github"
      },
      "version": "1.1.1",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mcp-accessibility-scanner",
          "version": "1.1.1",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "ea401f8e-2bc1-4042-a8d0-3339441a3ace",
          "versionId": "6f372f99-089b-4cc7-a9b6-b3fcbd39074b",
          "publishedAt": "2025-09-10T15:19:19.721714851Z",
          "updatedAt": "2025-09-10T15:19:19.721714851Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.SonarSource/sonarqube-mcp-server",
      "description": "An MCP server that enables integration with SonarQube Server or Cloud for code quality and security.",
      "status": "active",
      "repository": {
        "url": "https://github.com/SonarSource/sonarqube-mcp-server",
        "source": "github"
      },
      "version": "0.0.8",
      "packages": [
        {
          "registryType": "oci",
          "registryBaseUrl": "https://docker.io",
          "identifier": "mcp/sonarqube",
          "version": "sha256:d9dc2f44f4f624bdc5fb5817abc74f6244dd40b2d03036380cd6253eff374ae5",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your SonarQube Server USER token",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "SONARQUBE_TOKEN"
            },
            {
              "description": "Your SonarQube Cloud organization key (if using SonarQube Cloud)",
              "format": "string",
              "isSecret": true,
              "name": "SONARQUBE_ORG"
            },
            {
              "description": "Your SonarQube Server URL (if using SonarQube Server)",
              "format": "string",
              "isSecret": true,
              "name": "SONARQUBE_URL"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "fa22170d-248a-4ebf-b6b4-2de326690a18",
          "versionId": "6f8eee32-6adb-46a4-815d-044ec557bd6b",
          "publishedAt": "2025-09-19T20:14:16.852443193Z",
          "updatedAt": "2025-09-19T20:14:16.852443193Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/DynamicEndpoints-powershell-exec-mcp-server",
      "description": "Execute PowerShell commands securely with controlled timeouts and input validation. Retrieve syste…",
      "status": "active",
      "repository": {
        "url": "https://github.com/DynamicEndpoints/PowerShell-Exec-MCP-Server",
        "source": "github"
      },
      "version": "1.13.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@DynamicEndpoints/powershell-exec-mcp-server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "694dc50d-499b-49bb-8b78-b44f65ab48c3",
          "versionId": "703df496-b98b-4069-94b3-077fe6c1afae",
          "publishedAt": "2025-09-11T13:54:30.703394885Z",
          "updatedAt": "2025-09-11T13:54:30.703394885Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "dev.promplate/hmr",
      "description": "Hot Module Reload (HMR) for Python with reactive programming and MCP tools",
      "repository": {
        "url": "https://github.com/promplate/pyth-on-line",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://pyth-on-line.promplate.dev/hmr/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "c3678b28-5338-4c5a-9d44-c005c700e9a6",
          "versionId": "704ccc9a-25b1-44bf-a882-59130f6b02ab",
          "publishedAt": "2025-09-17T21:07:34.315525152Z",
          "updatedAt": "2025-09-17T21:09:37.855503018Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.timheuer/sampledotnetmcpserver",
      "description": "Sample .NET MCP Server",
      "repository": {
        "url": "https://github.com/timheuer/sampledotnetmcpserver",
        "source": "github"
      },
      "version": "0.1.41-beta",
      "packages": [
        {
          "registryType": "nuget",
          "identifier": "TimHeuer.SampleDotnetMcpServer",
          "version": "0.1.41-beta",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "98619929-a570-46c1-8e35-4cde888731ee",
          "versionId": "70624f7a-0258-4257-a032-f8524353c5e4",
          "publishedAt": "2025-09-18T17:33:36.288044849Z",
          "updatedAt": "2025-09-18T21:01:12.611343565Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.CodeLogicIncEngineering/codelogic-mcp-server",
      "description": "An MCP Server to utilize Codelogic's rich software dependency data in your AI programming assistant.",
      "status": "active",
      "repository": {
        "url": "https://github.com/CodeLogicIncEngineering/codelogic-mcp-server",
        "source": "github"
      },
      "version": "1.0.11",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "codelogic-mcp-server",
          "version": "1.0.11",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "url to the CodeLogic server e.g. https://myco.app.codelogic.com",
              "format": "string",
              "name": "CODELOGIC_SERVER_HOST"
            },
            {
              "description": "CodeLogic server username",
              "format": "string",
              "name": "CODELOGIC_USERNAME"
            },
            {
              "description": "CodeLogic server password",
              "format": "string",
              "name": "CODELOGIC_PASSWORD"
            },
            {
              "description": "the workspace name that your code is scanned into",
              "format": "string",
              "name": "CODELOGIC_WORKSPACE_NAME"
            },
            {
              "description": "When enabled, additional debug files such as timing_log.txt and impact_data*.json will be generated. Defaults to false",
              "format": "string",
              "name": "CODELOGIC_DEBUG_MODE"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "82f94c6f-1cd4-4226-b482-36403636e8a9",
          "versionId": "70a2407b-15d1-419e-91b2-123073c1b770",
          "publishedAt": "2025-09-24T14:54:45.047400947Z",
          "updatedAt": "2025-09-24T14:54:45.047400947Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.falkordb/QueryWeaver",
      "description": "An MCP server for Text2SQL: transforms natural language into SQL using graph schema understanding.",
      "status": "active",
      "repository": {
        "url": "https://github.com/FalkorDB/QueryWeaver",
        "source": "github"
      },
      "version": "0.0.11",
      "packages": [
        {
          "registryType": "oci",
          "registryBaseUrl": "https://docker.io",
          "identifier": "falkordb/queryweaver",
          "version": "0.0.11",
          "transport": {
            "type": "streamable-http",
            "url": "https://localhost:5000/mcp"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "fbb3daa9-af8e-4bde-834f-6d8a0b0aad96",
          "versionId": "7128a4ba-390a-458f-b95a-46c72c7a0b81",
          "publishedAt": "2025-09-11T06:54:10.018880049Z",
          "updatedAt": "2025-09-11T06:54:10.018880049Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.dockersamples/mcp-docker-release-information",
      "description": "MCP server providing Docker Desktop release notes and security information.",
      "status": "active",
      "repository": {
        "url": "https://github.com/dockersamples/mcp-docker-release-information",
        "source": "github"
      },
      "version": "0.3.0",
      "packages": [
        {
          "registryType": "oci",
          "identifier": "dockersamples/mcp-docker-release-information",
          "version": "0.3.0",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "fe7a5c36-265f-4e7b-a3ad-ef2c4c95f241",
          "versionId": "71de5a2a-6cfb-4250-a196-f93080ecc860",
          "publishedAt": "2025-09-10T18:54:52.764339069Z",
          "updatedAt": "2025-09-10T18:54:52.764339069Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.guanqun-yang/mcp-server-r-counter",
      "description": "A MCP Server Counting Number of r's for a Given Query",
      "status": "active",
      "repository": {
        "url": "https://github.com/guanqun-yang/mcp-server-r-counter",
        "source": "github"
      },
      "version": "0.0.3",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "mcp-server-r-counter",
          "version": "0.0.3",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "d25dab7d-1a05-4679-b314-a2911998f316",
          "versionId": "72ce38fd-8465-4198-b8fd-5dc4fac8dce3",
          "publishedAt": "2025-09-26T03:25:25.186688278Z",
          "updatedAt": "2025-09-26T03:25:25.186688278Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.mcpanalytics/analytics",
      "description": "MCP Analytics, searchable tools and reports with interactive HTML visualization",
      "repository": {
        "url": "https://github.com/embeddedlayers/mcp-analytics",
        "source": "github"
      },
      "version": "1.0.2",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://api.mcpanalytics.ai/auth0"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "219a2fa3-ba26-4574-9c45-44886d4ff9e8",
          "versionId": "73689205-75f4-4c3d-94ef-0bcee089fbaa",
          "publishedAt": "2025-09-17T03:00:38.248011994Z",
          "updatedAt": "2025-09-17T03:17:49.632449123Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.martymarkenson/postgres-connector",
      "description": "MCP server for querying PostgreSQL databases",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "postgres-connector",
          "version": "1.0.0",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "5fe9408b-2370-41fb-90f9-3fce961c0968",
          "versionId": "74031b6a-9c3c-4fcb-911d-ec0337b98c70",
          "publishedAt": "2025-09-22T12:15:43.369455148Z",
          "updatedAt": "2025-09-23T12:45:22.907808337Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.imbenrabi/financial-modeling-prep-mcp-server",
      "description": "MCP server for Financial Modeling Prep API with 250+ financial data tools",
      "status": "active",
      "repository": {
        "url": "https://github.com/imbenrabi/Financial-Modeling-Prep-MCP-Server",
        "source": "github",
        "id": "988409529"
      },
      "version": "2.5.1",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "financial-modeling-prep-mcp-server",
          "version": "2.5.1",
          "runtimeHint": "npx",
          "transport": {
            "type": "streamable-http",
            "url": "https://financial-modeling-prep-mcp-server-production.up.railway.app/mcp"
          },
          "packageArguments": [
            {
              "description": "Financial Modeling Prep API access token",
              "format": "string",
              "type": "named",
              "name": "--fmp-token"
            },
            {
              "description": "Port number for HTTP server mode",
              "format": "number",
              "type": "named",
              "name": "--port"
            },
            {
              "description": "Enable dynamic tool discovery mode",
              "format": "boolean",
              "type": "named",
              "name": "--dynamic-tool-discovery"
            },
            {
              "description": "Comma-separated list of tool sets to load",
              "format": "string",
              "type": "named",
              "name": "--fmp-tool-sets"
            }
          ],
          "environmentVariables": [
            {
              "description": "Financial Modeling Prep API access token",
              "format": "string",
              "isSecret": true,
              "name": "FMP_ACCESS_TOKEN"
            },
            {
              "description": "Port number for HTTP server mode",
              "format": "number",
              "name": "PORT"
            },
            {
              "description": "Enable dynamic tool discovery mode",
              "format": "boolean",
              "name": "DYNAMIC_TOOL_DISCOVERY"
            },
            {
              "description": "Comma-separated list of tool sets to load",
              "format": "string",
              "name": "FMP_TOOL_SETS"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "daa52088-0263-4021-8208-270d479bdd0a",
          "versionId": "74573935-5dac-4879-a567-9ecaa3256200",
          "publishedAt": "2025-09-11T12:44:51.14737572Z",
          "updatedAt": "2025-09-11T12:44:51.14737572Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.huoshuiai42/huoshui-pdf-translator",
      "description": "An MCP server that provides PDF translation service",
      "status": "active",
      "repository": {
        "url": "https://github.com/huoshuiai42/huoshui-pdf-translator",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "huoshui-pdf-translator",
          "version": "1.0.0",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "de9cd8bd-e47a-40f7-bb79-8b8fa227a7f4",
          "versionId": "7499cd69-6bca-46dd-9b27-57bc69cceab6",
          "publishedAt": "2025-09-11T01:31:51.354566076Z",
          "updatedAt": "2025-09-11T01:31:51.354566076Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.Lyellr88/marm-mcp-server",
      "description": "Universal MCP Server with advanced AI memory capabilities and semantic search.",
      "repository": {
        "url": "https://github.com/Lyellr88/MARM-Systems",
        "source": "github"
      },
      "version": "2.2.4",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "marm-mcp-server",
          "version": "2.2.4",
          "transport": {
            "type": "stdio"
          }
        },
        {
          "registryType": "oci",
          "identifier": "lyellr88/marm-mcp-server",
          "version": "2.2.4",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "73eda8a1-8138-43c0-ac0e-5f953d1d304e",
          "versionId": "74d60051-d76b-4b9b-9bff-33ef5a462ee6",
          "publishedAt": "2025-09-19T08:07:18.942315795Z",
          "updatedAt": "2025-09-23T06:50:35.607631842Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "app.zenable/zenable",
      "description": "Zenable cleans up sloppy AI code and prevents vulnerabilities with deterministic guardrails",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "2.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.zenable.app/"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "06d38121-a76a-47ba-9827-dc181b7cc167",
          "versionId": "7502e7f9-cbb8-45c2-bc58-3161fb8b2f6b",
          "publishedAt": "2025-09-28T22:41:39.99661585Z",
          "updatedAt": "2025-09-28T22:41:39.99661585Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.timheuer/sampledotnetmcpserver",
      "description": "Sample .NET MCP Server",
      "status": "active",
      "repository": {
        "url": "https://github.com/timheuer/sampledotnetmcpserver",
        "source": "github"
      },
      "version": "0.1.56-beta-g9538a23d37",
      "packages": [
        {
          "registryType": "nuget",
          "registryBaseUrl": "https://api.nuget.org",
          "identifier": "TimHeuer.SampleDotnetMcpServer",
          "version": "0.1.56-beta-g9538a23d37",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "98619929-a570-46c1-8e35-4cde888731ee",
          "versionId": "75f4d79f-8e5a-4a80-a9e5-4f4dddac7693",
          "publishedAt": "2025-09-22T16:13:17.246045769Z",
          "updatedAt": "2025-09-22T17:04:35.121526999Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.apple-rag/mcp-server",
      "description": "Apple Developer Documentation with Semantic Search, RAG, and AI reranking for MCP clients",
      "status": "active",
      "repository": {
        "url": "https://github.com/BingoWon/apple-rag-mcp",
        "source": "github"
      },
      "version": "2.5.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.apple-rag.com",
          "headers": [
            {
              "description": "MCP Token for authentication (optional - free tier available without token)",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "803e4dc4-c3d4-43d2-b6a3-65885c8eefb4",
          "versionId": "76d4ea95-489a-41e7-8bc9-f8d3263fc913",
          "publishedAt": "2025-09-17T15:07:56.618881283Z",
          "updatedAt": "2025-09-17T15:08:38.010176491Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.tedfytw1209/mcp-server-EVEfleet",
      "description": "An MCP server that provides tools for EVE Online players to manage their fleets",
      "status": "active",
      "repository": {
        "url": "https://github.com/tedfytw1209/mcp-server-EVEfleet",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "mcp-server-evefleet",
          "version": "0.1.1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your API key for the service",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "YOUR_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "540d0e52-a6cb-4d28-9377-887eca830e5d",
          "versionId": "76d8def5-54d8-478e-93ea-cfb8a7bd827a",
          "publishedAt": "2025-09-20T02:52:57.271854833Z",
          "updatedAt": "2025-09-20T03:21:10.606324721Z",
          "isLatest": false
        }
      }
    },
    {
      "name": "io.github.Skills03/scrimba-teaching",
      "description": "Interactive programming teacher using Scrimba methodology for 10x retention",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.1",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "scrimba-teaching-mcp",
          "version": "1.0.1",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "db943fb5-a144-442c-8cc3-d76be306b58b",
          "versionId": "77461ae5-c20a-404a-a539-f453bd20b6dd",
          "publishedAt": "2025-09-21T13:59:10.857936482Z",
          "updatedAt": "2025-09-21T14:14:53.546905451Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.mermaidchart/mermaid-mcp",
      "description": "MCP server for Mermaid diagram validation and rendering",
      "status": "active",
      "repository": {
        "url": "https://github.com/Mermaid-Chart/mermaid-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.mermaidchart.com/mcp"
        },
        {
          "type": "sse",
          "url": "https://mcp.mermaidchart.com/sse"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "90e878b4-5ec0-4346-b6a8-3dcb72118aa4",
          "versionId": "77594a1a-b942-4fbc-9a03-5ef40b7bd734",
          "publishedAt": "2025-09-18T12:13:25.426328055Z",
          "updatedAt": "2025-09-18T12:13:25.426328055Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.francisco-perez-sorrosal/cv",
      "description": "An MCP server that provides access to Francisco Perez-Sorrosal's CV",
      "status": "active",
      "repository": {
        "url": "https://github.com/francisco-perez-sorrosal/cv",
        "source": "github"
      },
      "version": "0.0.1",
      "packages": [
        {
          "registryType": "mcpb",
          "identifier": "https://github.com/francisco-perez-sorrosal/cv/releases/download/v0.0.1/fps-cv-mcp-0.0.1.mcpb",
          "version": "0.0.1",
          "fileSha256": "d01ccdbbea56702215a8015ad19c12f5681b61c1fdaeaa258c88f657a6f02bd6",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "f288d19b-848a-4e88-8c31-0911f61161f5",
          "versionId": "77a61e41-6dfd-4649-be2e-e6d69f18ba9c",
          "publishedAt": "2025-09-19T03:40:16.952878792Z",
          "updatedAt": "2025-09-19T03:40:16.952878792Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/docfork-mcp",
      "description": "@latest documentation and code examples to 9000+ libraries for LLMs and AI code editors in a singl…",
      "status": "active",
      "repository": {
        "url": "https://github.com/docfork/docfork-mcp",
        "source": "github"
      },
      "version": "0.7.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@docfork/mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "3bbe0c48-41f7-4742-83d1-045499bef360",
          "versionId": "77b25763-8cce-444e-9914-939596568922",
          "publishedAt": "2025-09-12T18:25:16.049646725Z",
          "updatedAt": "2025-09-12T18:25:16.049646725Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/HARJAP-SINGH-3105-splitwise_mcp",
      "description": "Manage Splitwise balances, expenses, and groups from your workspace. Fetch friends and recent acti…",
      "status": "active",
      "repository": {
        "url": "https://github.com/HARJAP-SINGH-3105/Splitwise_MCP",
        "source": "github"
      },
      "version": "1.14.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@HARJAP-SINGH-3105/splitwise_mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "60ca3511-07eb-454b-ae71-965e370b1b9c",
          "versionId": "77bb7283-097b-4e56-8eed-46c859a4e1df",
          "publishedAt": "2025-09-18T18:42:59.47098798Z",
          "updatedAt": "2025-09-18T18:42:59.47098798Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.mintmcp/gmail",
      "description": "A MintMCP server for Gmail that lets you search, read, and draft emails and replies.",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://gmail.mintmcp.com/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "108ee330-287d-40a7-98c6-6806dbb9eeac",
          "versionId": "77c15324-cc34-417a-800f-673c2c44909b",
          "publishedAt": "2025-09-09T19:20:31.788880118Z",
          "updatedAt": "2025-09-09T19:25:39.937486339Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.yuna0x0/hackmd-mcp",
      "description": "A Model Context Protocol server for integrating HackMD's note-taking platform with AI assistants.",
      "status": "active",
      "repository": {
        "url": "https://github.com/yuna0x0/hackmd-mcp",
        "source": "github"
      },
      "version": "1.5.2",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "hackmd-mcp",
          "version": "1.5.2",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your HackMD API token for API authentication",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "HACKMD_API_TOKEN"
            },
            {
              "description": "Optional HackMD API URL, defaults to https://api.hackmd.io/v1",
              "format": "string",
              "default": "https://api.hackmd.io/v1",
              "name": "HACKMD_API_URL"
            }
          ]
        },
        {
          "registryType": "oci",
          "registryBaseUrl": "https://ghcr.io",
          "identifier": "yuna0x0/hackmd-mcp",
          "version": "1.5.2",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your HackMD API token for API authentication",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "HACKMD_API_TOKEN"
            },
            {
              "description": "Optional HackMD API URL, defaults to https://api.hackmd.io/v1",
              "format": "string",
              "default": "https://api.hackmd.io/v1",
              "name": "HACKMD_API_URL"
            }
          ]
        },
        {
          "registryType": "mcpb",
          "identifier": "https://github.com/yuna0x0/hackmd-mcp/releases/download/v1.5.2/hackmd-mcp-1.5.2.mcpb",
          "version": "1.5.2",
          "fileSha256": "85c9f9930596291f3ba9e0e5d3241cbeac4d5bcc6832845bd7c05348cc5511d5",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your HackMD API token for API authentication",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "HACKMD_API_TOKEN"
            },
            {
              "description": "Optional HackMD API URL, defaults to https://api.hackmd.io/v1",
              "format": "string",
              "default": "https://api.hackmd.io/v1",
              "name": "HACKMD_API_URL"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "e679729a-74ca-4b31-a7f5-80cddd5fa24d",
          "versionId": "7805cd90-e4d5-4446-9a63-05e56d06ae87",
          "publishedAt": "2025-09-22T00:26:57.630168405Z",
          "updatedAt": "2025-09-22T00:26:57.630168405Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://schemas.mcp.run/server.json",
      "name": "io.github.ptyagiegnyte/egnyte-remote",
      "description": "Secure integration between AI tools and Egnyte content with search, analysis, and workflow tools.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "cd8693ba-aa21-47fa-9fb7-d47f548c111d",
          "versionId": "78135aba-1c8b-4885-9d8f-bddaba502f3c",
          "publishedAt": "2025-09-23T15:04:02.675929524Z",
          "updatedAt": "2025-09-23T15:07:22.510126268Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.ryaker/appstore-connect-mcp",
      "description": "MCP server for Apple Store Connect API integration with OAuth authentication support",
      "status": "active",
      "repository": {
        "url": "https://github.com/ryaker/appstore-connect-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@ryaker/appstore-connect-mcp",
          "version": "1.0.0",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Apple App Store Connect API Key ID",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "APPLE_KEY_ID"
            },
            {
              "description": "Apple App Store Connect Issuer ID",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "APPLE_ISSUER_ID"
            },
            {
              "description": "Apple App Store Connect Private Key (base64 encoded or raw)",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "APPLE_PRIVATE_KEY"
            },
            {
              "description": "Optional: Specific Bundle ID to filter apps",
              "format": "string",
              "name": "APPLE_BUNDLE_ID"
            },
            {
              "description": "Optional: Specific App Store ID",
              "format": "string",
              "name": "APPLE_APP_STORE_ID"
            },
            {
              "description": "Enable OAuth authentication (true/false)",
              "format": "string",
              "name": "OAUTH_ENABLED"
            },
            {
              "description": "OAuth issuer URL (e.g., https://your-tenant.auth0.com)",
              "format": "string",
              "name": "OAUTH_ISSUER"
            },
            {
              "description": "OAuth audience URL",
              "format": "string",
              "name": "OAUTH_AUDIENCE"
            },
            {
              "description": "OAuth JWKS URI for token validation",
              "format": "string",
              "name": "OAUTH_JWKS_URI"
            },
            {
              "description": "Server URL for OAuth deployment",
              "format": "string",
              "name": "SERVER_URL"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "299d46c6-fbdb-47ec-936a-0ec9eec30178",
          "versionId": "783d46a6-9456-412b-bce2-2d9c5a26dada",
          "publishedAt": "2025-09-10T14:59:09.11988275Z",
          "updatedAt": "2025-09-10T14:59:09.11988275Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.formulahendry/mcp-server-mcp-registry",
      "description": "MCP Server for MCP Registry to discover and search for available MCP servers in the registry",
      "status": "active",
      "repository": {
        "url": "https://github.com/formulahendry/mcp-server-mcp-registry",
        "source": "github"
      },
      "version": "0.1.0",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mcp-server-mcp-registry",
          "version": "0.1.0",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "4cd7a1b2-8d29-4cb1-924c-f421b1638441",
          "versionId": "7881f8bf-ec94-417d-9f01-45771faaba17",
          "publishedAt": "2025-09-14T07:16:07.571743009Z",
          "updatedAt": "2025-09-14T07:16:07.571743009Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.kevincogan/demo-mcp-server",
      "description": "Demo server entry for local testing",
      "status": "active",
      "repository": {
        "url": "https://github.com/kevincogan/demo-mcp-server",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://kevincogan.github.io/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "78162e28-0738-46be-b2ef-b1c6469a1616",
          "versionId": "7991f104-ba2d-4e1a-8e47-ec97adbffe62",
          "publishedAt": "2025-09-22T11:58:38.187266164Z",
          "updatedAt": "2025-09-22T11:58:38.187266164Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/sachicali-discordmcp-suite",
      "description": "Control your Discord community: send/read messages, manage channels and forums, and handle webhook…",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.2.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@sachicali/discordmcp-suite/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "cb845f6c-2635-484a-baaa-59da84b7963d",
          "versionId": "79ba496b-2c62-45ca-8fd7-2f00f259c6d2",
          "publishedAt": "2025-09-10T18:19:06.20151699Z",
          "updatedAt": "2025-09-10T18:19:06.20151699Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.BenAHammond/code-auditor-mcp",
      "description": "Code Quality Auditor: Analyze code for SOLID principles, DRY violations, and more",
      "status": "active",
      "repository": {
        "url": "https://github.com/BenAHammond/code-auditor-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "code-auditor-mcp",
          "version": "1.17.1",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "da4e7c0a-854f-46b7-86ab-35564aa3069f",
          "versionId": "79ecb8eb-6d8d-4e4e-84f7-9dc334e6ce8f",
          "publishedAt": "2025-09-26T03:37:09.745161864Z",
          "updatedAt": "2025-09-27T17:09:06.208862272Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/yuna0x0-hackmd-mcp",
      "description": "Interact with your HackMD notes and teams seamlessly. Manage your notes, view reading history, and…",
      "status": "active",
      "repository": {
        "url": "https://github.com/yuna0x0/hackmd-mcp",
        "source": "github"
      },
      "version": "1.5.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@yuna0x0/hackmd-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "a85afd07-0178-49e6-b962-178f24839d99",
          "versionId": "7a139c10-a255-4de8-a17a-0046fa3916ae",
          "publishedAt": "2025-09-15T03:33:42.649641272Z",
          "updatedAt": "2025-09-15T03:33:42.649641272Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.KylinMountain/web-fetch-mcp",
      "description": "MCP server for web content fetching, summarizing, comparing, and extracting information",
      "status": "active",
      "repository": {
        "url": "https://github.com/KylinMountain/web-fetch-mcp.git",
        "source": "github"
      },
      "version": "0.1.1",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "web-fetch-mcp",
          "version": "0.1.1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your Gemini API key for the service",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "GEMINI_API_KEY"
            },
            {
              "description": "Your proxy for the gemini api service",
              "format": "string",
              "name": "HTTP_PROXY"
            },
            {
              "description": "Your proxy for the gemini api service",
              "format": "string",
              "name": "HTTPS_PROXY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "278a7db1-8bd6-49bf-b4c1-e8f298feee07",
          "versionId": "7a248a2b-7b8e-4d28-82c2-89d2949190dc",
          "publishedAt": "2025-09-18T09:15:43.239066581Z",
          "updatedAt": "2025-09-18T09:15:43.239066581Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.waystation/slack",
      "description": "Send messages, access channels, and manage files in your Slack workspace.",
      "status": "active",
      "repository": {
        "url": "https://github.com/waystation-ai/mcp",
        "source": "github"
      },
      "version": "0.3.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://waystation.ai/slack/mcp"
        },
        {
          "type": "sse",
          "url": "https://waystation.ai/slack/mcp/sse"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "c202d96c-de6b-469f-ad60-2426beb1e06d",
          "versionId": "7a6efd6d-130c-4586-9399-376f11836b1a",
          "publishedAt": "2025-09-09T14:32:49.571767151Z",
          "updatedAt": "2025-09-09T14:32:49.571767151Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "trade.neglect/mcp-server",
      "description": "Full Solana DeFi coverage: launchpads, tokens, trades, and wallets, decoded at scale.",
      "status": "active",
      "repository": {
        "url": "https://github.com/609NFT/solana-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://api.neglect.trade/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "c2749ea7-87d0-4d7f-8b4e-e7d687ff6500",
          "versionId": "7aa88faa-c1df-49a2-a33e-51c79f67be2b",
          "publishedAt": "2025-09-17T22:59:34.044420412Z",
          "updatedAt": "2025-09-17T22:59:34.044420412Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.ryanbaumann/platform-ai",
      "description": "Google Maps Platform Code Assist MCP",
      "status": "active",
      "repository": {
        "url": "https://github.com/googlemaps/platform-ai",
        "source": "github"
      },
      "version": "0.2.0",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "@googlemaps/code-assist-mcp",
          "version": "0.2.0",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "cbcbdd1a-d310-451f-9843-c83edf658b11",
          "versionId": "7b66d3bf-72fa-4832-87fa-c80a60668aae",
          "publishedAt": "2025-09-10T17:56:34.808006126Z",
          "updatedAt": "2025-09-10T17:56:34.808006126Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/morosss-sdfsdf",
      "description": "Find academic papers across major sources like arXiv, PubMed, bioRxiv, and more. Download PDFs whe…",
      "status": "active",
      "repository": {
        "url": "https://github.com/morosss/sdfsdf",
        "source": "github"
      },
      "version": "1.14.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@morosss/sdfsdf/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "22b3dc31-3039-45bf-9033-10d401c10bb6",
          "versionId": "7bc56184-ea78-465a-863c-76c9fe7e48a8",
          "publishedAt": "2025-09-13T17:26:11.858999857Z",
          "updatedAt": "2025-09-13T17:26:11.858999857Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.henilcalagiya/google-sheets-mcp",
      "description": "Powerful tools for automating Google Sheets using Model Context Protocol (MCP)",
      "status": "active",
      "repository": {
        "url": "https://github.com/henilcalagiya/google-sheets-mcp",
        "source": "github"
      },
      "version": "0.1.6",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "google-sheets-mcp",
          "version": "0.1.6",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "86a4cb67-7331-47cd-8231-0068272c149d",
          "versionId": "7bf7e778-039a-4420-b96b-c614bef2f879",
          "publishedAt": "2025-09-11T05:56:37.073750488Z",
          "updatedAt": "2025-09-11T05:56:37.073750488Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.iunera/druid-mcp-server",
      "description": "AI-powered MCP server for Apache Druid cluster management and analytic",
      "status": "active",
      "repository": {
        "url": "https://github.com/iunera/druid-mcp-server",
        "source": "github"
      },
      "version": "1.3.0",
      "packages": [
        {
          "registryType": "oci",
          "registryBaseUrl": "https://docker.io",
          "identifier": "iunera/druid-mcp-server",
          "version": "1.3.0",
          "runtimeHint": "docker",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Druid router URL for connecting to the Druid cluster",
              "format": "string",
              "name": "DRUID_ROUTER_URL"
            },
            {
              "description": "Username for Druid authentication (optional)",
              "format": "string",
              "name": "DRUID_AUTH_USERNAME"
            },
            {
              "description": "Password for Druid authentication (optional)",
              "format": "string",
              "name": "DRUID_AUTH_PASSWORD"
            },
            {
              "description": "Enable SSL/TLS support for Druid connections",
              "format": "boolean",
              "name": "DRUID_SSL_ENABLED"
            },
            {
              "description": "Skip SSL certificate verification (for development/testing only)",
              "format": "boolean",
              "name": "DRUID_SSL_SKIP_VERIFICATION"
            },
            {
              "description": "Enable read-only mode (only GET requests and SQL queries allowed)",
              "format": "boolean",
              "name": "DRUID_MCP_READONLY_ENABLED"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "c232e17d-152d-41f2-a532-85e8fa68d73e",
          "versionId": "7c033a77-bdc0-4bad-9429-f0681867d7da",
          "publishedAt": "2025-09-26T10:12:11.95384206Z",
          "updatedAt": "2025-09-26T10:12:11.95384206Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.b1ff/atlassian-dc-mcp-jira",
      "description": "MCP server for Atlassian Jira Data Center - search, view, and create issues",
      "status": "active",
      "repository": {
        "url": "https://github.com/b1ff/atlassian-dc-mcp",
        "source": "github"
      },
      "version": "0.9.7",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@atlassian-dc-mcp/jira",
          "version": "0.9.7",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Jira host domain (e.g. your-instance.atlassian.net)",
              "format": "string",
              "name": "JIRA_HOST"
            },
            {
              "description": "Jira API base path (alternative to JIRA_HOST)",
              "format": "string",
              "name": "JIRA_API_BASE_PATH"
            },
            {
              "description": "Jira Personal Access Token or API token",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "JIRA_API_TOKEN"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "775c0931-3153-4181-bada-77b597b58221",
          "versionId": "7c414dfb-e7f1-4456-b296-0fd9f6cfc2ad",
          "publishedAt": "2025-09-13T13:17:32.827442866Z",
          "updatedAt": "2025-09-13T13:18:50.721430383Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/PixdataOrg-coderide",
      "description": "CodeRide eliminates the context reset cycle once and for all. Through MCP integration, it seamless…",
      "status": "active",
      "repository": {
        "url": "https://github.com/PixdataOrg/coderide-mcp",
        "source": "github"
      },
      "version": "0.9.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@PixdataOrg/coderide/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "e2724d39-2d06-4fe0-82dd-395e9bbcb659",
          "versionId": "7ddbbf27-fe42-4fc4-806c-d1859f37aa01",
          "publishedAt": "2025-09-19T14:23:37.184036464Z",
          "updatedAt": "2025-09-19T14:23:37.184036464Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.mickymultani/crypto-bytes",
      "description": "Crypto Bytes MCP Server",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.1.1",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "crypto_bytes_mcp_server",
          "version": "0.1.1",
          "runtimeHint": "python",
          "transport": {
            "type": "stdio"
          },
          "runtimeArguments": [
            {
              "value": "-m",
              "type": "positional"
            },
            {
              "value": "crypto_bytes_mcp_server",
              "type": "positional"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "09a9a6ad-fb32-4dc2-8eed-9b2efcb342b6",
          "versionId": "7e37fcc2-e95f-4f4e-a104-b7c617fbf3dc",
          "publishedAt": "2025-09-12T01:24:42.862303085Z",
          "updatedAt": "2025-09-12T01:24:42.862303085Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.neverinfamous/memory-journal-mcp",
      "description": "Developer project journal with Git context, semantic search, and 7 specialized tools.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "1a2dcbd6-9de7-47c5-8f9b-0a57ae5eafd7",
          "versionId": "7e56154c-3f71-473e-becb-e02b6a52ef36",
          "publishedAt": "2025-09-24T00:24:51.574492802Z",
          "updatedAt": "2025-09-24T00:24:51.574492802Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.balldontlie/mcp",
      "description": "Provides access to live sports data and analytics from BALLDONTLIE: The Sports API",
      "status": "active",
      "repository": {
        "url": "https://github.com/balldontlie-api/mcp",
        "source": "github"
      },
      "version": "1.1.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.balldontlie.io/mcp",
          "headers": [
            {
              "description": "API key for authentication",
              "isRequired": true,
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "d5a785f7-4fae-4365-b408-71e79c58a387",
          "versionId": "7e642fa7-6eff-4415-98fd-10328586af6a",
          "publishedAt": "2025-09-18T00:35:55.642004605Z",
          "updatedAt": "2025-09-18T00:35:55.642004605Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.gradion-ai/ipybox",
      "description": "An MCP server for sandboxed Python code execution with IPython and Docker, and file transfer.",
      "status": "active",
      "repository": {
        "url": "https://github.com/gradion-ai/ipybox",
        "source": "github"
      },
      "version": "0.6.5",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "ipybox",
          "version": "0.6.5",
          "runtimeHint": "uvx",
          "transport": {
            "type": "stdio"
          },
          "packageArguments": [
            {
              "description": "Required MCP server subcommand",
              "isRequired": true,
              "value": "mcp",
              "type": "positional"
            },
            {
              "description": "Directory allowed for host filesystem operations",
              "type": "named",
              "name": "--allowed-dir",
              "isRepeated": true,
              "valueHint": "directory_path"
            },
            {
              "description": "Domain, IP address, or CIDR range allowed for outbound network access",
              "type": "named",
              "name": "--allowed-domain",
              "isRepeated": true,
              "valueHint": "domain_or_ip"
            },
            {
              "description": "Docker image tag to use",
              "type": "named",
              "name": "--container-tag",
              "valueHint": "docker_image_tag"
            },
            {
              "description": "Environment variable for container (KEY=VALUE format)",
              "type": "named",
              "name": "--container-env-var",
              "isRepeated": true,
              "valueHint": "env_var"
            },
            {
              "description": "Path to file containing container environment variables",
              "type": "named",
              "name": "--container-env-file",
              "valueHint": "file_path"
            },
            {
              "description": "Bind mount for container (host_path:container_path format)",
              "type": "named",
              "name": "--container-bind",
              "isRepeated": true,
              "valueHint": "bind_mount"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "2310a088-c5ba-429e-84b2-82d92622023b",
          "versionId": "7ee8d214-db7f-450d-93c7-c941d8196e03",
          "publishedAt": "2025-09-14T09:27:10.026612503Z",
          "updatedAt": "2025-09-14T09:57:57.966657748Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.Skills03/scrimba-teaching",
      "description": "Interactive programming teacher using Scrimba's methodology for 10x retention",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "2.0.0",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "scrimba-teaching-mcp",
          "version": "2.0.0",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "db943fb5-a144-442c-8cc3-d76be306b58b",
          "versionId": "7f02170b-fc62-40fe-95ac-b4d99e8a4a45",
          "publishedAt": "2025-09-21T15:36:57.834955391Z",
          "updatedAt": "2025-09-21T15:36:57.834955391Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/kwp-lab-rss-reader-mcp",
      "description": "Track and browse RSS feeds with ease. Fetch the latest entries from any feed URL and extract full…",
      "status": "active",
      "repository": {
        "url": "https://github.com/kwp-lab/rss-reader-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@kwp-lab/rss-reader-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "54da6e94-f93f-428a-b621-c78b20a29b93",
          "versionId": "7f80c7e7-1906-4315-a639-9a82089224b2",
          "publishedAt": "2025-09-10T17:02:25.896522471Z",
          "updatedAt": "2025-09-10T17:02:25.896522471Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/arjunkmrm-bobo",
      "description": "Send friendly, personalized greetings on command. Explore the origin of 'Hello, World' for quick c…",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.14.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@arjunkmrm/bobo/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "5abfd15e-d3d1-41ac-9a46-a46443067f4f",
          "versionId": "7faea200-7939-40a8-a809-115c22381d04",
          "publishedAt": "2025-09-19T03:28:29.60673126Z",
          "updatedAt": "2025-09-19T03:28:29.60673126Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.humanjesse/textarttools-mcp",
      "description": "Unicode text styling and ASCII art generation with 23 styles and 322+ figlet fonts",
      "status": "active",
      "repository": {
        "url": "https://github.com/humanjesse/textarttools-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "sse",
          "url": "https://humanjesse.github.io/textarttools-mcp/sse"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "545edb94-ebae-47c7-a94c-07bd9f277113",
          "versionId": "80687d2f-9c6c-43a7-8327-b6a19c415787",
          "publishedAt": "2025-09-26T13:09:45.715940683Z",
          "updatedAt": "2025-09-26T13:09:45.715940683Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/BigVik193-reddit-user-mcp",
      "description": "Browse and manage Reddit posts, comments, and threads. Fetch user activity, explore hot/new/rising…",
      "status": "active",
      "repository": {
        "url": "https://github.com/BigVik193/reddit-user-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@BigVik193/reddit-user-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "e730a80f-42db-4f18-bed0-da3f63542ecf",
          "versionId": "80990c6c-9b96-4c8c-ad64-0cc19f78bc8d",
          "publishedAt": "2025-09-14T21:19:18.649080266Z",
          "updatedAt": "2025-09-14T21:19:18.649080266Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.toolprint/hypertool-mcp",
      "description": "Dynamically expose tools from proxied servers based on an Agent Persona",
      "status": "active",
      "repository": {
        "url": "https://github.com/toolprint/hypertool-mcp",
        "source": "github"
      },
      "version": "0.0.42",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@toolprint/hypertool-mcp",
          "version": "0.0.42",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "d748c549-14ef-4930-9dca-7d751b3fb73b",
          "versionId": "8177937a-2aa9-4956-8578-5e07976a1e25",
          "publishedAt": "2025-09-10T22:05:20.655840343Z",
          "updatedAt": "2025-09-10T22:05:20.655840343Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/ProfessionalWiki-mediawiki-mcp-server",
      "description": "Enable Large Language Model clients to interact seamlessly with any MediaWiki wiki. Perform action…",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.1.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@ProfessionalWiki/mediawiki-mcp-server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "a4d3d192-2156-470a-87b9-7b355c0332d2",
          "versionId": "828887dd-c8da-4819-9f83-91094f2452bb",
          "publishedAt": "2025-09-18T12:49:06.317403403Z",
          "updatedAt": "2025-09-18T12:49:06.317403403Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.xkelxmc/uranium-mcp",
      "description": "MCP for Uranium NFT tools to mint, list, and manage digital assets on the permaweb.",
      "status": "active",
      "repository": {
        "url": "https://github.com/xkelxmc/uranium-mcp",
        "source": "github"
      },
      "version": "1.0.8",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "uranium-tools-mcp",
          "version": "1.0.8",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "You can generate an API key from your Uranium account settings: https://portal.uranium.pro/dashboard/profile/api-keys",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "URANIUM_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "a597359c-d5cd-47bf-ae08-bb7a01d796c7",
          "versionId": "8296f9ff-65ab-431a-8368-d348330ec141",
          "publishedAt": "2025-09-12T06:37:08.768329657Z",
          "updatedAt": "2025-09-12T06:40:04.125900265Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.ChiR24/unreal-engine-mcp",
      "description": "Production-ready MCP server for Unreal Engine with comprehensive game development tools",
      "repository": {
        "url": "https://github.com/ChiR24/Unreal_mcp.git",
        "source": "github"
      },
      "version": "0.2.1",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "unreal-engine-mcp-server",
          "version": "0.2.1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Unreal Engine host address",
              "value": "127.0.0.1",
              "name": "UE_HOST"
            },
            {
              "description": "Remote Control HTTP port",
              "value": "30010",
              "name": "UE_RC_HTTP_PORT"
            },
            {
              "description": "Remote Control WebSocket port",
              "value": "30020",
              "name": "UE_RC_WS_PORT"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "49c64feb-2e4c-406d-b39f-1236bf2212a6",
          "versionId": "831f2f8f-e1fd-42df-a72b-204364d2e08f",
          "publishedAt": "2025-09-17T08:19:12.108456567Z",
          "updatedAt": "2025-09-17T12:43:41.544322203Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.wonderwhy-er/desktop-commander",
      "description": "MCP server for terminal commands, file operations, and process management",
      "status": "active",
      "repository": {
        "url": "https://github.com/wonderwhy-er/DesktopCommanderMCP",
        "source": "github"
      },
      "version": "0.2.15",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@wonderwhy-er/desktop-commander",
          "version": "0.2.15",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "70b472c6-0bf2-44b2-97fc-be12bfc3cdca",
          "versionId": "832cd2a6-02b3-4eec-a7dc-f91e56d895da",
          "publishedAt": "2025-09-18T13:15:52.386560726Z",
          "updatedAt": "2025-09-26T16:35:30.87372225Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.mcpcap/mcpcap",
      "description": "An MCP server for analyzing PCAP files.",
      "status": "active",
      "repository": {
        "url": "https://github.com/mcpcap/mcpcap",
        "source": "github"
      },
      "version": "0.5.9",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "mcpcap",
          "version": "0.4.4",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "1a77c0fe-c133-468d-aad0-52c60574d088",
          "versionId": "83673f9d-7093-4f48-b57c-34f21f774802",
          "publishedAt": "2025-09-12T04:48:10.687272107Z",
          "updatedAt": "2025-09-12T05:10:59.819863662Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.xkelxmc/uranium-mcp",
      "description": "MCP for Uranium NFT tools to mint, list, and manage digital assets on the permaweb.",
      "status": "active",
      "repository": {
        "url": "https://github.com/xkelxmc/uranium-mcp",
        "source": "github"
      },
      "version": "1.0.9",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "uranium-tools-mcp",
          "version": "1.0.9",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "You can generate an API key from your Uranium account settings: https://portal.uranium.pro/dashboard/profile/api-keys",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "URANIUM_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "a597359c-d5cd-47bf-ae08-bb7a01d796c7",
          "versionId": "83791fdd-0f24-4050-800c-0eb432e14022",
          "publishedAt": "2025-09-12T06:40:04.121499157Z",
          "updatedAt": "2025-09-12T06:40:04.121499157Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/lukaskostka99-marketing-miner-mcp",
      "description": "Discover high-impact keyword ideas across Central and Eastern European and English markets. Analyz…",
      "status": "active",
      "repository": {
        "url": "https://github.com/lukaskostka99/marketing-miner-mcp",
        "source": "github"
      },
      "version": "1.14.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@lukaskostka99/marketing-miner-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "7232380d-710a-45a3-b503-8c3e86cf7414",
          "versionId": "8438de75-ed65-4fbe-9e3e-9570a9f8370d",
          "publishedAt": "2025-09-16T19:53:18.718565229Z",
          "updatedAt": "2025-09-16T19:53:18.718565229Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.vfarcic/dot-ai",
      "description": "AI-powered development platform for Kubernetes deployments and intelligent automation",
      "status": "active",
      "repository": {
        "url": "https://github.com/vfarcic/dot-ai",
        "source": "github"
      },
      "version": "0.101.0",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "@vfarcic/dot-ai",
          "version": "0.101.0",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "6836138f-2ad2-4feb-8043-ea425ecb0d71",
          "versionId": "843f4035-2bf4-43f5-901b-d11cf9e29822",
          "publishedAt": "2025-09-28T16:21:23.441889888Z",
          "updatedAt": "2025-09-28T16:21:23.441889888Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.ChengJiale150/jupyter-mcp-server",
      "description": "A powerful MCP server for AI-driven Jupyter Notebook management and execution",
      "status": "active",
      "repository": {
        "url": "https://github.com/ChengJiale150/jupyter-mcp-server",
        "source": "github"
      },
      "version": "1.1.0",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "better-jupyter-mcp-server",
          "version": "1.1.0",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "5a02e87b-630f-4ee3-97b2-38de44f347c5",
          "versionId": "846f2bd9-c60c-4129-8ab2-73d5939c126b",
          "publishedAt": "2025-09-17T06:19:21.754937017Z",
          "updatedAt": "2025-09-17T06:19:21.754937017Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.zenml-io/mcp-zenml",
      "description": "MCP server for ZenML - browse stacks, pipelines, runs, artifacts & trigger pipeline runs via API",
      "status": "active",
      "repository": {
        "url": "https://github.com/zenml-io/mcp-zenml",
        "source": "github"
      },
      "version": "1.0.4",
      "packages": [
        {
          "registryType": "oci",
          "registryBaseUrl": "https://docker.io",
          "identifier": "zenmldocker/mcp-zenml",
          "version": "1.0.4",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Base URL of your ZenML server (e.g., https://<workspace-id>-zenml.cloudinfra.zenml.io).",
              "isRequired": true,
              "format": "string",
              "name": "ZENML_STORE_URL"
            },
            {
              "description": "API key used to authenticate with your ZenML server (ideally a service account key).",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "ZENML_STORE_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "6d64bd95-ee87-476c-8bc3-a36e65cfcee2",
          "versionId": "848ff1ad-ac4a-49b6-bd19-d27710b5d4c1",
          "publishedAt": "2025-09-18T20:48:56.219551735Z",
          "updatedAt": "2025-09-18T20:48:56.219551735Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.opencontext-team/mcp-server",
      "description": "An MCP server that provides visual memory and context storage with knowledge graph capabilities",
      "status": "active",
      "repository": {
        "url": "https://github.com/testing9384/mcp-server",
        "source": "github"
      },
      "version": "1.0.2",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "visual-memory-context-server",
          "version": "1.0.2",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Path to the memory.json file for knowledge graph storage",
              "format": "string",
              "name": "MEMORY_FILE_PATH"
            },
            {
              "description": "Comma-separated list of directories the server can access, or JSON array format",
              "format": "string",
              "name": "ALLOWED_DIRECTORIES"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "13f17364-c47b-4059-91e7-689c91e259fe",
          "versionId": "8490e3d4-2a0c-4a89-8f03-ebb6e24c6425",
          "publishedAt": "2025-09-20T03:43:17.852240906Z",
          "updatedAt": "2025-09-20T03:43:17.852240906Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.appwrite/mcp-for-api",
      "description": "MCP (Model Context Protocol) server for Appwrite",
      "repository": {
        "url": "https://github.com/appwrite/mcp-for-api",
        "source": "github"
      },
      "version": "0.2.7",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "mcp-server-appwrite",
          "version": "0.2.7",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "12ec96fa-d730-49ef-9c01-df608cd7916b",
          "versionId": "8578d6bd-a291-4e3f-aacb-f77af6e23517",
          "publishedAt": "2025-09-28T06:08:26.629780456Z",
          "updatedAt": "2025-09-28T06:08:26.629780456Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/demomagic-duckchain-mcp",
      "description": "Explore blockchain data across addresses, tokens, blocks, and transactions. Investigate any transa…",
      "status": "active",
      "repository": {
        "url": "https://github.com/demomagic/duckchain-mcp",
        "source": "github"
      },
      "version": "1.13.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@demomagic/duckchain-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "2b01388b-f99b-4501-8653-f87b23a77aca",
          "versionId": "857bf329-eeca-4c11-aeb9-2f82f5a1fa24",
          "publishedAt": "2025-09-14T05:32:58.075993678Z",
          "updatedAt": "2025-09-14T05:32:58.075993678Z",
          "isLatest": true
        }
      }
    },
    {
      "name": "io.github.OtherVibes/mcp-as-a-judge",
      "description": "MCP as a Judge: a behavioral MCP that strengthens AI coding assistants via explicit LLM evaluations",
      "status": "active",
      "repository": {
        "url": "https://github.com/OtherVibes/mcp-as-a-judge",
        "source": "github"
      },
      "version": "0.3.20",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "mcp-as-a-judge",
          "version": "0.3.20",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "e8b7a95e-e0b7-44d1-9830-1ef945eed29d",
          "versionId": "863d79d0-6104-4bda-ad5d-58888d8fd3b6",
          "publishedAt": "2025-09-20T10:35:19.80792562Z",
          "updatedAt": "2025-09-20T10:35:19.80792562Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.kevint-cerebras/cerebras-code-mcp",
      "description": "Model Context Protocol (MCP) server for Cerebras to make coding faster in AI-first IDEs",
      "status": "active",
      "repository": {
        "url": "https://github.com/kevint-cerebras/cerebras-code-mcp",
        "source": "github"
      },
      "version": "1.3.1",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "cerebras-code-mcp",
          "version": "1.3.1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your Cerebras API key from cloud.cerebras.ai",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "CEREBRAS_API_KEY"
            },
            {
              "description": "Optional OpenRouter API key for fallback when Cerebras rate limits are hit",
              "format": "string",
              "isSecret": true,
              "name": "OPENROUTER_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "cf2775c1-2d0e-49b1-b5b0-119dd6523ed3",
          "versionId": "86627f06-52cf-41a8-8121-b1cfbea8f542",
          "publishedAt": "2025-09-09T19:59:53.502109932Z",
          "updatedAt": "2025-09-09T19:59:53.502109932Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.joelverhagen/Knapcode.SampleMcpServer/aot",
      "description": "A sample MCP server using the MCP C# SDK. Generates random numbers and random weather.",
      "repository": {
        "url": "https://github.com/joelverhagen/Knapcode.SampleMcpServer.git",
        "source": "github"
      },
      "version": "0.8.0-beta",
      "packages": [
        {
          "registryType": "nuget",
          "registryBaseUrl": "https://api.nuget.org",
          "identifier": "Knapcode.SampleMcpServer",
          "version": "0.8.0-beta",
          "transport": {
            "type": "stdio"
          },
          "packageArguments": [
            {
              "value": "mcp",
              "type": "positional",
              "valueHint": "mcp"
            },
            {
              "value": "start",
              "type": "positional",
              "valueHint": "start"
            }
          ],
          "environmentVariables": [
            {
              "value": "{weather_choices}",
              "variables": {
                "weather_choices": {
                  "description": "Comma separated list of weather descriptions to randomly select.",
                  "isRequired": true
                }
              },
              "name": "WEATHER_CHOICES"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "3a07295a-b552-42d7-a4b7-3f2ca6c588f6",
          "versionId": "86667e38-34da-44eb-a0ce-e34112fd98c6",
          "publishedAt": "2025-09-12T21:54:51.656512708Z",
          "updatedAt": "2025-09-12T21:54:51.656512708Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/callmybot-cookbook-mcp-server",
      "description": "Count occurrences of any character in your text instantly. Specify the character and get precise c…",
      "status": "active",
      "repository": {
        "url": "https://github.com/callmybot/cookbook-mcp-server",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@callmybot/cookbook-mcp-server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "bf62e877-0c0e-49e2-a459-36c336bca4af",
          "versionId": "86726d7d-81af-46f7-ba4a-e7c13bd0914a",
          "publishedAt": "2025-09-18T09:25:11.477138689Z",
          "updatedAt": "2025-09-18T09:25:11.477138689Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.kkjdaniel/bgg-mcp",
      "description": "BoardGameGeek MCP server providing access to BGG API data through standardized tools",
      "status": "active",
      "repository": {
        "url": "https://github.com/kkjdaniel/bgg-mcp",
        "source": "github"
      },
      "version": "1.3.2",
      "packages": [
        {
          "registryType": "oci",
          "registryBaseUrl": "https://docker.io",
          "identifier": "kdaniel/bgg-mcp",
          "version": "1.3.2",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your BoardGameGeek username for references such as ME or MY in prompts",
              "format": "string",
              "name": "BGG_USERNAME"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "5a801dcc-96ae-47cf-ae55-0be14ade1d94",
          "versionId": "868fcbf0-a0d5-40fc-ab05-90150f408d12",
          "publishedAt": "2025-09-15T00:05:40.274408146Z",
          "updatedAt": "2025-09-16T01:51:47.036829827Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/Hint-Services-obsidian-github-mcp",
      "description": "Connect AI assistants to your GitHub-hosted Obsidian vault to seamlessly access, search, and analy…",
      "status": "active",
      "repository": {
        "url": "https://github.com/Hint-Services/obsidian-github-mcp",
        "source": "github"
      },
      "version": "0.4.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@Hint-Services/obsidian-github-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "c9e39fea-5497-439f-aa32-70fe07bfeba4",
          "versionId": "86a34c13-67d8-4c36-9b29-47fee0e72635",
          "publishedAt": "2025-09-14T15:20:36.371442208Z",
          "updatedAt": "2025-09-14T15:20:36.371442208Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.ritzademo/acme-todo",
      "description": "An MCP server for a simple todo list",
      "status": "active",
      "repository": {
        "url": "https://github.com/ritza-co/acme-todo",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.ritzademo.com/mcp/ritza-rzx-our91"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "56249c55-9d56-473d-a5ba-9ccc9c956d5d",
          "versionId": "86d5e960-a135-427a-ab53-046209080b2e",
          "publishedAt": "2025-09-15T16:48:08.379170462Z",
          "updatedAt": "2025-09-15T16:48:08.379170462Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/ramadasmr-networkcalc-mcp",
      "description": "Look up DNS information for any domain to troubleshoot issues and gather insights. Get fast, relia…",
      "status": "active",
      "repository": {
        "url": "https://github.com/ramadasmr/networkcalc-mcp",
        "source": "github"
      },
      "version": "1.13.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@ramadasmr/networkcalc-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "492f38fe-94a3-4d61-9146-2ecc7896b017",
          "versionId": "874b81fc-3ec9-41f2-bcd0-4317bc8c1f8c",
          "publishedAt": "2025-09-20T10:10:47.321873085Z",
          "updatedAt": "2025-09-20T10:10:47.321873085Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "net.gepuro.mcp-company-lens-v1/company-lens-mcp-registry",
      "description": "Search Japanese company database",
      "status": "active",
      "repository": {
        "url": "https://github.com/gepuro/company-lens-mcp-registry",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp-company-lens-v1.gepuro.net/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "67d420d6-f9da-4488-b264-88c4d6126171",
          "versionId": "87793efe-79b4-4e91-8012-6a5cc6abe61e",
          "publishedAt": "2025-09-13T02:14:01.9221662Z",
          "updatedAt": "2025-09-13T02:14:01.9221662Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/smithery-ai-slack",
      "description": "Enable interaction with Slack workspaces. Supports subscribing to Slack events through Resources.",
      "status": "active",
      "repository": {
        "url": "https://github.com/smithery-ai/mcp-servers",
        "source": "github",
        "subfolder": "slack"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@smithery-ai/slack/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "b5fd9e9c-2aa1-4927-8d68-051719257c39",
          "versionId": "87df9cc3-6c2b-40c4-8087-7644b05f005d",
          "publishedAt": "2025-09-10T20:56:36.643850073Z",
          "updatedAt": "2025-09-10T20:56:36.643850073Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ci.git/mymlh-mcp-server",
      "description": "OAuth-enabled MyMLH MCP server for accessing MyMLH data.",
      "repository": {
        "url": "https://github.com/wei/mymlh-mcp-server",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mymlh-mcp.git.ci/mcp"
        },
        {
          "type": "sse",
          "url": "https://mymlh-mcp.git.ci/sse"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "a0aa174d-3e3e-4eb1-899e-706eb34ef643",
          "versionId": "87e529f5-a17d-45ef-a189-86bf64e42fb1",
          "publishedAt": "2025-09-18T01:20:01.35205977Z",
          "updatedAt": "2025-09-18T01:20:01.35205977Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.mintmcp/outlook-email",
      "description": "A MCP server for Outlook email that lets you search, read, and draft emails and replies.",
      "status": "active",
      "repository": {
        "url": "https://github.com/mintmcp/servers",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://outlook-email.mintmcp.com/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "c331c604-5fd3-409f-b076-7790b9acbb20",
          "versionId": "881c11dc-c6c4-4bdb-8baf-17c32f1e611b",
          "publishedAt": "2025-09-09T19:59:31.832251453Z",
          "updatedAt": "2025-09-09T20:02:38.029140257Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.containers/kubernetes-mcp-server",
      "description": "An MCP server that provides [describe what your server does]",
      "status": "active",
      "repository": {
        "url": "https://github.com/containers/kubernetes-mcp-server",
        "source": "github"
      },
      "version": "1.0.0",
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "bcee55b5-2316-4f92-8b66-db907496714b",
          "versionId": "8858e484-2e5e-4166-b39f-7f1002fa27a4",
          "publishedAt": "2025-09-16T13:06:55.742929857Z",
          "updatedAt": "2025-09-16T13:06:55.742929857Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.getunblocked/unblocked-mcp",
      "description": "Unblocked MCP Server",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://getunblocked.com/api/mcpsse"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "75219b4c-191f-4fec-8e1f-7b4604df9c8d",
          "versionId": "88833a2c-b1b8-4a0f-ba12-43193b270796",
          "publishedAt": "2025-09-17T17:32:31.670692124Z",
          "updatedAt": "2025-09-17T17:32:31.670692124Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.Lyellr88/marm-mcp-server",
      "description": "Universal MCP Server with advanced AI memory capabilities and semantic search.",
      "repository": {
        "url": "https://github.com/Lyellr88/MARM-Systems",
        "source": "github"
      },
      "version": "2.2.3",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "marm-mcp-server",
          "version": "2.2.3",
          "transport": {
            "type": "stdio"
          }
        },
        {
          "registryType": "oci",
          "identifier": "lyellr88/marm-mcp-server",
          "version": "2.2.3",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "73eda8a1-8138-43c0-ac0e-5f953d1d304e",
          "versionId": "888a54b2-a4fb-4e79-8d29-5f6dd2d7506c",
          "publishedAt": "2025-09-19T07:39:05.720820301Z",
          "updatedAt": "2025-09-19T08:07:18.948848371Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.mux/mcp",
      "description": "The official MCP Server for the Mux API",
      "status": "active",
      "repository": {
        "url": "https://github.com/muxinc/mux-node-sdk",
        "source": "github",
        "subfolder": "packages/mcp-server"
      },
      "version": "12.8.0",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@mux/mcp",
          "version": "12.8.0",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your Mux access token ID",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "MUX_TOKEN_ID"
            },
            {
              "description": "Your Mux access token secret",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "MUX_TOKEN_SECRET"
            },
            {
              "description": "Your JWT signing key ID, for use with signed playback IDs",
              "format": "string",
              "isSecret": true,
              "name": "MUX_SIGNING_KEY"
            },
            {
              "description": "Your JWT private key, for use with signed playback IDs",
              "format": "string",
              "isSecret": true,
              "name": "MUX_PRIVATE_KEY"
            }
          ]
        }
      ],
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.mux.com",
          "headers": [
            {
              "description": "Optional basic authorization header you can include, combining your Access Token and Secret using HTTP Basic Auth. If not provided, authorization will be handled via OAuth.",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "bf008dae-4210-4bce-8621-a709bc1e67cb",
          "versionId": "89136fab-1248-4db5-aabd-a112cc45136e",
          "publishedAt": "2025-09-18T20:19:27.74268937Z",
          "updatedAt": "2025-09-18T20:19:27.74268937Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.mobile-next/mobile-mcp",
      "description": "MCP server for iOS and Android Mobile Development, Automation and Testing",
      "status": "active",
      "repository": {
        "url": "https://github.com/mobile-next/mobile-mcp",
        "source": "github"
      },
      "version": "0.0.26",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@mobilenext/mobile-mcp",
          "version": "0.0.26",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "name": ""
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "0813f771-b958-4cbd-a4c1-67f97312db8b",
          "versionId": "89304685-3f90-4915-9b41-7742cf94b56a",
          "publishedAt": "2025-09-09T06:51:49.988573415Z",
          "updatedAt": "2025-09-09T06:51:49.988573415Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.surendranb/google-analytics-mcp",
      "description": "An MCP server that provides [describe what your server does]",
      "status": "active",
      "repository": {
        "url": "https://github.com/surendranb/google-analytics-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "google-analytics-mcp",
          "version": "1.2.0",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your API key for the service",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "YOUR_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "16f9d16c-962b-44b7-904d-c9df1000fbf1",
          "versionId": "89606265-25b6-4e44-8c36-0988fd23211c",
          "publishedAt": "2025-09-09T06:10:41.49026764Z",
          "updatedAt": "2025-09-09T06:10:41.49026764Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.findyourfivepm/mcp-server",
      "description": "Discover cities where it's currently 5PM around the world with timezone and location data.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.2",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.findyourfivepm.com"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "53546a6e-b9a2-42c2-80e8-25de952fc608",
          "versionId": "89638680-b5e8-4024-a01a-767b19552328",
          "publishedAt": "2025-09-23T00:32:16.764241388Z",
          "updatedAt": "2025-09-23T00:32:16.764241388Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.mintmcp/gcal",
      "description": "A MCP server that works with Google Calendar to manage event listing, reading, and updates.",
      "status": "active",
      "repository": {
        "url": "https://github.com/mintmcp/mcp",
        "source": "github"
      },
      "version": "1.0.2",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://gcal.mintmcp.com/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "7b265ff1-5cd1-43fe-92c4-54cc6a0fd4d7",
          "versionId": "899391c2-e787-4df6-9788-0fcb0e1f086d",
          "publishedAt": "2025-09-09T19:36:27.962358954Z",
          "updatedAt": "2025-09-09T19:42:00.468110436Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.gradion-ai/ipybox",
      "description": "An MCP server for sandboxed Python code execution with IPython and Docker, and file transfer.",
      "status": "active",
      "repository": {
        "url": "https://github.com/gradion-ai/ipybox",
        "source": "github"
      },
      "version": "0.6.3-p2",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "ipybox",
          "version": "0.6.3-p2",
          "runtimeHint": "uvx",
          "transport": {
            "type": "stdio"
          },
          "packageArguments": [
            {
              "description": "Required MCP server subcommand",
              "isRequired": true,
              "value": "mcp",
              "type": "positional"
            },
            {
              "description": "Directory allowed for host filesystem operations",
              "type": "named",
              "name": "--allowed-dir",
              "isRepeated": true,
              "valueHint": "directory_path"
            },
            {
              "description": "Domain, IP address, or CIDR range allowed for outbound network access",
              "type": "named",
              "name": "--allowed-domain",
              "isRepeated": true,
              "valueHint": "domain_or_ip"
            },
            {
              "description": "Docker image tag to use",
              "type": "named",
              "name": "--container-tag",
              "valueHint": "docker_image_tag"
            },
            {
              "description": "Environment variable for container (KEY=VALUE format)",
              "type": "named",
              "name": "--container-env-var",
              "isRepeated": true,
              "valueHint": "env_var"
            },
            {
              "description": "Path to file containing container environment variables",
              "type": "named",
              "name": "--container-env-file",
              "valueHint": "file_path"
            },
            {
              "description": "Bind mount for container (host_path:container_path format)",
              "type": "named",
              "name": "--container-bind",
              "isRepeated": true,
              "valueHint": "bind_mount"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "2310a088-c5ba-429e-84b2-82d92622023b",
          "versionId": "89da352b-cb6c-4940-89bd-45b58a4740d3",
          "publishedAt": "2025-09-14T08:12:36.178778068Z",
          "updatedAt": "2025-09-14T08:12:36.178778068Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.yuna0x0/hackmd-mcp",
      "description": "A Model Context Protocol server for integrating HackMD's note-taking platform with AI assistants.",
      "status": "active",
      "repository": {
        "url": "https://github.com/yuna0x0/hackmd-mcp",
        "source": "github"
      },
      "version": "1.5.1",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "hackmd-mcp",
          "version": "1.5.1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your HackMD API token for API authentication",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "HACKMD_API_TOKEN"
            },
            {
              "description": "Optional HackMD API URL, defaults to https://api.hackmd.io/v1",
              "format": "string",
              "default": "https://api.hackmd.io/v1",
              "name": "HACKMD_API_URL"
            }
          ]
        },
        {
          "registryType": "oci",
          "registryBaseUrl": "https://ghcr.io",
          "identifier": "yuna0x0/hackmd-mcp",
          "version": "1.5.1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your HackMD API token for API authentication",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "HACKMD_API_TOKEN"
            },
            {
              "description": "Optional HackMD API URL, defaults to https://api.hackmd.io/v1",
              "format": "string",
              "default": "https://api.hackmd.io/v1",
              "name": "HACKMD_API_URL"
            }
          ]
        },
        {
          "registryType": "mcpb",
          "identifier": "https://github.com/yuna0x0/hackmd-mcp/releases/download/v1.5.1/hackmd-mcp-1.5.1.mcpb",
          "version": "1.5.1",
          "fileSha256": "a994d25dbf19fb2fd783c5daba402bf87fc5a1456e1a11acf6e729984a5524ae",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your HackMD API token for API authentication",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "HACKMD_API_TOKEN"
            },
            {
              "description": "Optional HackMD API URL, defaults to https://api.hackmd.io/v1",
              "format": "string",
              "default": "https://api.hackmd.io/v1",
              "name": "HACKMD_API_URL"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "e679729a-74ca-4b31-a7f5-80cddd5fa24d",
          "versionId": "8a33c695-fb2c-48ea-bac7-cbf56022abc2",
          "publishedAt": "2025-09-21T14:08:58.290591646Z",
          "updatedAt": "2025-09-22T00:26:57.638290849Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.apple-rag/mcp-server",
      "description": "Apple Developer Documentation with Semantic Search, RAG, and AI reranking for MCP clients",
      "status": "active",
      "repository": {
        "url": "https://github.com/BingoWon/apple-rag-mcp",
        "source": "github"
      },
      "version": "2.8.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.apple-rag.com",
          "headers": [
            {
              "description": "MCP Token for authentication (optional - free tier available without token)",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "803e4dc4-c3d4-43d2-b6a3-65885c8eefb4",
          "versionId": "8b331ec6-3e77-4ea2-a187-3bfe64764aa7",
          "publishedAt": "2025-09-20T13:10:26.610215669Z",
          "updatedAt": "2025-09-21T07:40:13.398559429Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.tedfytw1209/mcp-server-EVEfleet",
      "description": "An MCP server that provides tools for EVE Online players to manage their fleets",
      "status": "active",
      "repository": {
        "url": "https://github.com/tedfytw1209/mcp-server-EVEfleet",
        "source": "github"
      },
      "version": "1.0.2",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "mcp-server-evefleet",
          "version": "0.1.4",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your API key for the service",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "YOUR_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "540d0e52-a6cb-4d28-9377-887eca830e5d",
          "versionId": "8b40f793-31ef-49fa-9ec9-7971eaed7a2c",
          "publishedAt": "2025-09-20T15:35:31.249645791Z",
          "updatedAt": "2025-09-20T15:35:31.249645791Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "app.linear/linear",
      "description": "MCP server for Linear project management and issue tracking",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "sse",
          "url": "https://mcp.linear.app/sse"
        },
        {
          "type": "streamable-http",
          "url": "https://mcp.linear.app/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "08fcd639-7510-44e0-bcd7-c6cc20345d8c",
          "versionId": "8b8bca5f-bd16-4660-be56-da38b1ed6e95",
          "publishedAt": "2025-09-18T15:51:15.598862489Z",
          "updatedAt": "2025-09-18T15:51:15.598862489Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "dev.lingo/main",
      "description": "Lingo.dev MCP Server - World-class i18n implementation with ICU MessageFormat.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.lingo.dev/main"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "f0abb5cd-c660-478b-b3a4-7325bb3ad829",
          "versionId": "8bb26bcc-ecea-433a-ac25-ad9a370a4617",
          "publishedAt": "2025-09-17T08:32:24.189924177Z",
          "updatedAt": "2025-09-17T08:32:24.189924177Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.neverinfamous/sqlite-mcp-server",
      "description": "SQLite MCP server with 73 tools for JSONB, full-text search, geospatial, and analytics.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "2.6.0",
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "214e2c2b-d1c1-4b5c-bb54-863a40d6d742",
          "versionId": "8c59a7e9-2250-4aa5-a353-5ba3f40cd484",
          "publishedAt": "2025-09-23T23:52:16.059130004Z",
          "updatedAt": "2025-09-23T23:52:16.059130004Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.snapcall/mcp",
      "description": "MCP Server that generate video call url",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.snapcall.io"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "af1c837f-4f14-49e1-b318-961cca038cfe",
          "versionId": "8c64bc44-f66c-4690-8470-ef2301a8b625",
          "publishedAt": "2025-09-18T08:16:15.414359799Z",
          "updatedAt": "2025-09-18T08:16:15.414359799Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.fliptheweb/yazio-mcp",
      "description": "MCP server for accessing Yazio user & nutrition data (unofficial)",
      "status": "active",
      "repository": {
        "url": "https://github.com/fliptheweb/yazio-mcp",
        "source": "github"
      },
      "version": "0.0.2",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "yazio-mcp",
          "version": "0.0.2",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Yazio Username",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "YAZIO_USERNAME"
            },
            {
              "description": "Yazio Password",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "YAZIO_PASSWORD"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "b28d33da-8510-4a00-aae3-a5ca0d22f9da",
          "versionId": "8c69258e-06c8-4ab1-bbc3-3690071354ed",
          "publishedAt": "2025-09-25T20:50:24.594330968Z",
          "updatedAt": "2025-09-25T21:36:08.072469665Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/DynamicEndpoints-autogen_mcp",
      "description": "Create and manage AI agents that collaborate and solve problems through natural language interacti…",
      "status": "active",
      "repository": {
        "url": "https://github.com/DynamicEndpoints/Autogen_MCP",
        "source": "github"
      },
      "version": "0.3.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@DynamicEndpoints/autogen_mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "7250756b-9312-48f8-a2e2-b92f7b6268c7",
          "versionId": "8d07348b-fc98-4ddd-8fa3-31502600c39c",
          "publishedAt": "2025-09-11T13:57:38.185529674Z",
          "updatedAt": "2025-09-11T13:57:38.185529674Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.savhascelik/meta-api-mcp-server",
      "description": "A configuration-driven Meta API Gateway server for the Model Context Protocol (MCP).",
      "status": "active",
      "repository": {
        "url": "https://github.com/savhascelik/meta-api-mcp-server",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "meta-api-mcp-server",
          "version": "1.0.4",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "If the api you are connecting to requires api_key, you can use this variable and you can also define different variables",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "YOUR_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "0c6c810c-c7b3-48ce-b343-dce410026b01",
          "versionId": "8d2ec6b3-7e55-40b9-8d76-7e45f5063e29",
          "publishedAt": "2025-09-09T04:02:19.493255754Z",
          "updatedAt": "2025-09-09T04:14:51.989316259Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.GLips/Figma-Context-MCP",
      "description": "Give your coding agent access to your Figma data. Implement designs in any framework in one-shot.",
      "status": "active",
      "repository": {
        "url": "https://github.com/GLips/Figma-Context-MCP",
        "source": "github"
      },
      "version": "0.6.0",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "figma-developer-mcp",
          "version": "0.6.0",
          "transport": {
            "type": "stdio"
          },
          "packageArguments": [
            {
              "value": "--stdio",
              "type": "positional"
            }
          ],
          "environmentVariables": [
            {
              "description": "Your Figma Personal Access Token, learn more here: https://www.figma.com/developers/api#access-tokens",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "FIGMA_API_KEY"
            },
            {
              "description": "Start the server in stdio mode, keep as CLI",
              "default": "cli",
              "name": "NODE_ENV"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "fa424c9b-7b21-4ea7-a75b-4ef0bbb6aad5",
          "versionId": "8e307ce2-4847-4aa9-952f-22017f14f7ef",
          "publishedAt": "2025-09-09T16:40:36.136529165Z",
          "updatedAt": "2025-09-09T16:40:36.136529165Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.b1ff/atlassian-dc-mcp-bitbucket",
      "description": "MCP server for Atlassian Bitbucket Data Center - interact with repositories and code",
      "status": "active",
      "repository": {
        "url": "https://github.com/b1ff/atlassian-dc-mcp",
        "source": "github"
      },
      "version": "0.9.8",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@atlassian-dc-mcp/bitbucket",
          "version": "0.9.8",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Bitbucket host domain (e.g. your-instance.atlassian.net)",
              "format": "string",
              "name": "BITBUCKET_HOST"
            },
            {
              "description": "Bitbucket API base path (alternative to BITBUCKET_HOST)",
              "format": "string",
              "name": "BITBUCKET_API_BASE_PATH"
            },
            {
              "description": "Bitbucket Personal Access Token or API token",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "BITBUCKET_API_TOKEN"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "632bfe48-4b52-4ef4-a266-c82075a80f1a",
          "versionId": "8f91d610-22eb-4116-9fb7-413af6d27c0a",
          "publishedAt": "2025-09-13T13:18:51.361262856Z",
          "updatedAt": "2025-09-13T13:29:18.892466109Z",
          "isLatest": false
        }
      }
    }
  ]
}