{
  "servers": [
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.jgador/websharp",
      "description": "Search the web and extract article text for LLMs.",
      "status": "active",
      "repository": {
        "url": "https://github.com/jgador/websharp",
        "source": "github"
      },
      "version": "v0.99.0-rc2",
      "packages": [
        {
          "registryType": "oci",
          "registryBaseUrl": "https://docker.io",
          "identifier": "jessegador/websharp-mcp",
          "version": "v0.99.0-rc2",
          "transport": {
            "type": "streamable-http",
            "url": "http://localhost:8081/"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "cf9c7e3f-e774-441d-ac97-56797089e13f",
          "versionId": "551f28ac-4220-4947-9622-369fd6ea55eb",
          "publishedAt": "2025-09-22T09:09:05.052333574Z",
          "updatedAt": "2025-09-22T09:09:05.052333574Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/anirbanbasu-pymcp",
      "description": "Primarily to be used as a template repository for developing MCP servers with FastMCP in Python, P…",
      "status": "active",
      "repository": {
        "url": "https://github.com/anirbanbasu/pymcp",
        "source": "github"
      },
      "version": "0.1.7",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@anirbanbasu/pymcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "d746b7c2-781d-4007-a303-108574ceebdc",
          "versionId": "55c2e977-4086-4058-ad5d-6f432f70a2cf",
          "publishedAt": "2025-09-20T05:41:08.153834913Z",
          "updatedAt": "2025-09-20T05:41:08.153834913Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.timheuer/sampledotnetmcpserver",
      "description": "Sample .NET MCP Server",
      "repository": {
        "url": "https://github.com/timheuer/sampledotnetmcpserver",
        "source": "github"
      },
      "version": "",
      "packages": [
        {
          "registryType": "nuget",
          "identifier": "TimHeuer.SampleDotnetMcpServer",
          "version": "0.1.11-beta",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "98619929-a570-46c1-8e35-4cde888731ee",
          "versionId": "55cfffa3-6f27-4010-97ce-7946cd76cad2",
          "publishedAt": "2025-09-10T13:58:00.558767962Z",
          "updatedAt": "2025-09-10T15:31:23.618984633Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.timheuer/sampledotnetmcpserver",
      "description": "Sample .NET MCP Server",
      "status": "active",
      "repository": {
        "url": "https://github.com/timheuer/sampledotnetmcpserver",
        "source": "github"
      },
      "version": "0.1.57-beta",
      "packages": [
        {
          "registryType": "nuget",
          "registryBaseUrl": "https://api.nuget.org",
          "identifier": "TimHeuer.SampleDotnetMcpServer",
          "version": "0.1.57-beta",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "98619929-a570-46c1-8e35-4cde888731ee",
          "versionId": "55d97a83-7c7b-4baf-b70f-e1676a8b667a",
          "publishedAt": "2025-09-22T17:04:35.115505274Z",
          "updatedAt": "2025-09-22T17:04:35.115505274Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.mintmcp/gcal",
      "description": "A MCP server that works with Google Calendar to manage event listing, reading, and updates.",
      "status": "active",
      "repository": {
        "url": "https://github.com/mintmcp/servers",
        "source": "github"
      },
      "version": "1.0.4",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://gcal.mintmcp.com/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "7b265ff1-5cd1-43fe-92c4-54cc6a0fd4d7",
          "versionId": "56080a46-21d6-48d2-91ff-ae1b9cb378b5",
          "publishedAt": "2025-09-09T19:49:54.013255259Z",
          "updatedAt": "2025-09-09T19:49:54.013255259Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.karanb192/reddit-mcp-buddy",
      "description": "Reddit MCP server - browse posts, search content, analyze users.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.1.1",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "reddit-mcp-buddy",
          "version": "1.1.1",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "bc98ac4e-cb60-435b-a426-f18a6b1c0076",
          "versionId": "5677b351-373d-4137-bc58-28f1ba0d105d",
          "publishedAt": "2025-09-20T10:45:00.297359799Z",
          "updatedAt": "2025-09-20T10:45:00.297359799Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/callmybot-domoticz",
      "description": "Greet anyone by name with a friendly hello. Explore the origin of 'Hello, World' for context in de…",
      "status": "active",
      "repository": {
        "url": "https://github.com/callmybot/domoticz",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@callmybot/domoticz/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "5b1fc47b-a516-4763-be65-83249e6200b5",
          "versionId": "568e596f-ed17-4d09-9812-8e3ef60e47ea",
          "publishedAt": "2025-09-18T10:31:39.650923022Z",
          "updatedAt": "2025-09-18T10:31:39.650923022Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/Nekzus-npm-sentinel-mcp",
      "description": "Provide AI-powered real-time analysis and intelligence on NPM packages, including security, depend…",
      "status": "active",
      "repository": {
        "url": "https://github.com/Nekzus/npm-sentinel-mcp",
        "source": "github"
      },
      "version": "{{VERSION}}",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@Nekzus/npm-sentinel-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "a10fab8f-cce3-42a0-b3e4-e34e2f71c41c",
          "versionId": "56e52d11-1f40-4125-97fe-abaccc9774ea",
          "publishedAt": "2025-09-20T19:40:51.557718325Z",
          "updatedAt": "2025-09-20T20:30:22.469111767Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/yuhuison-mediawiki-mcp-server-auth",
      "description": "Connect to your MediaWiki using simple credentials and manage content without OAuth. Search, read,…",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@yuhuison/mediawiki-mcp-server-auth/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "0cc8d877-87d6-432c-9e4e-26ac831de2a8",
          "versionId": "576220c7-0d51-4d02-bcc6-26c7917a366f",
          "publishedAt": "2025-09-16T11:19:24.929803426Z",
          "updatedAt": "2025-09-16T11:19:24.929803426Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.PV-Bhat/vibe-check-mcp-server",
      "description": "Metacognitive AI agent oversight: adaptive CPI interrupts for alignment, reflection and safety",
      "status": "active",
      "repository": {
        "url": "https://github.com/PV-Bhat/vibe-check-mcp-server",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "@pv-bhat/vibe-check-mcp",
          "version": "2.5.1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your API key for the service",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "YOUR_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "d1386d04-c82c-4907-ab37-8fa5ba13b21c",
          "versionId": "57df4a71-6c82-4a88-a20e-985729df0399",
          "publishedAt": "2025-09-18T12:55:25.166512222Z",
          "updatedAt": "2025-09-18T12:55:25.166512222Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.b1ff/atlassian-dc-mcp-jira",
      "description": "MCP server for Atlassian Jira Data Center - search, view, and create issues",
      "status": "active",
      "repository": {
        "url": "https://github.com/b1ff/atlassian-dc-mcp",
        "source": "github"
      },
      "version": "0.9.9",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@atlassian-dc-mcp/jira",
          "version": "0.9.9",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Jira host domain (e.g. your-instance.atlassian.net)",
              "format": "string",
              "name": "JIRA_HOST"
            },
            {
              "description": "Jira API base path (alternative to JIRA_HOST)",
              "format": "string",
              "name": "JIRA_API_BASE_PATH"
            },
            {
              "description": "Jira Personal Access Token or API token",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "JIRA_API_TOKEN"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "775c0931-3153-4181-bada-77b597b58221",
          "versionId": "580738da-9f8f-426c-a690-03e6784e2000",
          "publishedAt": "2025-09-13T13:29:18.029022573Z",
          "updatedAt": "2025-09-13T13:29:18.029022573Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.arielbk/anki-mcp",
      "description": "MCP server for integrating with Anki flashcards through conversational AI",
      "status": "active",
      "repository": {
        "url": "https://github.com/arielbk/anki-mcp",
        "source": "github"
      },
      "version": "0.3.2",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@arielbk/anki-mcp",
          "version": "0.3.2",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "a5238d4c-bc86-462b-b440-ec133bc3c680",
          "versionId": "584c8dd5-4a8c-4a9a-a8a2-2ef350e576a7",
          "publishedAt": "2025-09-11T12:16:49.682389389Z",
          "updatedAt": "2025-09-11T12:16:49.682389389Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.ycjcl868/mcp-server-fear-greed",
      "description": "An MCP server for mcp-server-fear-greed",
      "status": "active",
      "repository": {
        "url": "https://github.com/ycjcl868/mcp-server-fear-greed",
        "source": "github"
      },
      "version": "1.0.2",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mcp-server-fear-greed",
          "version": "latest",
          "transport": {
            "type": "stdio"
          }
        },
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mcp-server-fear-greed",
          "version": "latest",
          "runtimeHint": "npx",
          "transport": {
            "type": "sse",
            "url": "http://127.0.0.1:{port}/sse"
          },
          "packageArguments": [
            {
              "description": "Server port number",
              "isRequired": true,
              "format": "number",
              "default": "8089",
              "type": "named",
              "name": "port"
            }
          ]
        },
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mcp-server-fear-greed",
          "version": "latest",
          "runtimeHint": "npx",
          "transport": {
            "type": "streamable-http",
            "url": "http://127.0.0.1:{port}/mcp"
          },
          "packageArguments": [
            {
              "description": "Server port number",
              "isRequired": true,
              "format": "number",
              "default": "8089",
              "type": "named",
              "name": "port"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "44863cea-e132-4d11-a92d-e6f1d531b079",
          "versionId": "5996e50e-d147-4b9d-ab2e-c771cd7dc73d",
          "publishedAt": "2025-09-09T04:08:35.601637811Z",
          "updatedAt": "2025-09-09T04:08:35.601637811Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.mcpanalytics/analytics",
      "description": "ML statistical analysis platform for data teams",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://api.mcpanalytics.ai/auth0"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "219a2fa3-ba26-4574-9c45-44886d4ff9e8",
          "versionId": "5a8b6b36-7f28-48df-ae97-31f9a032aad5",
          "publishedAt": "2025-09-17T02:35:06.675809197Z",
          "updatedAt": "2025-09-17T02:38:18.073872009Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.grupo-avispa/dsr_mcp_server",
      "description": "An MCP server that provides tools for interacting with Deep State Representation (DSR) graphs.",
      "status": "active",
      "repository": {
        "url": "https://github.com/grupo-avispa/dsr_mcp_server",
        "source": "github"
      },
      "version": "1.0.1",
      "websiteUrl": "https://grupo-avispa.github.io/dsr_mcp_server/",
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "a7e371ee-5904-46c1-8b7f-8416cc9b5994",
          "versionId": "5b031d63-c0be-4663-aa02-43a97a488467",
          "publishedAt": "2025-09-17T10:22:23.135622672Z",
          "updatedAt": "2025-09-17T10:22:23.135622672Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.minnas/mcp",
      "description": "Share prompts and context with your team and discover community collections.",
      "status": "active",
      "repository": {
        "url": "https://github.com/sensoris/minnas-service",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "sse",
          "url": "https://api.minnas.io/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "33e1232b-4b00-46fc-9460-452cae6bdcb5",
          "versionId": "5b990a17-1e02-4112-9d51-50e0ce0bc8bd",
          "publishedAt": "2025-09-10T15:43:19.145095272Z",
          "updatedAt": "2025-09-18T16:40:24.246590894Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.b1ff/atlassian-dc-mcp-confluence",
      "description": "MCP server for Atlassian Confluence Data Center - access and manage content",
      "status": "active",
      "repository": {
        "url": "https://github.com/b1ff/atlassian-dc-mcp",
        "source": "github"
      },
      "version": "0.9.8",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@atlassian-dc-mcp/confluence",
          "version": "0.9.8",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Confluence host domain (e.g. your-instance.atlassian.net)",
              "format": "string",
              "name": "CONFLUENCE_HOST"
            },
            {
              "description": "Confluence API base path (alternative to CONFLUENCE_HOST)",
              "format": "string",
              "name": "CONFLUENCE_API_BASE_PATH"
            },
            {
              "description": "Confluence Personal Access Token or API token",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "CONFLUENCE_API_TOKEN"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "b6e7826e-d1cb-43c9-8c12-391ed0538937",
          "versionId": "5b9f4081-5b9b-4790-81e8-0e4003f87912",
          "publishedAt": "2025-09-13T13:18:50.968631388Z",
          "updatedAt": "2025-09-13T13:29:18.545408762Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.timheuer/sampledotnetmcpserver",
      "description": "Sample .NET MCP Server",
      "repository": {
        "url": "https://github.com/timheuer/sampledotnetmcpserver",
        "source": "github"
      },
      "version": "0.1.45-beta",
      "packages": [
        {
          "registryType": "nuget",
          "identifier": "TimHeuer.SampleDotnetMcpServer",
          "version": "0.1.45-beta",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "98619929-a570-46c1-8e35-4cde888731ee",
          "versionId": "5c4aade2-e5bf-4633-b09d-5c0a795b8f16",
          "publishedAt": "2025-09-18T21:01:12.606342152Z",
          "updatedAt": "2025-09-18T21:24:07.745680383Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/blbl147-xhs-mcp",
      "description": "搜索笔记、浏览首页推荐、查看笔记内容与评论，并发表你的评论。直接在工作流中与小红书内容互动，高效跟进话题。",
      "status": "active",
      "repository": {
        "url": "https://github.com/blbl147/xhs-mcp",
        "source": "github"
      },
      "version": "1.6.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@blbl147/xhs-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "3d8cb7cd-324f-44ef-a2a1-3ff6c505466a",
          "versionId": "5c567ecc-775d-4b1d-b990-1b14ec02ffe8",
          "publishedAt": "2025-09-15T03:34:24.676762516Z",
          "updatedAt": "2025-09-15T03:34:24.676762516Z",
          "isLatest": true
        }
      }
    },
    {
      "name": "io.github.jkakar/cookwith-mcp",
      "description": "AI-powered recipe generation and transformation tools by Cookwith",
      "repository": {
        "url": "https://github.com/blaideinc/cookwith-mcp",
        "source": "github"
      },
      "version": "1.0.2",
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "ad9ef150-dd99-4913-b5f4-3769ff823300",
          "versionId": "5c7b580d-19dc-45c3-957f-303efdd1f4b7",
          "publishedAt": "2025-09-12T19:27:49.340445667Z",
          "updatedAt": "2025-09-12T19:27:49.340445667Z",
          "isLatest": true
        }
      }
    },
    {
      "name": "io.github.OtherVibes/mcp-as-a-judge",
      "description": "MCP as a Judge: a behavioral MCP that strengthens AI coding assistants via explicit LLM evaluations",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.3.12",
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "e8b7a95e-e0b7-44d1-9830-1ef945eed29d",
          "versionId": "5ccbb7c4-a540-465f-8457-936802e52673",
          "publishedAt": "2025-09-18T21:45:57.092950721Z",
          "updatedAt": "2025-09-18T22:00:36.898440904Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/sasabasara-where_is_my_bus_mcp",
      "description": "Get real-time NYC bus arrivals, live vehicle locations, and service alerts. Plan trips between any…",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "2.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@sasabasara/where_is_my_bus_mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "41c56cad-c283-459d-a0cf-9b2782569a6d",
          "versionId": "5cf0cf74-f9f5-4c6d-84a2-59529a8a445a",
          "publishedAt": "2025-09-11T03:53:53.151653448Z",
          "updatedAt": "2025-09-11T03:53:53.151653448Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.ruvnet/claude-flow",
      "description": "AI orchestration with hive-mind swarms, neural networks, and 87 MCP tools for enterprise dev.",
      "status": "active",
      "repository": {
        "url": "https://github.com/ruvnet/claude-flow",
        "source": "github",
        "id": "854513237"
      },
      "version": "2.0.0-alpha.107",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "claude-flow",
          "version": "2.0.0-alpha.107",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Anthropic API key for Claude AI models",
              "format": "string",
              "isSecret": true,
              "name": "ANTHROPIC_API_KEY"
            },
            {
              "description": "Operation mode: development, production, or test",
              "format": "string",
              "name": "CLAUDE_FLOW_MODE"
            },
            {
              "description": "Path for persistent memory storage",
              "format": "string",
              "name": "CLAUDE_FLOW_MEMORY_PATH"
            },
            {
              "description": "Maximum number of concurrent agents",
              "format": "string",
              "name": "CLAUDE_FLOW_MAX_AGENTS"
            },
            {
              "description": "MCP server port",
              "format": "string",
              "name": "CLAUDE_FLOW_PORT"
            },
            {
              "description": "GitHub personal access token for repository operations",
              "format": "string",
              "isSecret": true,
              "name": "GITHUB_TOKEN"
            },
            {
              "description": "Flow Nexus cloud platform API key",
              "format": "string",
              "isSecret": true,
              "name": "FLOW_NEXUS_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "8362811b-c6cc-401d-92d9-6288295e9104",
          "versionId": "5db5281e-f8b9-49a8-bf3d-b15b911f634a",
          "publishedAt": "2025-09-10T16:59:34.218265771Z",
          "updatedAt": "2025-09-10T16:59:34.218265771Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.human4/mcp",
      "description": "Human4AI: bridging human perception with AI agents for seamless collaborative intelligence.",
      "repository": {
        "url": "https://github.com/Human4AI/MCP",
        "source": "github"
      },
      "version": "",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://api.human4.ai/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "dd67632c-f1b8-4f39-9fde-4ce82716a8e8",
          "versionId": "5ec94c6d-6b50-42af-bdd9-895a57fe7d38",
          "publishedAt": "2025-09-17T18:51:30.428936188Z",
          "updatedAt": "2025-09-17T18:51:30.428936188Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.mcpcap/mcpcap",
      "description": "An MCP server for analyzing PCAP files.",
      "status": "active",
      "repository": {
        "url": "https://github.com/mcpcap/mcpcap",
        "source": "github"
      },
      "version": "0.5.3",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "mcpcap",
          "version": "0.4.4",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "1a77c0fe-c133-468d-aad0-52c60574d088",
          "versionId": "5f655162-becc-41bc-b9f6-959e3611e138",
          "publishedAt": "2025-09-12T01:50:59.054896721Z",
          "updatedAt": "2025-09-12T01:53:51.97863881Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.variflight/variflight-mcp",
      "description": "VariFlight's official MCP server provides tools to query flight, weather, comfort, and fare data.",
      "status": "active",
      "repository": {
        "url": "https://github.com/variflight/variflight-mcp",
        "source": "github"
      },
      "version": "1.0.2",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@variflight-ai/variflight-mcp",
          "version": "1.0.1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your API key for the service",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "VARIFLIGHT_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "314291ab-1ff5-4c6b-9879-9a236748c272",
          "versionId": "5f80b1e5-5b3b-437a-99dc-c743cae8a2c7",
          "publishedAt": "2025-09-12T07:06:18.904080025Z",
          "updatedAt": "2025-09-12T07:06:18.904080025Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.tickettailor/mcp",
      "description": "Provides event organisers with tools to interact with a Ticket Tailor box office account.",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.tickettailor.ai/mcp"
        },
        {
          "type": "sse",
          "url": "https://mcp.tickettailor.ai/sse"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "b0042856-e49d-4ba6-b594-f0c09fc246a4",
          "versionId": "5fae66cd-f99b-40e6-a097-3990537cd513",
          "publishedAt": "2025-09-12T10:10:54.1887638Z",
          "updatedAt": "2025-09-12T10:10:54.1887638Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.Nekzus/npm-sentinel-mcp",
      "description": "NPM Sentinel MCP - AI-powered NPM package analysis for security, dependencies, and performance.",
      "status": "active",
      "repository": {
        "url": "https://github.com/Nekzus/npm-sentinel-mcp",
        "source": "github"
      },
      "version": "1.11.4",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@nekzus/mcp-server",
          "version": "1.11.4",
          "runtimeHint": "npx",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "364d771b-c515-4071-805d-75513fa308ce",
          "versionId": "604c10d8-566e-4183-85cd-db3778d422bb",
          "publishedAt": "2025-09-20T22:39:33.769198195Z",
          "updatedAt": "2025-09-20T22:45:23.809566997Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.koki-develop/esa-mcp-server",
      "description": "A Model Context Protocol (MCP) server for esa.io",
      "status": "active",
      "repository": {
        "url": "https://github.com/koki-develop/esa-mcp-server.git",
        "source": "github"
      },
      "version": "0.3.2",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@koki-develop/esa-mcp-server",
          "version": "0.3.2",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your esa team",
              "isRequired": true,
              "format": "string",
              "name": "ESA_TEAM"
            },
            {
              "description": "Your esa personal access token",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "ESA_ACCESS_TOKEN"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "c328b976-a7a4-4195-a736-ea281a6c5695",
          "versionId": "60eaa6b1-e687-49a0-a783-95e6033bc0c6",
          "publishedAt": "2025-09-11T00:37:16.035462939Z",
          "updatedAt": "2025-09-11T00:37:16.035462939Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/Kim-soung-won-mcp-smithery-exam",
      "description": "Craft quick, personalized greetings by name. Generate ready-to-use greeting prompts for a consiste…",
      "status": "active",
      "repository": {
        "url": "https://github.com/Kim-soung-won/mcp-smithery-exam",
        "source": "github"
      },
      "version": "1.14.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@Kim-soung-won/mcp-smithery-exam/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "cd52d87a-57d0-4124-b420-78052f5e723e",
          "versionId": "61190782-7594-4290-a23b-555aeabbf9fb",
          "publishedAt": "2025-09-16T06:32:38.498461921Z",
          "updatedAt": "2025-09-16T06:32:38.498461921Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/BadRooBot-my_test_mcp",
      "description": "Get current weather for any city and create images from your prompts. Streamline planning, reports…",
      "status": "active",
      "repository": {
        "url": "https://github.com/BadRooBot/python_mcp",
        "source": "github"
      },
      "version": "1.14.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@BadRooBot/my_test_mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "16063a2a-8092-4380-90b1-aeeab2d44b8f",
          "versionId": "62033d66-b83d-4f62-a294-a2c212cb06e6",
          "publishedAt": "2025-09-14T14:25:46.09449626Z",
          "updatedAt": "2025-09-14T14:25:46.09449626Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.waystation/jira",
      "description": "Track issues, manage projects, and streamline workflows in Jira.",
      "status": "active",
      "repository": {
        "url": "https://github.com/waystation-ai/mcp",
        "source": "github"
      },
      "version": "0.3.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://waystation.ai/jira/mcp"
        },
        {
          "type": "sse",
          "url": "https://waystation.ai/jira/mcp/sse"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "b0896fc4-bb5e-4847-a0bf-7c3f1af17911",
          "versionId": "62854e83-941a-464c-8798-2f3ae4908410",
          "publishedAt": "2025-09-09T14:46:07.210890661Z",
          "updatedAt": "2025-09-09T14:46:07.210890661Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "so.jinko/jinko-mcp",
      "description": "Jinko is a travel MCP server that provides hotel search and booking capabilities.",
      "status": "active",
      "repository": {
        "url": "https://github.com/jinkoso/jinko-mcp",
        "source": "github"
      },
      "version": "0.0.27",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp-remote.jinko.so/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "a5376b7b-ca2b-45fe-bea4-4daf76b59096",
          "versionId": "62db1a40-2f62-4fc8-97b5-b03186d26b28",
          "publishedAt": "2025-09-16T21:19:26.720481714Z",
          "updatedAt": "2025-09-16T21:19:26.720481714Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.xorrkaz/cml-mcp",
      "description": "An MCP server that provides access to common Cisco Modeling Labs (CML) operations.",
      "status": "active",
      "repository": {
        "url": "https://github.com/xorrkaz/cml-mcp",
        "source": "github"
      },
      "version": "0.8.3",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "cml-mcp",
          "version": "0.8.3",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "URL for the CML Server",
              "isRequired": true,
              "format": "string",
              "name": "CML_URL"
            },
            {
              "description": "Username for CML authentication",
              "isRequired": true,
              "format": "string",
              "name": "CML_USERNAME"
            },
            {
              "description": "Password for CML authentication",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "CML_PASSWORD"
            },
            {
              "description": "Username for authentication to devices running in CML",
              "format": "string",
              "name": "PYATS_USERNAME"
            },
            {
              "description": "Password for authentication to devices running in CML",
              "format": "string",
              "isSecret": true,
              "name": "PYATS_PASSWORD"
            },
            {
              "description": "Enable password for authentication to devices running in CML",
              "format": "string",
              "isSecret": true,
              "name": "PYATS_AUTH_PASS"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "bd0c41d1-2209-4c3f-8602-d40900053217",
          "versionId": "63412105-c23a-4c00-9651-fc721fb12539",
          "publishedAt": "2025-09-10T19:14:35.862874767Z",
          "updatedAt": "2025-09-14T14:57:56.312035195Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/BadRooBot-test_m",
      "description": "Send quick greetings, scrape website content, and generate text or images on demand. Perform web s…",
      "status": "active",
      "repository": {
        "url": "https://github.com/BadRooBot/test_m",
        "source": "github"
      },
      "version": "1.14.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@BadRooBot/test_m/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "28fbee3c-f660-49dc-bd3b-ede557b43d37",
          "versionId": "64697990-9669-4756-87bd-3897bcf4a4be",
          "publishedAt": "2025-09-20T14:41:53.77279669Z",
          "updatedAt": "2025-09-20T14:41:53.77279669Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.shawndurrani/mcp-registry",
      "description": "Search the public MCP Registry; discover servers and copy SSE URLs.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.1.1",
      "remotes": [
        {
          "type": "sse",
          "url": "https://mcp-registry.shawndurrani.ai/sse"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "195ea7e4-8fce-4575-b2c1-8b266ba67149",
          "versionId": "64bd1c4f-bbc1-4909-b49a-5d7f1d4efe33",
          "publishedAt": "2025-09-15T04:01:11.057921329Z",
          "updatedAt": "2025-09-15T04:20:53.740529471Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/zeta-chain-cli",
      "description": "Create friendly, customizable greetings for any name or audience. Break the ice in demos, onboardi…",
      "status": "active",
      "repository": {
        "url": "https://github.com/zeta-chain/cli",
        "source": "github",
        "subfolder": "src/mcp"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@zeta-chain/cli/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "2fe68c87-8503-444b-9b82-c45fdf12ccdf",
          "versionId": "6509e596-d664-4fa7-af8b-88c4e9a78b89",
          "publishedAt": "2025-09-19T16:55:43.436334161Z",
          "updatedAt": "2025-09-19T16:55:43.436334161Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.karanb192/reddit-buddy-mcp",
      "description": "Reddit MCP server - browse posts, search content, analyze users.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.6-test.4",
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "9b13d420-4d1e-424e-9af2-bc9336c12892",
          "versionId": "65e223a4-8b55-42c4-91df-7b2460240d71",
          "publishedAt": "2025-09-15T06:34:25.789411405Z",
          "updatedAt": "2025-09-15T07:27:45.804628309Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.tuananh/hyper-mcp",
      "description": "📦️ A fast, secure MCP server that extends its capabilities through WebAssembly plugins",
      "status": "active",
      "repository": {
        "url": "https://github.com/tuananh/hyper-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "oci",
          "registryBaseUrl": "https://docker.io",
          "identifier": "tuananh/hyper-mcp",
          "version": "v0.1.6",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "31e222fa-2ba8-4351-8649-6323c7982169",
          "versionId": "65e45248-15c4-4106-b54e-e25e3b0b749a",
          "publishedAt": "2025-09-18T04:56:15.144632543Z",
          "updatedAt": "2025-09-18T04:56:15.144632543Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.dynatrace-oss/Dynatrace-mcp",
      "description": "Model Context Protocol server for Dynatrace - access logs, events, metrics from Dynatrace via MCP.",
      "status": "active",
      "repository": {
        "url": "https://github.com/dynatrace-oss/Dynatrace-mcp",
        "source": "github"
      },
      "version": "0.6.0-rc.2",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@dynatrace-oss/dynatrace-mcp-server",
          "version": "0.6.0-rc.1",
          "runtimeHint": "npx",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your Dynatrace Platform Token",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "DT_PLATFORM_TOKEN"
            },
            {
              "description": "The URL of your Dynatrace environment (e.g. 'https://abc12345.apps.dynatrace.com')",
              "isRequired": true,
              "format": "string",
              "name": "DT_ENVIRONMENT"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "d7b297de-f1e3-4ea7-979e-291bff370620",
          "versionId": "660a1645-bf53-4a1f-b32e-2cf97f607827",
          "publishedAt": "2025-09-18T08:07:03.493254127Z",
          "updatedAt": "2025-09-18T08:07:03.493254127Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "md.install/try",
      "description": "Create guides as MCP servers to instruct coding agents to use your software (library, API, etc).",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.1.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://install.md/mcp/try"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "ecdd3eae-3d64-477d-acb8-26f1e523ab54",
          "versionId": "66c173f7-0916-4751-a250-eafd1433af94",
          "publishedAt": "2025-09-09T07:10:11.156679866Z",
          "updatedAt": "2025-09-09T07:10:11.156679866Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.Nekzus/npm-sentinel-mcp",
      "description": "NPM Sentinel MCP - AI-powered NPM package analysis for security, dependencies, and performance.",
      "status": "active",
      "repository": {
        "url": "https://github.com/Nekzus/npm-sentinel-mcp",
        "source": "github"
      },
      "version": "1.8.2",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@nekzus/mcp-server",
          "version": "1.8.2",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "364d771b-c515-4071-805d-75513fa308ce",
          "versionId": "66ff372d-c61e-4077-9bcb-3beb1909d367",
          "publishedAt": "2025-09-20T17:55:31.190946131Z",
          "updatedAt": "2025-09-20T19:44:08.656927794Z",
          "isLatest": false
        }
      }
    },
    {
      "name": "travel.kismet/mcp-server",
      "description": "Semantic hotel search with real-time availability and price comparison for Kismet Travel",
      "repository": {
        "url": "https://github.com/kismet-tech/kismet-travel-mcp-v2",
        "source": "github"
      },
      "version": "0.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.kismet.travel/mcp"
        },
        {
          "type": "sse",
          "url": "https://mcp.kismet.travel/sse"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "4d5090dc-7402-4f9a-ad8d-ce6e020c3263",
          "versionId": "67a1944e-1574-44f0-8165-f434ae3a141b",
          "publishedAt": "2025-09-10T22:00:17.761143256Z",
          "updatedAt": "2025-09-10T22:00:17.761143256Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.timheuer/sampledotnetmcpserver",
      "description": "Sample .NET MCP Server",
      "repository": {
        "url": "https://github.com/timheuer/sampledotnetmcpserver",
        "source": "github"
      },
      "version": "0.1.48-beta",
      "packages": [
        {
          "registryType": "nuget",
          "identifier": "TimHeuer.SampleDotnetMcpServer",
          "version": "0.1.48-beta",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "98619929-a570-46c1-8e35-4cde888731ee",
          "versionId": "67f917af-19d6-4db5-9d79-2405fd168689",
          "publishedAt": "2025-09-19T00:25:42.425081591Z",
          "updatedAt": "2025-09-19T16:03:41.846198999Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/serkan-ozal-driflyte-mcp-server",
      "description": "Discover available topics and explore up-to-date, topic-tagged web content. Search to surface the…",
      "status": "active",
      "repository": {
        "url": "https://github.com/serkan-ozal/driflyte-mcp-server",
        "source": "github"
      },
      "version": "0.0.18",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@serkan-ozal/driflyte-mcp-server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "43b05fba-bf32-46a1-aa25-56b98e372ba4",
          "versionId": "691bf732-4a78-4d55-8f3a-e0c3e9e9bb11",
          "publishedAt": "2025-09-20T15:36:42.402494299Z",
          "updatedAt": "2025-09-20T16:15:36.760974704Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.Flightradar24/fr24api-mcp",
      "description": "MCP server providing access to the Flightradar24 API for real-time and historical flight data",
      "status": "active",
      "repository": {
        "url": "https://github.com/Flightradar24/fr24api-mcp",
        "source": "github"
      },
      "version": "1.0.1",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@flightradar24/fr24api-mcp",
          "version": "1.0.1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your API key for Flightradar24 API",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "FR24_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "9c0f92fa-4fe3-453f-897a-21670c834a15",
          "versionId": "69c0381a-387b-4398-af92-294377ecb5ec",
          "publishedAt": "2025-09-09T11:42:51.309275268Z",
          "updatedAt": "2025-09-09T11:42:51.309275268Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.biodnd/agent-fin",
      "description": "Agent Fin: finance MCP server with market data tools",
      "repository": {
        "url": "https://github.com/markchiang/go-agents",
        "source": "github",
        "subfolder": "src/go_agents/agents/fin"
      },
      "version": "0.1.1",
      "remotes": [
        {
          "type": "sse",
          "url": "https://agent-fin.biodnd.com/sse"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "ff2fd401-9a5b-4e68-90c2-442e8adfce1c",
          "versionId": "69e1f94e-3424-4277-b4f9-db335884708e",
          "publishedAt": "2025-09-23T09:08:15.442472279Z",
          "updatedAt": "2025-09-23T09:47:11.445953769Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.explorium/mcp-explorium",
      "description": "Access live company and contact data from Explorium's AgentSource B2B platform.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "sse",
          "url": "https://mcp-github-registry.explorium.ai/sse"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "95e159dd-b738-4281-bd49-9935baf3a10f",
          "versionId": "6ad19c69-c96e-4efa-ad6f-4c347f477dd5",
          "publishedAt": "2025-09-16T21:06:15.352228609Z",
          "updatedAt": "2025-09-16T21:06:15.352228609Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.8beeeaaat/touchdesigner-mcp-server",
      "description": "MCP server for TouchDesigner - Control and operate TouchDesigner projects through AI agents",
      "status": "active",
      "repository": {
        "url": "https://github.com/8beeeaaat/touchdesigner-mcp.git",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "touchdesigner-mcp-server",
          "version": "1.0.0",
          "runtimeHint": "npx",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "265223d5-8458-45ba-8d4f-63111d94e781",
          "versionId": "6b47ce9b-df71-4a7c-a5d7-0184b5ed2da1",
          "publishedAt": "2025-09-17T23:25:24.290746074Z",
          "updatedAt": "2025-09-17T23:25:24.290746074Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.antvis/mcp-server-chart",
      "description": "A Model Context Protocol server for generating charts using AntV.",
      "status": "active",
      "repository": {
        "url": "https://github.com/antvis/mcp-server-chart",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@antv/mcp-server-chart",
          "version": "0.9.0-beta.1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Custom chart generation service URL for private deployment",
              "format": "string",
              "default": "https://antv-studio.alipay.com/api/gpt-vis",
              "name": "VIS_REQUEST_SERVER"
            },
            {
              "description": "Service identifier for chart generation records",
              "format": "string",
              "isSecret": true,
              "name": "SERVICE_ID"
            },
            {
              "description": "Comma-separated list of tool names to disable",
              "format": "string",
              "name": "DISABLED_TOOLS"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "48c5b241-51ea-42a7-88a7-5c92f6fd3f7a",
          "versionId": "6c33e594-e211-4c48-94d6-2b7d2d1b834d",
          "publishedAt": "2025-09-15T12:44:26.492264006Z",
          "updatedAt": "2025-09-15T12:44:26.492264006Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.himorishige/hatago-mcp-hub",
      "description": "Unified MCP Hub for managing multiple Model Context Protocol servers",
      "status": "active",
      "repository": {
        "url": "https://github.com/himorishige/hatago-mcp-hub",
        "source": "github"
      },
      "version": "0.0.14",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@himorishige/hatago-mcp-hub",
          "version": "0.0.14",
          "runtimeHint": "npx",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "27980499-f44a-453a-8b3c-6450b5c0947b",
          "versionId": "6e30b2bc-f0e2-4725-89f4-458932232c12",
          "publishedAt": "2025-09-14T07:53:18.713900781Z",
          "updatedAt": "2025-09-14T10:38:58.014142407Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.cr7258/elasticsearch-mcp-server",
      "description": "MCP server for interacting with Elasticsearch",
      "status": "active",
      "repository": {
        "url": "https://github.com/cr7258/elasticsearch-mcp-server",
        "source": "github"
      },
      "version": "2.0.12",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "elasticsearch-mcp-server",
          "version": "2.0.12",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Comma-separated list of Elasticsearch hosts (e.g., https://localhost:9200)",
              "format": "string",
              "default": "https://localhost:9200",
              "name": "ELASTICSEARCH_HOSTS"
            },
            {
              "description": "API key for Elasticsearch or Elastic Cloud authentication (recommended)",
              "format": "string",
              "isSecret": true,
              "name": "ELASTICSEARCH_API_KEY"
            },
            {
              "description": "Username for basic authentication (alternative to API key)",
              "format": "string",
              "name": "ELASTICSEARCH_USERNAME"
            },
            {
              "description": "Password for basic authentication (used with ELASTICSEARCH_USERNAME)",
              "format": "string",
              "isSecret": true,
              "name": "ELASTICSEARCH_PASSWORD"
            },
            {
              "description": "Whether to verify SSL certificates (true/false)",
              "format": "boolean",
              "default": "false",
              "name": "ELASTICSEARCH_VERIFY_CERTS"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "736191c3-915d-4643-b4c0-6dda9bef9bff",
          "versionId": "6e44548a-ef55-4303-86aa-eaf8807c7dab",
          "publishedAt": "2025-09-11T02:48:54.493070641Z",
          "updatedAt": "2025-09-11T03:19:12.600102971Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.mcpcap/mcpcap",
      "description": "An MCP server for analyzing PCAP files.",
      "status": "active",
      "repository": {
        "url": "https://github.com/mcpcap/mcpcap",
        "source": "github"
      },
      "version": "0.5.4",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "mcpcap",
          "version": "0.4.4",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "1a77c0fe-c133-468d-aad0-52c60574d088",
          "versionId": "6f1c2c5d-192b-4964-919f-d2850f383aa2",
          "publishedAt": "2025-09-12T01:53:51.972295258Z",
          "updatedAt": "2025-09-12T01:55:40.789431661Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/ctaylor86-mcp-video-download-server",
      "description": "Connect your video workflows to cloud storage. Organize and access video assets across projects wi…",
      "status": "active",
      "repository": {
        "url": "https://github.com/ctaylor86/mcp-video-download-server",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@ctaylor86/mcp-video-download-server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "3322d4c3-80c5-4fce-b75d-828287df297f",
          "versionId": "6f36c75d-1776-443a-b9d9-ed6f45dd1f88",
          "publishedAt": "2025-09-15T11:45:18.173946266Z",
          "updatedAt": "2025-09-15T11:45:18.173946266Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.JustasMonkev/mcp-accessibility-scanner",
      "description": "MCP server for automated web accessibility scanning with Playwright and Axe-core.",
      "status": "active",
      "repository": {
        "url": "https://github.com/JustasMonkev/mcp-accessibility-scanner",
        "source": "github"
      },
      "version": "1.1.1",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mcp-accessibility-scanner",
          "version": "1.1.1",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "ea401f8e-2bc1-4042-a8d0-3339441a3ace",
          "versionId": "6f372f99-089b-4cc7-a9b6-b3fcbd39074b",
          "publishedAt": "2025-09-10T15:19:19.721714851Z",
          "updatedAt": "2025-09-10T15:19:19.721714851Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.SonarSource/sonarqube-mcp-server",
      "description": "An MCP server that enables integration with SonarQube Server or Cloud for code quality and security.",
      "status": "active",
      "repository": {
        "url": "https://github.com/SonarSource/sonarqube-mcp-server",
        "source": "github"
      },
      "version": "0.0.8",
      "packages": [
        {
          "registryType": "oci",
          "registryBaseUrl": "https://docker.io",
          "identifier": "mcp/sonarqube",
          "version": "sha256:d9dc2f44f4f624bdc5fb5817abc74f6244dd40b2d03036380cd6253eff374ae5",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your SonarQube Server USER token",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "SONARQUBE_TOKEN"
            },
            {
              "description": "Your SonarQube Cloud organization key (if using SonarQube Cloud)",
              "format": "string",
              "isSecret": true,
              "name": "SONARQUBE_ORG"
            },
            {
              "description": "Your SonarQube Server URL (if using SonarQube Server)",
              "format": "string",
              "isSecret": true,
              "name": "SONARQUBE_URL"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "fa22170d-248a-4ebf-b6b4-2de326690a18",
          "versionId": "6f8eee32-6adb-46a4-815d-044ec557bd6b",
          "publishedAt": "2025-09-19T20:14:16.852443193Z",
          "updatedAt": "2025-09-19T20:14:16.852443193Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/DynamicEndpoints-powershell-exec-mcp-server",
      "description": "Execute PowerShell commands securely with controlled timeouts and input validation. Retrieve syste…",
      "status": "active",
      "repository": {
        "url": "https://github.com/DynamicEndpoints/PowerShell-Exec-MCP-Server",
        "source": "github"
      },
      "version": "1.13.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@DynamicEndpoints/powershell-exec-mcp-server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "694dc50d-499b-49bb-8b78-b44f65ab48c3",
          "versionId": "703df496-b98b-4069-94b3-077fe6c1afae",
          "publishedAt": "2025-09-11T13:54:30.703394885Z",
          "updatedAt": "2025-09-11T13:54:30.703394885Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "dev.promplate/hmr",
      "description": "Hot Module Reload (HMR) for Python with reactive programming and MCP tools",
      "repository": {
        "url": "https://github.com/promplate/pyth-on-line",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://pyth-on-line.promplate.dev/hmr/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "c3678b28-5338-4c5a-9d44-c005c700e9a6",
          "versionId": "704ccc9a-25b1-44bf-a882-59130f6b02ab",
          "publishedAt": "2025-09-17T21:07:34.315525152Z",
          "updatedAt": "2025-09-17T21:09:37.855503018Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.timheuer/sampledotnetmcpserver",
      "description": "Sample .NET MCP Server",
      "repository": {
        "url": "https://github.com/timheuer/sampledotnetmcpserver",
        "source": "github"
      },
      "version": "0.1.41-beta",
      "packages": [
        {
          "registryType": "nuget",
          "identifier": "TimHeuer.SampleDotnetMcpServer",
          "version": "0.1.41-beta",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "98619929-a570-46c1-8e35-4cde888731ee",
          "versionId": "70624f7a-0258-4257-a032-f8524353c5e4",
          "publishedAt": "2025-09-18T17:33:36.288044849Z",
          "updatedAt": "2025-09-18T21:01:12.611343565Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.falkordb/QueryWeaver",
      "description": "An MCP server for Text2SQL: transforms natural language into SQL using graph schema understanding.",
      "status": "active",
      "repository": {
        "url": "https://github.com/FalkorDB/QueryWeaver",
        "source": "github"
      },
      "version": "0.0.11",
      "packages": [
        {
          "registryType": "oci",
          "registryBaseUrl": "https://docker.io",
          "identifier": "falkordb/queryweaver",
          "version": "0.0.11",
          "transport": {
            "type": "streamable-http",
            "url": "https://localhost:5000/mcp"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "fbb3daa9-af8e-4bde-834f-6d8a0b0aad96",
          "versionId": "7128a4ba-390a-458f-b95a-46c72c7a0b81",
          "publishedAt": "2025-09-11T06:54:10.018880049Z",
          "updatedAt": "2025-09-11T06:54:10.018880049Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.dockersamples/mcp-docker-release-information",
      "description": "MCP server providing Docker Desktop release notes and security information.",
      "status": "active",
      "repository": {
        "url": "https://github.com/dockersamples/mcp-docker-release-information",
        "source": "github"
      },
      "version": "0.3.0",
      "packages": [
        {
          "registryType": "oci",
          "identifier": "dockersamples/mcp-docker-release-information",
          "version": "0.3.0",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "fe7a5c36-265f-4e7b-a3ad-ef2c4c95f241",
          "versionId": "71de5a2a-6cfb-4250-a196-f93080ecc860",
          "publishedAt": "2025-09-10T18:54:52.764339069Z",
          "updatedAt": "2025-09-10T18:54:52.764339069Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.mcpanalytics/analytics",
      "description": "MCP Analytics, searchable tools and reports with interactive HTML visualization",
      "repository": {
        "url": "https://github.com/embeddedlayers/mcp-analytics",
        "source": "github"
      },
      "version": "1.0.2",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://api.mcpanalytics.ai/auth0"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "219a2fa3-ba26-4574-9c45-44886d4ff9e8",
          "versionId": "73689205-75f4-4c3d-94ef-0bcee089fbaa",
          "publishedAt": "2025-09-17T03:00:38.248011994Z",
          "updatedAt": "2025-09-17T03:17:49.632449123Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.martymarkenson/postgres-connector",
      "description": "MCP server for querying PostgreSQL databases",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "postgres-connector",
          "version": "1.0.0",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "5fe9408b-2370-41fb-90f9-3fce961c0968",
          "versionId": "74031b6a-9c3c-4fcb-911d-ec0337b98c70",
          "publishedAt": "2025-09-22T12:15:43.369455148Z",
          "updatedAt": "2025-09-23T12:45:22.907808337Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.imbenrabi/financial-modeling-prep-mcp-server",
      "description": "MCP server for Financial Modeling Prep API with 250+ financial data tools",
      "status": "active",
      "repository": {
        "url": "https://github.com/imbenrabi/Financial-Modeling-Prep-MCP-Server",
        "source": "github",
        "id": "988409529"
      },
      "version": "2.5.1",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "financial-modeling-prep-mcp-server",
          "version": "2.5.1",
          "runtimeHint": "npx",
          "transport": {
            "type": "streamable-http",
            "url": "https://financial-modeling-prep-mcp-server-production.up.railway.app/mcp"
          },
          "packageArguments": [
            {
              "description": "Financial Modeling Prep API access token",
              "format": "string",
              "type": "named",
              "name": "--fmp-token"
            },
            {
              "description": "Port number for HTTP server mode",
              "format": "number",
              "type": "named",
              "name": "--port"
            },
            {
              "description": "Enable dynamic tool discovery mode",
              "format": "boolean",
              "type": "named",
              "name": "--dynamic-tool-discovery"
            },
            {
              "description": "Comma-separated list of tool sets to load",
              "format": "string",
              "type": "named",
              "name": "--fmp-tool-sets"
            }
          ],
          "environmentVariables": [
            {
              "description": "Financial Modeling Prep API access token",
              "format": "string",
              "isSecret": true,
              "name": "FMP_ACCESS_TOKEN"
            },
            {
              "description": "Port number for HTTP server mode",
              "format": "number",
              "name": "PORT"
            },
            {
              "description": "Enable dynamic tool discovery mode",
              "format": "boolean",
              "name": "DYNAMIC_TOOL_DISCOVERY"
            },
            {
              "description": "Comma-separated list of tool sets to load",
              "format": "string",
              "name": "FMP_TOOL_SETS"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "daa52088-0263-4021-8208-270d479bdd0a",
          "versionId": "74573935-5dac-4879-a567-9ecaa3256200",
          "publishedAt": "2025-09-11T12:44:51.14737572Z",
          "updatedAt": "2025-09-11T12:44:51.14737572Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.huoshuiai42/huoshui-pdf-translator",
      "description": "An MCP server that provides PDF translation service",
      "status": "active",
      "repository": {
        "url": "https://github.com/huoshuiai42/huoshui-pdf-translator",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "huoshui-pdf-translator",
          "version": "1.0.0",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "de9cd8bd-e47a-40f7-bb79-8b8fa227a7f4",
          "versionId": "7499cd69-6bca-46dd-9b27-57bc69cceab6",
          "publishedAt": "2025-09-11T01:31:51.354566076Z",
          "updatedAt": "2025-09-11T01:31:51.354566076Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.Lyellr88/marm-mcp-server",
      "description": "Universal MCP Server with advanced AI memory capabilities and semantic search.",
      "repository": {
        "url": "https://github.com/Lyellr88/MARM-Systems",
        "source": "github"
      },
      "version": "2.2.4",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "marm-mcp-server",
          "version": "2.2.4",
          "transport": {
            "type": "stdio"
          }
        },
        {
          "registryType": "oci",
          "identifier": "lyellr88/marm-mcp-server",
          "version": "2.2.4",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "73eda8a1-8138-43c0-ac0e-5f953d1d304e",
          "versionId": "74d60051-d76b-4b9b-9bff-33ef5a462ee6",
          "publishedAt": "2025-09-19T08:07:18.942315795Z",
          "updatedAt": "2025-09-23T06:50:35.607631842Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.timheuer/sampledotnetmcpserver",
      "description": "Sample .NET MCP Server",
      "status": "active",
      "repository": {
        "url": "https://github.com/timheuer/sampledotnetmcpserver",
        "source": "github"
      },
      "version": "0.1.56-beta-g9538a23d37",
      "packages": [
        {
          "registryType": "nuget",
          "registryBaseUrl": "https://api.nuget.org",
          "identifier": "TimHeuer.SampleDotnetMcpServer",
          "version": "0.1.56-beta-g9538a23d37",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "98619929-a570-46c1-8e35-4cde888731ee",
          "versionId": "75f4d79f-8e5a-4a80-a9e5-4f4dddac7693",
          "publishedAt": "2025-09-22T16:13:17.246045769Z",
          "updatedAt": "2025-09-22T17:04:35.121526999Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.apple-rag/mcp-server",
      "description": "Apple Developer Documentation with Semantic Search, RAG, and AI reranking for MCP clients",
      "status": "active",
      "repository": {
        "url": "https://github.com/BingoWon/apple-rag-mcp",
        "source": "github"
      },
      "version": "2.5.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.apple-rag.com",
          "headers": [
            {
              "description": "MCP Token for authentication (optional - free tier available without token)",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "803e4dc4-c3d4-43d2-b6a3-65885c8eefb4",
          "versionId": "76d4ea95-489a-41e7-8bc9-f8d3263fc913",
          "publishedAt": "2025-09-17T15:07:56.618881283Z",
          "updatedAt": "2025-09-17T15:08:38.010176491Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.tedfytw1209/mcp-server-EVEfleet",
      "description": "An MCP server that provides tools for EVE Online players to manage their fleets",
      "status": "active",
      "repository": {
        "url": "https://github.com/tedfytw1209/mcp-server-EVEfleet",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "mcp-server-evefleet",
          "version": "0.1.1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your API key for the service",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "YOUR_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "540d0e52-a6cb-4d28-9377-887eca830e5d",
          "versionId": "76d8def5-54d8-478e-93ea-cfb8a7bd827a",
          "publishedAt": "2025-09-20T02:52:57.271854833Z",
          "updatedAt": "2025-09-20T03:21:10.606324721Z",
          "isLatest": false
        }
      }
    },
    {
      "name": "io.github.Skills03/scrimba-teaching",
      "description": "Interactive programming teacher using Scrimba methodology for 10x retention",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.1",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "scrimba-teaching-mcp",
          "version": "1.0.1",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "db943fb5-a144-442c-8cc3-d76be306b58b",
          "versionId": "77461ae5-c20a-404a-a539-f453bd20b6dd",
          "publishedAt": "2025-09-21T13:59:10.857936482Z",
          "updatedAt": "2025-09-21T14:14:53.546905451Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.mermaidchart/mermaid-mcp",
      "description": "MCP server for Mermaid diagram validation and rendering",
      "status": "active",
      "repository": {
        "url": "https://github.com/Mermaid-Chart/mermaid-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.mermaidchart.com/mcp"
        },
        {
          "type": "sse",
          "url": "https://mcp.mermaidchart.com/sse"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "90e878b4-5ec0-4346-b6a8-3dcb72118aa4",
          "versionId": "77594a1a-b942-4fbc-9a03-5ef40b7bd734",
          "publishedAt": "2025-09-18T12:13:25.426328055Z",
          "updatedAt": "2025-09-18T12:13:25.426328055Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.francisco-perez-sorrosal/cv",
      "description": "An MCP server that provides access to Francisco Perez-Sorrosal's CV",
      "status": "active",
      "repository": {
        "url": "https://github.com/francisco-perez-sorrosal/cv",
        "source": "github"
      },
      "version": "0.0.1",
      "packages": [
        {
          "registryType": "mcpb",
          "identifier": "https://github.com/francisco-perez-sorrosal/cv/releases/download/v0.0.1/fps-cv-mcp-0.0.1.mcpb",
          "version": "0.0.1",
          "fileSha256": "d01ccdbbea56702215a8015ad19c12f5681b61c1fdaeaa258c88f657a6f02bd6",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "f288d19b-848a-4e88-8c31-0911f61161f5",
          "versionId": "77a61e41-6dfd-4649-be2e-e6d69f18ba9c",
          "publishedAt": "2025-09-19T03:40:16.952878792Z",
          "updatedAt": "2025-09-19T03:40:16.952878792Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/docfork-mcp",
      "description": "@latest documentation and code examples to 9000+ libraries for LLMs and AI code editors in a singl…",
      "status": "active",
      "repository": {
        "url": "https://github.com/docfork/docfork-mcp",
        "source": "github"
      },
      "version": "0.7.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@docfork/mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "3bbe0c48-41f7-4742-83d1-045499bef360",
          "versionId": "77b25763-8cce-444e-9914-939596568922",
          "publishedAt": "2025-09-12T18:25:16.049646725Z",
          "updatedAt": "2025-09-12T18:25:16.049646725Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/HARJAP-SINGH-3105-splitwise_mcp",
      "description": "Manage Splitwise balances, expenses, and groups from your workspace. Fetch friends and recent acti…",
      "status": "active",
      "repository": {
        "url": "https://github.com/HARJAP-SINGH-3105/Splitwise_MCP",
        "source": "github"
      },
      "version": "1.14.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@HARJAP-SINGH-3105/splitwise_mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "60ca3511-07eb-454b-ae71-965e370b1b9c",
          "versionId": "77bb7283-097b-4e56-8eed-46c859a4e1df",
          "publishedAt": "2025-09-18T18:42:59.47098798Z",
          "updatedAt": "2025-09-18T18:42:59.47098798Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.mintmcp/gmail",
      "description": "A MintMCP server for Gmail that lets you search, read, and draft emails and replies.",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://gmail.mintmcp.com/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "108ee330-287d-40a7-98c6-6806dbb9eeac",
          "versionId": "77c15324-cc34-417a-800f-673c2c44909b",
          "publishedAt": "2025-09-09T19:20:31.788880118Z",
          "updatedAt": "2025-09-09T19:25:39.937486339Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.yuna0x0/hackmd-mcp",
      "description": "A Model Context Protocol server for integrating HackMD's note-taking platform with AI assistants.",
      "status": "active",
      "repository": {
        "url": "https://github.com/yuna0x0/hackmd-mcp",
        "source": "github"
      },
      "version": "1.5.2",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "hackmd-mcp",
          "version": "1.5.2",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your HackMD API token for API authentication",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "HACKMD_API_TOKEN"
            },
            {
              "description": "Optional HackMD API URL, defaults to https://api.hackmd.io/v1",
              "format": "string",
              "default": "https://api.hackmd.io/v1",
              "name": "HACKMD_API_URL"
            }
          ]
        },
        {
          "registryType": "oci",
          "registryBaseUrl": "https://ghcr.io",
          "identifier": "yuna0x0/hackmd-mcp",
          "version": "1.5.2",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your HackMD API token for API authentication",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "HACKMD_API_TOKEN"
            },
            {
              "description": "Optional HackMD API URL, defaults to https://api.hackmd.io/v1",
              "format": "string",
              "default": "https://api.hackmd.io/v1",
              "name": "HACKMD_API_URL"
            }
          ]
        },
        {
          "registryType": "mcpb",
          "identifier": "https://github.com/yuna0x0/hackmd-mcp/releases/download/v1.5.2/hackmd-mcp-1.5.2.mcpb",
          "version": "1.5.2",
          "fileSha256": "85c9f9930596291f3ba9e0e5d3241cbeac4d5bcc6832845bd7c05348cc5511d5",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your HackMD API token for API authentication",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "HACKMD_API_TOKEN"
            },
            {
              "description": "Optional HackMD API URL, defaults to https://api.hackmd.io/v1",
              "format": "string",
              "default": "https://api.hackmd.io/v1",
              "name": "HACKMD_API_URL"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "e679729a-74ca-4b31-a7f5-80cddd5fa24d",
          "versionId": "7805cd90-e4d5-4446-9a63-05e56d06ae87",
          "publishedAt": "2025-09-22T00:26:57.630168405Z",
          "updatedAt": "2025-09-22T00:26:57.630168405Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://schemas.mcp.run/server.json",
      "name": "io.github.ptyagiegnyte/egnyte-remote",
      "description": "Secure integration between AI tools and Egnyte content with search, analysis, and workflow tools.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "cd8693ba-aa21-47fa-9fb7-d47f548c111d",
          "versionId": "78135aba-1c8b-4885-9d8f-bddaba502f3c",
          "publishedAt": "2025-09-23T15:04:02.675929524Z",
          "updatedAt": "2025-09-23T15:07:22.510126268Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.ryaker/appstore-connect-mcp",
      "description": "MCP server for Apple Store Connect API integration with OAuth authentication support",
      "status": "active",
      "repository": {
        "url": "https://github.com/ryaker/appstore-connect-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@ryaker/appstore-connect-mcp",
          "version": "1.0.0",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Apple App Store Connect API Key ID",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "APPLE_KEY_ID"
            },
            {
              "description": "Apple App Store Connect Issuer ID",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "APPLE_ISSUER_ID"
            },
            {
              "description": "Apple App Store Connect Private Key (base64 encoded or raw)",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "APPLE_PRIVATE_KEY"
            },
            {
              "description": "Optional: Specific Bundle ID to filter apps",
              "format": "string",
              "name": "APPLE_BUNDLE_ID"
            },
            {
              "description": "Optional: Specific App Store ID",
              "format": "string",
              "name": "APPLE_APP_STORE_ID"
            },
            {
              "description": "Enable OAuth authentication (true/false)",
              "format": "string",
              "name": "OAUTH_ENABLED"
            },
            {
              "description": "OAuth issuer URL (e.g., https://your-tenant.auth0.com)",
              "format": "string",
              "name": "OAUTH_ISSUER"
            },
            {
              "description": "OAuth audience URL",
              "format": "string",
              "name": "OAUTH_AUDIENCE"
            },
            {
              "description": "OAuth JWKS URI for token validation",
              "format": "string",
              "name": "OAUTH_JWKS_URI"
            },
            {
              "description": "Server URL for OAuth deployment",
              "format": "string",
              "name": "SERVER_URL"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "299d46c6-fbdb-47ec-936a-0ec9eec30178",
          "versionId": "783d46a6-9456-412b-bce2-2d9c5a26dada",
          "publishedAt": "2025-09-10T14:59:09.11988275Z",
          "updatedAt": "2025-09-10T14:59:09.11988275Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.formulahendry/mcp-server-mcp-registry",
      "description": "MCP Server for MCP Registry to discover and search for available MCP servers in the registry",
      "status": "active",
      "repository": {
        "url": "https://github.com/formulahendry/mcp-server-mcp-registry",
        "source": "github"
      },
      "version": "0.1.0",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mcp-server-mcp-registry",
          "version": "0.1.0",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "4cd7a1b2-8d29-4cb1-924c-f421b1638441",
          "versionId": "7881f8bf-ec94-417d-9f01-45771faaba17",
          "publishedAt": "2025-09-14T07:16:07.571743009Z",
          "updatedAt": "2025-09-14T07:16:07.571743009Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.kevincogan/demo-mcp-server",
      "description": "Demo server entry for local testing",
      "status": "active",
      "repository": {
        "url": "https://github.com/kevincogan/demo-mcp-server",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://kevincogan.github.io/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "78162e28-0738-46be-b2ef-b1c6469a1616",
          "versionId": "7991f104-ba2d-4e1a-8e47-ec97adbffe62",
          "publishedAt": "2025-09-22T11:58:38.187266164Z",
          "updatedAt": "2025-09-22T11:58:38.187266164Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/sachicali-discordmcp-suite",
      "description": "Control your Discord community: send/read messages, manage channels and forums, and handle webhook…",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.2.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@sachicali/discordmcp-suite/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "cb845f6c-2635-484a-baaa-59da84b7963d",
          "versionId": "79ba496b-2c62-45ca-8fd7-2f00f259c6d2",
          "publishedAt": "2025-09-10T18:19:06.20151699Z",
          "updatedAt": "2025-09-10T18:19:06.20151699Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/yuna0x0-hackmd-mcp",
      "description": "Interact with your HackMD notes and teams seamlessly. Manage your notes, view reading history, and…",
      "status": "active",
      "repository": {
        "url": "https://github.com/yuna0x0/hackmd-mcp",
        "source": "github"
      },
      "version": "1.5.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@yuna0x0/hackmd-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "a85afd07-0178-49e6-b962-178f24839d99",
          "versionId": "7a139c10-a255-4de8-a17a-0046fa3916ae",
          "publishedAt": "2025-09-15T03:33:42.649641272Z",
          "updatedAt": "2025-09-15T03:33:42.649641272Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.KylinMountain/web-fetch-mcp",
      "description": "MCP server for web content fetching, summarizing, comparing, and extracting information",
      "status": "active",
      "repository": {
        "url": "https://github.com/KylinMountain/web-fetch-mcp.git",
        "source": "github"
      },
      "version": "0.1.1",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "web-fetch-mcp",
          "version": "0.1.1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your Gemini API key for the service",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "GEMINI_API_KEY"
            },
            {
              "description": "Your proxy for the gemini api service",
              "format": "string",
              "name": "HTTP_PROXY"
            },
            {
              "description": "Your proxy for the gemini api service",
              "format": "string",
              "name": "HTTPS_PROXY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "278a7db1-8bd6-49bf-b4c1-e8f298feee07",
          "versionId": "7a248a2b-7b8e-4d28-82c2-89d2949190dc",
          "publishedAt": "2025-09-18T09:15:43.239066581Z",
          "updatedAt": "2025-09-18T09:15:43.239066581Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.waystation/slack",
      "description": "Send messages, access channels, and manage files in your Slack workspace.",
      "status": "active",
      "repository": {
        "url": "https://github.com/waystation-ai/mcp",
        "source": "github"
      },
      "version": "0.3.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://waystation.ai/slack/mcp"
        },
        {
          "type": "sse",
          "url": "https://waystation.ai/slack/mcp/sse"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "c202d96c-de6b-469f-ad60-2426beb1e06d",
          "versionId": "7a6efd6d-130c-4586-9399-376f11836b1a",
          "publishedAt": "2025-09-09T14:32:49.571767151Z",
          "updatedAt": "2025-09-09T14:32:49.571767151Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "trade.neglect/mcp-server",
      "description": "Full Solana DeFi coverage: launchpads, tokens, trades, and wallets, decoded at scale.",
      "status": "active",
      "repository": {
        "url": "https://github.com/609NFT/solana-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://api.neglect.trade/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "c2749ea7-87d0-4d7f-8b4e-e7d687ff6500",
          "versionId": "7aa88faa-c1df-49a2-a33e-51c79f67be2b",
          "publishedAt": "2025-09-17T22:59:34.044420412Z",
          "updatedAt": "2025-09-17T22:59:34.044420412Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.ryanbaumann/platform-ai",
      "description": "Google Maps Platform Code Assist MCP",
      "status": "active",
      "repository": {
        "url": "https://github.com/googlemaps/platform-ai",
        "source": "github"
      },
      "version": "0.2.0",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "@googlemaps/code-assist-mcp",
          "version": "0.2.0",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "cbcbdd1a-d310-451f-9843-c83edf658b11",
          "versionId": "7b66d3bf-72fa-4832-87fa-c80a60668aae",
          "publishedAt": "2025-09-10T17:56:34.808006126Z",
          "updatedAt": "2025-09-10T17:56:34.808006126Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/morosss-sdfsdf",
      "description": "Find academic papers across major sources like arXiv, PubMed, bioRxiv, and more. Download PDFs whe…",
      "status": "active",
      "repository": {
        "url": "https://github.com/morosss/sdfsdf",
        "source": "github"
      },
      "version": "1.14.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@morosss/sdfsdf/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "22b3dc31-3039-45bf-9033-10d401c10bb6",
          "versionId": "7bc56184-ea78-465a-863c-76c9fe7e48a8",
          "publishedAt": "2025-09-13T17:26:11.858999857Z",
          "updatedAt": "2025-09-13T17:26:11.858999857Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.henilcalagiya/google-sheets-mcp",
      "description": "Powerful tools for automating Google Sheets using Model Context Protocol (MCP)",
      "status": "active",
      "repository": {
        "url": "https://github.com/henilcalagiya/google-sheets-mcp",
        "source": "github"
      },
      "version": "0.1.6",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "google-sheets-mcp",
          "version": "0.1.6",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "86a4cb67-7331-47cd-8231-0068272c149d",
          "versionId": "7bf7e778-039a-4420-b96b-c614bef2f879",
          "publishedAt": "2025-09-11T05:56:37.073750488Z",
          "updatedAt": "2025-09-11T05:56:37.073750488Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.b1ff/atlassian-dc-mcp-jira",
      "description": "MCP server for Atlassian Jira Data Center - search, view, and create issues",
      "status": "active",
      "repository": {
        "url": "https://github.com/b1ff/atlassian-dc-mcp",
        "source": "github"
      },
      "version": "0.9.7",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@atlassian-dc-mcp/jira",
          "version": "0.9.7",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Jira host domain (e.g. your-instance.atlassian.net)",
              "format": "string",
              "name": "JIRA_HOST"
            },
            {
              "description": "Jira API base path (alternative to JIRA_HOST)",
              "format": "string",
              "name": "JIRA_API_BASE_PATH"
            },
            {
              "description": "Jira Personal Access Token or API token",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "JIRA_API_TOKEN"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "775c0931-3153-4181-bada-77b597b58221",
          "versionId": "7c414dfb-e7f1-4456-b296-0fd9f6cfc2ad",
          "publishedAt": "2025-09-13T13:17:32.827442866Z",
          "updatedAt": "2025-09-13T13:18:50.721430383Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/PixdataOrg-coderide",
      "description": "CodeRide eliminates the context reset cycle once and for all. Through MCP integration, it seamless…",
      "status": "active",
      "repository": {
        "url": "https://github.com/PixdataOrg/coderide-mcp",
        "source": "github"
      },
      "version": "0.9.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@PixdataOrg/coderide/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "e2724d39-2d06-4fe0-82dd-395e9bbcb659",
          "versionId": "7ddbbf27-fe42-4fc4-806c-d1859f37aa01",
          "publishedAt": "2025-09-19T14:23:37.184036464Z",
          "updatedAt": "2025-09-19T14:23:37.184036464Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.mickymultani/crypto-bytes",
      "description": "Crypto Bytes MCP Server",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.1.1",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "crypto_bytes_mcp_server",
          "version": "0.1.1",
          "runtimeHint": "python",
          "transport": {
            "type": "stdio"
          },
          "runtimeArguments": [
            {
              "value": "-m",
              "type": "positional"
            },
            {
              "value": "crypto_bytes_mcp_server",
              "type": "positional"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "09a9a6ad-fb32-4dc2-8eed-9b2efcb342b6",
          "versionId": "7e37fcc2-e95f-4f4e-a104-b7c617fbf3dc",
          "publishedAt": "2025-09-12T01:24:42.862303085Z",
          "updatedAt": "2025-09-12T01:24:42.862303085Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.neverinfamous/memory-journal-mcp",
      "description": "Developer project journal with Git context, semantic search, and 7 specialized tools.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "1a2dcbd6-9de7-47c5-8f9b-0a57ae5eafd7",
          "versionId": "7e56154c-3f71-473e-becb-e02b6a52ef36",
          "publishedAt": "2025-09-24T00:24:51.574492802Z",
          "updatedAt": "2025-09-24T00:24:51.574492802Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.balldontlie/mcp",
      "description": "Provides access to live sports data and analytics from BALLDONTLIE: The Sports API",
      "status": "active",
      "repository": {
        "url": "https://github.com/balldontlie-api/mcp",
        "source": "github"
      },
      "version": "1.1.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.balldontlie.io/mcp",
          "headers": [
            {
              "description": "API key for authentication",
              "isRequired": true,
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "d5a785f7-4fae-4365-b408-71e79c58a387",
          "versionId": "7e642fa7-6eff-4415-98fd-10328586af6a",
          "publishedAt": "2025-09-18T00:35:55.642004605Z",
          "updatedAt": "2025-09-18T00:35:55.642004605Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.gradion-ai/ipybox",
      "description": "An MCP server for sandboxed Python code execution with IPython and Docker, and file transfer.",
      "status": "active",
      "repository": {
        "url": "https://github.com/gradion-ai/ipybox",
        "source": "github"
      },
      "version": "0.6.5",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "ipybox",
          "version": "0.6.5",
          "runtimeHint": "uvx",
          "transport": {
            "type": "stdio"
          },
          "packageArguments": [
            {
              "description": "Required MCP server subcommand",
              "isRequired": true,
              "value": "mcp",
              "type": "positional"
            },
            {
              "description": "Directory allowed for host filesystem operations",
              "type": "named",
              "name": "--allowed-dir",
              "isRepeated": true,
              "valueHint": "directory_path"
            },
            {
              "description": "Domain, IP address, or CIDR range allowed for outbound network access",
              "type": "named",
              "name": "--allowed-domain",
              "isRepeated": true,
              "valueHint": "domain_or_ip"
            },
            {
              "description": "Docker image tag to use",
              "type": "named",
              "name": "--container-tag",
              "valueHint": "docker_image_tag"
            },
            {
              "description": "Environment variable for container (KEY=VALUE format)",
              "type": "named",
              "name": "--container-env-var",
              "isRepeated": true,
              "valueHint": "env_var"
            },
            {
              "description": "Path to file containing container environment variables",
              "type": "named",
              "name": "--container-env-file",
              "valueHint": "file_path"
            },
            {
              "description": "Bind mount for container (host_path:container_path format)",
              "type": "named",
              "name": "--container-bind",
              "isRepeated": true,
              "valueHint": "bind_mount"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "2310a088-c5ba-429e-84b2-82d92622023b",
          "versionId": "7ee8d214-db7f-450d-93c7-c941d8196e03",
          "publishedAt": "2025-09-14T09:27:10.026612503Z",
          "updatedAt": "2025-09-14T09:57:57.966657748Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.Skills03/scrimba-teaching",
      "description": "Interactive programming teacher using Scrimba's methodology for 10x retention",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "2.0.0",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "scrimba-teaching-mcp",
          "version": "2.0.0",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "db943fb5-a144-442c-8cc3-d76be306b58b",
          "versionId": "7f02170b-fc62-40fe-95ac-b4d99e8a4a45",
          "publishedAt": "2025-09-21T15:36:57.834955391Z",
          "updatedAt": "2025-09-21T15:36:57.834955391Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/kwp-lab-rss-reader-mcp",
      "description": "Track and browse RSS feeds with ease. Fetch the latest entries from any feed URL and extract full…",
      "status": "active",
      "repository": {
        "url": "https://github.com/kwp-lab/rss-reader-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@kwp-lab/rss-reader-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "54da6e94-f93f-428a-b621-c78b20a29b93",
          "versionId": "7f80c7e7-1906-4315-a639-9a82089224b2",
          "publishedAt": "2025-09-10T17:02:25.896522471Z",
          "updatedAt": "2025-09-10T17:02:25.896522471Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/arjunkmrm-bobo",
      "description": "Send friendly, personalized greetings on command. Explore the origin of 'Hello, World' for quick c…",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.14.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@arjunkmrm/bobo/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "5abfd15e-d3d1-41ac-9a46-a46443067f4f",
          "versionId": "7faea200-7939-40a8-a809-115c22381d04",
          "publishedAt": "2025-09-19T03:28:29.60673126Z",
          "updatedAt": "2025-09-19T03:28:29.60673126Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/BigVik193-reddit-user-mcp",
      "description": "Browse and manage Reddit posts, comments, and threads. Fetch user activity, explore hot/new/rising…",
      "status": "active",
      "repository": {
        "url": "https://github.com/BigVik193/reddit-user-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@BigVik193/reddit-user-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "e730a80f-42db-4f18-bed0-da3f63542ecf",
          "versionId": "80990c6c-9b96-4c8c-ad64-0cc19f78bc8d",
          "publishedAt": "2025-09-14T21:19:18.649080266Z",
          "updatedAt": "2025-09-14T21:19:18.649080266Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.toolprint/hypertool-mcp",
      "description": "Dynamically expose tools from proxied servers based on an Agent Persona",
      "status": "active",
      "repository": {
        "url": "https://github.com/toolprint/hypertool-mcp",
        "source": "github"
      },
      "version": "0.0.42",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@toolprint/hypertool-mcp",
          "version": "0.0.42",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "d748c549-14ef-4930-9dca-7d751b3fb73b",
          "versionId": "8177937a-2aa9-4956-8578-5e07976a1e25",
          "publishedAt": "2025-09-10T22:05:20.655840343Z",
          "updatedAt": "2025-09-10T22:05:20.655840343Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/ProfessionalWiki-mediawiki-mcp-server",
      "description": "Enable Large Language Model clients to interact seamlessly with any MediaWiki wiki. Perform action…",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.1.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@ProfessionalWiki/mediawiki-mcp-server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "a4d3d192-2156-470a-87b9-7b355c0332d2",
          "versionId": "828887dd-c8da-4819-9f83-91094f2452bb",
          "publishedAt": "2025-09-18T12:49:06.317403403Z",
          "updatedAt": "2025-09-18T12:49:06.317403403Z",
          "isLatest": true
        }
      }
    }
  ]
}