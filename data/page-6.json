{
  "servers": [
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.rbonestell/ap-mcp-server",
      "description": "Model Context Protocol (MCP) server for the Associated Press Media API",
      "status": "active",
      "repository": {
        "url": "https://github.com/rbonestell/ap-mcp-server",
        "source": "github"
      },
      "version": "1.2.6",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "ap-mcp-server",
          "version": "1.2.6",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your API key for the service",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "YOUR_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "15b5d5c8-7445-4376-a09b-d1951dccc90b",
          "versionId": "d50ffd11-3650-48ce-ba9b-6aaaea10ee1c",
          "publishedAt": "2025-09-09T14:57:28.79470971Z",
          "updatedAt": "2025-09-09T14:57:28.79470971Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.ignission/mcp",
      "description": "TikTok video data analytics and content strategy tools",
      "status": "active",
      "repository": {
        "url": "https://github.com/ignission-io/mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.ignission.io/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "83c33312-203b-4245-a0d8-94f9a453b4fa",
          "versionId": "d544bbcc-44e2-4774-b097-e886b50dd022",
          "publishedAt": "2025-09-10T16:49:33.978580087Z",
          "updatedAt": "2025-09-10T16:49:33.978580087Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/pinkpixel-dev-web-scout-mcp",
      "description": "Search the web and extract clean, readable text from webpages. Process multiple URLs at once to sp…",
      "status": "active",
      "repository": {
        "url": "https://github.com/pinkpixel-dev/web-scout-mcp",
        "source": "github"
      },
      "version": "1.5.3",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@pinkpixel-dev/web-scout-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "b81da317-d978-4f5f-9532-fa88b6a5799a",
          "versionId": "d5ec1a21-49f5-4bf7-b4e5-4bc8cd746213",
          "publishedAt": "2025-09-20T02:41:17.173406544Z",
          "updatedAt": "2025-09-20T03:20:23.189855739Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.taurgis/sfcc-dev-mcp",
      "description": "MCP server for Salesforce B2C Commerce Cloud development assistance",
      "status": "active",
      "repository": {
        "url": "https://github.com/taurgis/sfcc-dev-mcp",
        "source": "github"
      },
      "version": "1.0.14",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "sfcc-dev-mcp",
          "version": "1.0.14",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "e3c84b64-c6e1-49dc-9ca2-8909e36ac408",
          "versionId": "d76fb4c9-af0a-4588-9de3-2dd0856ba874",
          "publishedAt": "2025-09-17T07:22:50.583895618Z",
          "updatedAt": "2025-09-17T07:22:50.583895618Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/JMoak-chrono-mcp",
      "description": "Convert and compare dates and times across any timezone with flexible, locale-aware formatting. Ad…",
      "status": "active",
      "repository": {
        "url": "https://github.com/JMoak/chrono-mcp",
        "source": "github"
      },
      "version": "0.2.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@JMoak/chrono-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "b052d258-4e6b-404f-b132-835d28c1178b",
          "versionId": "d7d98bbe-95e6-491b-af67-3646314b554a",
          "publishedAt": "2025-09-17T02:23:35.312972065Z",
          "updatedAt": "2025-09-17T02:23:35.312972065Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.b1ff/atlassian-dc-mcp-bitbucket",
      "description": "MCP server for Atlassian Bitbucket Data Center - interact with repositories and code",
      "status": "active",
      "repository": {
        "url": "https://github.com/b1ff/atlassian-dc-mcp",
        "source": "github"
      },
      "version": "0.9.7",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@atlassian-dc-mcp/bitbucket",
          "version": "0.9.7",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Bitbucket host domain (e.g. your-instance.atlassian.net)",
              "format": "string",
              "name": "BITBUCKET_HOST"
            },
            {
              "description": "Bitbucket API base path (alternative to BITBUCKET_HOST)",
              "format": "string",
              "name": "BITBUCKET_API_BASE_PATH"
            },
            {
              "description": "Bitbucket Personal Access Token or API token",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "BITBUCKET_API_TOKEN"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "632bfe48-4b52-4ef4-a266-c82075a80f1a",
          "versionId": "d8bd9e48-abc3-47b9-b08b-3840ecb838c5",
          "publishedAt": "2025-09-13T13:17:33.579913494Z",
          "updatedAt": "2025-09-13T13:18:51.365304119Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.dockersamples/mcp-docker-release-information",
      "description": "MCP server providing Docker Desktop release notes and security information.",
      "status": "active",
      "repository": {
        "url": "https://github.com/dockersamples/mcp-docker-release-information",
        "source": "github"
      },
      "version": "0.2.0",
      "packages": [
        {
          "registryType": "oci",
          "identifier": "dockersamples/mcp-docker-release-information",
          "version": "0.2.0",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "fe7a5c36-265f-4e7b-a3ad-ef2c4c95f241",
          "versionId": "d8cd8b14-0050-458f-9a86-2ecd60df7b1b",
          "publishedAt": "2025-09-10T15:23:14.335332844Z",
          "updatedAt": "2025-09-10T18:54:52.777673838Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.driflyte/driflyte-mcp-server",
      "description": "Driflyte MCP server which lets AI assistants query topic-specific knowledge from web and GitHub.",
      "status": "active",
      "repository": {
        "url": "https://github.com/serkan-ozal/driflyte-mcp-server",
        "source": "github"
      },
      "version": "0.0.20",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@driflyte/mcp-server",
          "version": "0.0.20",
          "runtimeHint": "npx",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.driflyte.com/mcp"
        },
        {
          "type": "streamable-http",
          "url": "https://mcp.driflyte.com/openai"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "e4bf9279-bd3f-43d4-8c82-8b26d237876b",
          "versionId": "d9c52924-226a-4ed4-892f-c38fb1b31e71",
          "publishedAt": "2025-09-21T10:31:49.219280157Z",
          "updatedAt": "2025-09-21T10:31:49.219280157Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/jjlabsio-korea-stock-mcp",
      "description": "Search company disclosures and financial statements from the Korean market. Retrieve stock profile…",
      "status": "active",
      "repository": {
        "url": "https://github.com/jjlabsio/korea-stock-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@jjlabsio/korea-stock-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "7c15ce7e-7738-44d1-a12d-623c2f081975",
          "versionId": "db05e116-a497-44d3-8ac2-3f95abb70c8e",
          "publishedAt": "2025-09-19T09:01:49.012753599Z",
          "updatedAt": "2025-09-19T09:01:49.012753599Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.schemacrawler/schemacrawler-ai",
      "description": "Enables natural language schema queries — explore tables, keys, procedures, and get SQL help fast",
      "status": "active",
      "repository": {
        "url": "https://github.com/schemacrawler/SchemaCrawler-AI",
        "source": "github"
      },
      "version": "v16.28.1-2",
      "packages": [
        {
          "registryType": "oci",
          "registryBaseUrl": "https://docker.io",
          "identifier": "schemacrawler/schemacrawler-ai",
          "version": "v16.28.1-2",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Database user name. Can be optional depending on the database connection type.",
              "format": "string",
              "isSecret": true,
              "name": "SCHCRWLR_DATABASE_USER"
            },
            {
              "description": "Database user password. Can be optional depending on the database connection type.",
              "format": "string",
              "isSecret": true,
              "name": "SCHCRWLR_DATABASE_PASSWORD"
            },
            {
              "description": "JDBC URL for database connection. If this is provided, the server, host, port and database are not used.",
              "format": "string",
              "name": "SCHCRWLR_JDBC_URL"
            },
            {
              "description": "SchemaCrawler database plugin, for example, 'sqlserver' or 'sqlite'. Used only if the JDBC URL is not provided.",
              "format": "string",
              "name": "SCHCRWLR_SERVER"
            },
            {
              "description": "Database host. Defaults to localhost. Used only if the JDBC URL is not provided.",
              "format": "string",
              "name": "SCHCRWLR_HOST"
            },
            {
              "description": "Database port. Defaults to the default port for the server type. Used only if the JDBC URL is not provided.",
              "format": "string",
              "name": "SCHCRWLR_PORT"
            },
            {
              "description": "Database to connect to (optional). Used only if the JDBC URL is not provided.",
              "format": "string",
              "name": "SCHCRWLR_DATABASE"
            },
            {
              "description": "How much database metadata to retrieve. Values are 'minimum', 'standard', 'detailed' or 'maximum'.",
              "format": "string",
              "name": "SCHCRWLR_INFO_LEVEL"
            },
            {
              "description": "Logging verbosity level. Values are 'SEVERE', 'WARNING', 'INFO', 'CONFIG', or 'FINE'.",
              "format": "string",
              "name": "SCHCRWLR_LOG_LEVEL"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "3616e073-7a15-42cb-ae02-4c6d64c92905",
          "versionId": "db13f701-5d86-4a6f-8cb5-cf2bf7a9a182",
          "publishedAt": "2025-09-17T23:55:52.054264908Z",
          "updatedAt": "2025-09-20T13:17:42.512459486Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.apple-rag/mcp-server",
      "description": "Apple Developer Documentation with Semantic Search, RAG, and AI reranking for MCP clients",
      "status": "active",
      "repository": {
        "url": "https://github.com/BingoWon/apple-rag-mcp",
        "source": "github"
      },
      "version": "2.4.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.apple-rag.com",
          "headers": [
            {
              "description": "MCP Token for authentication (optional - free tier available without token)",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "803e4dc4-c3d4-43d2-b6a3-65885c8eefb4",
          "versionId": "dc27ec5b-37aa-4537-a0b2-3bc603e23e1d",
          "publishedAt": "2025-09-17T14:41:53.205694658Z",
          "updatedAt": "2025-09-17T14:43:14.562703229Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.yuna0x0/anilist-mcp",
      "description": "AniList MCP server for accessing AniList API data",
      "status": "active",
      "repository": {
        "url": "https://github.com/yuna0x0/anilist-mcp",
        "source": "github"
      },
      "version": "1.3.5",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "anilist-mcp",
          "version": "1.3.5",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "AniList API token for authenticated requests",
              "format": "string",
              "isSecret": true,
              "name": "ANILIST_TOKEN"
            }
          ]
        },
        {
          "registryType": "oci",
          "registryBaseUrl": "https://ghcr.io",
          "identifier": "yuna0x0/anilist-mcp",
          "version": "1.3.5",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "AniList API token for authenticated requests",
              "format": "string",
              "isSecret": true,
              "name": "ANILIST_TOKEN"
            }
          ]
        },
        {
          "registryType": "mcpb",
          "identifier": "https://github.com/yuna0x0/anilist-mcp/releases/download/v1.3.5/anilist-mcp-1.3.5.mcpb",
          "version": "1.3.5",
          "fileSha256": "40a76d2027c01ac43c592bf14a08beed7bdc4faca1d814086d11dbd664efd24a",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "AniList API token for authenticated requests",
              "format": "string",
              "isSecret": true,
              "name": "ANILIST_TOKEN"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "6bdae0fa-dff2-4ae3-82f9-03710c1ffb86",
          "versionId": "dc28d8be-ae3d-474a-8020-a9d1646d7df1",
          "publishedAt": "2025-09-21T13:14:02.752847787Z",
          "updatedAt": "2025-09-22T00:19:27.284057916Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/slhad-aha-mcp",
      "description": "A TypeScript MCP server for Home Assistant, enabling programmatic management of entities, automati…",
      "status": "active",
      "repository": {
        "url": "https://github.com/slhad/aha-mcp",
        "source": "github"
      },
      "version": "0.1.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@slhad/aha-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "cb323720-734b-4ab5-bfa8-ae77a814a1ba",
          "versionId": "dc884dc5-6e28-4fc8-9ae7-d3374c803288",
          "publishedAt": "2025-09-14T21:53:54.664725619Z",
          "updatedAt": "2025-09-14T21:53:54.664725619Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.Nekzus/npm-sentinel-mcp",
      "description": "NPM Sentinel MCP - AI-powered NPM package analysis for security, dependencies, and performance.",
      "status": "active",
      "repository": {
        "url": "https://github.com/Nekzus/npm-sentinel-mcp",
        "source": "github"
      },
      "version": "1.11.7",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@nekzus/mcp-server",
          "version": "1.11.7",
          "runtimeHint": "npx",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "364d771b-c515-4071-805d-75513fa308ce",
          "versionId": "dcca7eb4-abf1-45db-bfaa-fdbf661bb39a",
          "publishedAt": "2025-09-20T23:15:02.12284828Z",
          "updatedAt": "2025-09-20T23:23:20.783978986Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.kkjdaniel/bgg-mcp",
      "description": "BoardGameGeek MCP server providing access to BGG API data through standardized tools",
      "status": "active",
      "repository": {
        "url": "https://github.com/kkjdaniel/bgg-mcp",
        "source": "github"
      },
      "version": "1.4.0",
      "packages": [
        {
          "registryType": "oci",
          "registryBaseUrl": "https://docker.io",
          "identifier": "kdaniel/bgg-mcp",
          "version": "1.4.0",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your BoardGameGeek username for references such as ME or MY in prompts",
              "format": "string",
              "name": "BGG_USERNAME"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "5a801dcc-96ae-47cf-ae55-0be14ade1d94",
          "versionId": "dcdafe42-5317-4d98-bdaf-c66382fb0d7d",
          "publishedAt": "2025-09-16T01:51:47.021731658Z",
          "updatedAt": "2025-09-16T01:51:47.021731658Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.timheuer/sampledotnetmcpserver",
      "description": "Sample .NET MCP Server",
      "repository": {
        "url": "https://github.com/timheuer/sampledotnetmcpserver",
        "source": "github"
      },
      "version": "0.1.47-beta",
      "packages": [
        {
          "registryType": "nuget",
          "identifier": "TimHeuer.SampleDotnetMcpServer",
          "version": "0.1.47-beta",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "98619929-a570-46c1-8e35-4cde888731ee",
          "versionId": "dceeb59c-c54e-49f0-a35a-3419c47b70c8",
          "publishedAt": "2025-09-18T23:12:00.031460414Z",
          "updatedAt": "2025-09-19T00:25:42.487558694Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.mcpcap/mcpcap",
      "description": "An MCP server for analyzing PCAP files.",
      "status": "active",
      "repository": {
        "url": "https://github.com/mcpcap/mcpcap",
        "source": "github"
      },
      "version": "0.6.0",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "mcpcap",
          "version": "0.4.4",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "1a77c0fe-c133-468d-aad0-52c60574d088",
          "versionId": "ddb6c35f-5332-4c85-b347-ce592a9e7c74",
          "publishedAt": "2025-09-18T00:54:48.998144834Z",
          "updatedAt": "2025-09-18T00:54:48.998144834Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.apple-rag/mcp-server",
      "description": "Apple Developer Documentation with Semantic Search, RAG, and AI reranking for MCP clients",
      "status": "active",
      "repository": {
        "url": "https://github.com/BingoWon/apple-rag-mcp",
        "source": "github"
      },
      "version": "2.7.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.apple-rag.com",
          "headers": [
            {
              "description": "MCP Token for authentication (optional - free tier available without token)",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "803e4dc4-c3d4-43d2-b6a3-65885c8eefb4",
          "versionId": "de22b67e-a889-4f97-a88f-8ae4c35c70a7",
          "publishedAt": "2025-09-20T13:08:19.344314837Z",
          "updatedAt": "2025-09-20T13:10:26.619071892Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/MisterSandFR-supabase-mcp-selfhosted",
      "description": "Query and manage your Supabase database directly from your workspace. Execute SQL statements, brow…",
      "status": "active",
      "repository": {
        "url": "https://github.com/MisterSandFR/Supabase-MCP-SelfHosted",
        "source": "github"
      },
      "version": "1.14.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@MisterSandFR/supabase-mcp-selfhosted/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "d07e588e-585e-44b0-a8d4-4cf7ad928ba0",
          "versionId": "de316363-fd3c-4c96-ad69-221ece1f5f67",
          "publishedAt": "2025-09-16T22:41:06.53621168Z",
          "updatedAt": "2025-09-18T14:42:06.205284803Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/fitaf-ai-fitaf-ai-mcp",
      "description": "Manage workouts, nutrition, goals, and progress across the FitAF platform. Connect wearables, sync…",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@fitaf-ai/fitaf-ai-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "22efc6f6-1167-45ae-8587-89820ef8079c",
          "versionId": "dee80ba3-a6f1-4bc0-bac5-7a3c3d4c5597",
          "publishedAt": "2025-09-12T17:59:11.653728452Z",
          "updatedAt": "2025-09-12T17:59:11.653728452Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/DynamicEndpoints-m365-core-mcp",
      "description": "*Updated June 17th 2025** Manage your Microsoft 365 services effortlessly. Create and manage distr…",
      "status": "active",
      "repository": {
        "url": "https://github.com/DynamicEndpoints/m365-core-mcp",
        "source": "github"
      },
      "version": "1.1.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@DynamicEndpoints/m365-core-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "d2836d1a-c050-43b6-b896-0c426ee83103",
          "versionId": "df7356a1-098a-49c7-b14c-a816cad55978",
          "publishedAt": "2025-09-11T13:58:16.278260728Z",
          "updatedAt": "2025-09-11T13:58:16.278260728Z",
          "isLatest": true
        }
      }
    },
    {
      "name": "io.github.Skills03/scrimba-teaching",
      "description": "Interactive programming teacher using Scrimba methodology for 10x retention",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.1.0",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "scrimba-teaching-mcp",
          "version": "1.1.0",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "db943fb5-a144-442c-8cc3-d76be306b58b",
          "versionId": "df96edec-b150-4bb4-b94a-2b58b189e307",
          "publishedAt": "2025-09-21T14:14:53.542850749Z",
          "updatedAt": "2025-09-21T14:49:14.681137791Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.apple-rag/mcp-server",
      "description": "Apple Developer Documentation with Semantic Search, RAG, and AI reranking for MCP clients",
      "status": "active",
      "repository": {
        "url": "https://github.com/BingoWon/apple-rag-mcp",
        "source": "github"
      },
      "version": "2.6.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.apple-rag.com",
          "headers": [
            {
              "description": "MCP Token for authentication (optional - free tier available without token)",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "803e4dc4-c3d4-43d2-b6a3-65885c8eefb4",
          "versionId": "e07e5ac4-de2c-4e3e-bdf6-637c2cad0f34",
          "publishedAt": "2025-09-17T15:13:14.508375885Z",
          "updatedAt": "2025-09-20T13:08:19.358042928Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.lapfelix/xcodemcp",
      "description": "Control Xcode directly via JXA for build, test, debug operations with XCLogParser integration",
      "status": "active",
      "repository": {
        "url": "https://github.com/lapfelix/XcodeMCP",
        "source": "github"
      },
      "version": "2.1.4",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "xcodemcp",
          "version": "2.1.4",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "f3976f2e-7a54-4d1f-97de-4bce9fb901a2",
          "versionId": "e0f2c50b-80d7-4bfd-879e-327324b4ab9f",
          "publishedAt": "2025-09-18T03:19:27.884628282Z",
          "updatedAt": "2025-09-18T03:19:27.884628282Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/hithereiamaliff-mcp-nextcloud",
      "description": "A comprehensive Model Context Protocol (MCP) server that enables AI assistants to interact with yo…",
      "status": "active",
      "repository": {
        "url": "https://github.com/hithereiamaliff/mcp-nextcloud",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@hithereiamaliff/mcp-nextcloud/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "a5f6a595-3a74-421b-beac-721d59d609ca",
          "versionId": "e1318fc8-1005-4014-928e-5b82595773a9",
          "publishedAt": "2025-09-11T18:40:25.891251629Z",
          "updatedAt": "2025-09-11T18:40:25.891251629Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.b1ff/atlassian-dc-mcp-bitbucket",
      "description": "MCP server for Atlassian Bitbucket Data Center - interact with repositories and code",
      "status": "active",
      "repository": {
        "url": "https://github.com/b1ff/atlassian-dc-mcp",
        "source": "github"
      },
      "version": "0.9.0",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@atlassian-dc-mcp/bitbucket",
          "version": "0.9.0",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Bitbucket host domain (e.g. your-instance.atlassian.net)",
              "format": "string",
              "name": "BITBUCKET_HOST"
            },
            {
              "description": "Bitbucket API base path (alternative to BITBUCKET_HOST)",
              "format": "string",
              "name": "BITBUCKET_API_BASE_PATH"
            },
            {
              "description": "Bitbucket Personal Access Token or API token",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "BITBUCKET_API_TOKEN"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "632bfe48-4b52-4ef4-a266-c82075a80f1a",
          "versionId": "e14d142c-7c8d-4231-b0f0-0a1dbf2357b6",
          "publishedAt": "2025-09-13T11:37:20.709225306Z",
          "updatedAt": "2025-09-13T13:17:33.583855205Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/brave",
      "description": "Visit https://brave.com/search/api/ for a free API key. Search the web, local businesses, images,…",
      "status": "active",
      "repository": {
        "url": "https://github.com/brave/brave-search-mcp-server",
        "source": "github"
      },
      "version": "2.0.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/brave/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "72fbc728-2894-4a60-aaf5-44d616ddd249",
          "versionId": "e1990434-a6a0-47f9-834d-d59cee7d8efb",
          "publishedAt": "2025-09-12T14:23:41.666711561Z",
          "updatedAt": "2025-09-19T09:07:32.533724187Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.IvanMurzak/Unity-MCP",
      "description": "Make 3D games in Unity Engine with AI. MCP Server + Plugin for Unity Editor and Unity games.",
      "status": "active",
      "repository": {
        "url": "https://github.com/IvanMurzak/Unity-MCP",
        "source": "github",
        "subfolder": "Unity-MCP-Server"
      },
      "version": "0.17.1",
      "packages": [
        {
          "registryType": "oci",
          "registryBaseUrl": "https://docker.io",
          "identifier": "ivanmurzakdev/unity-mcp-server",
          "version": "0.17.1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Client -> Server <- Plugin connection port (default: 8080)",
              "format": "number",
              "name": "UNITY_MCP_PORT"
            },
            {
              "description": "Plugin -> Server connection timeout (ms) (default: 10000)",
              "format": "number",
              "name": "UNITY_MCP_PLUGIN_TIMEOUT"
            },
            {
              "description": "Client -> Server transport type: stdio or http (default: http)",
              "format": "string",
              "default": "stdio",
              "name": "UNITY_MCP_CLIENT_TRANSPORT"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "bad1e418-76f1-4842-82e7-5b036c57da38",
          "versionId": "e2adcc04-ca22-44d7-9fb6-a095d6f78bef",
          "publishedAt": "2025-09-12T11:41:26.282067118Z",
          "updatedAt": "2025-09-12T11:41:26.282067118Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "com.proxylink-mcp/mcp-server",
      "description": "ProxyLink MCP server for finding and booking home service professionals",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "2.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://proxylink-mcp.com"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "64947ce8-2b37-40dc-bb5b-5e1885fff32b",
          "versionId": "e2cfc1a9-8122-4a46-86f2-0fe3c9c658fa",
          "publishedAt": "2025-09-22T18:02:54.12402967Z",
          "updatedAt": "2025-09-22T18:02:54.12402967Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.hellocoop/admin-mcp",
      "description": "Model Context Protocol (MCP) for Hellō Admin API.",
      "status": "active",
      "repository": {
        "url": "https://github.com/hellocoop/admin-mcp",
        "source": "github"
      },
      "version": "1.5.7",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@hellocoop/admin-mcp",
          "version": "1.5.7",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "1fd23ac3-08e5-4a18-8512-fdce9c88f99f",
          "versionId": "e347bd04-44d1-4492-a2a2-657e75782db2",
          "publishedAt": "2025-09-12T15:07:41.224545153Z",
          "updatedAt": "2025-09-12T15:07:41.224545153Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.chris-schra/mcp-funnel",
      "description": "MCP proxy that aggregates multiple servers with tool filtering and customization",
      "status": "active",
      "repository": {
        "url": "https://github.com/chris-schra/mcp-funnel",
        "source": "github",
        "id": "1055597409",
        "subfolder": "packages/mcp"
      },
      "version": "0.0.7",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mcp-funnel",
          "version": "0.0.6",
          "runtimeHint": "npx",
          "transport": {
            "type": "stdio"
          },
          "runtimeArguments": [
            {
              "value": "-y",
              "type": "positional"
            }
          ],
          "packageArguments": [
            {
              "description": "Optional path to .mcp-funnel.json config file",
              "format": "filepath",
              "type": "positional",
              "valueHint": "config_path"
            }
          ],
          "environmentVariables": [
            {
              "description": "Alternative way to specify config file path",
              "format": "filepath",
              "name": "MCP_FUNNEL_CONFIG"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "1efb077e-f618-4258-8924-6e3dae14ef8b",
          "versionId": "e426621e-4c78-4d87-ac66-8cb3db910b25",
          "publishedAt": "2025-09-17T18:55:31.888644079Z",
          "updatedAt": "2025-09-17T18:55:31.888644079Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.Nekzus/npm-sentinel-mcp",
      "description": "NPM Sentinel MCP - AI-powered NPM package analysis for security, dependencies, and performance.",
      "status": "active",
      "repository": {
        "url": "https://github.com/Nekzus/npm-sentinel-mcp",
        "source": "github"
      },
      "version": "1.11.3",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@nekzus/mcp-server",
          "version": "1.11.3",
          "runtimeHint": "npx",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "364d771b-c515-4071-805d-75513fa308ce",
          "versionId": "e4cd324d-6cde-4d10-b0bc-3588786cd689",
          "publishedAt": "2025-09-20T22:27:49.327157122Z",
          "updatedAt": "2025-09-20T22:39:33.775619052Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "dev.promplate/hmr",
      "description": "Hot Module Reload (HMR) and reactive programming for Python",
      "repository": {
        "url": "https://github.com/promplate/hmr",
        "source": "github"
      },
      "version": "1.0.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://pyth-on-line.promplate.dev/hmr/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "c3678b28-5338-4c5a-9d44-c005c700e9a6",
          "versionId": "e522a3bc-d23c-4215-aacc-a5ae5c78ce5c",
          "publishedAt": "2025-09-17T21:09:37.850175971Z",
          "updatedAt": "2025-09-17T21:13:12.384420864Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.jkawamoto/mcp-bear",
      "description": "A MCP server for interacting with Bear note-taking software.",
      "status": "active",
      "repository": {
        "url": "https://github.com/jkawamoto/mcp-bear",
        "source": "github"
      },
      "version": "0.4.0",
      "packages": [
        {
          "registryType": "mcpb",
          "identifier": "https://github.com/jkawamoto/mcp-bear/releases/download/v0.4.0/mcp-bear.mcpb",
          "version": "0.4.0",
          "fileSha256": "f91b513cc189736035e090dd8217a866d4492a53ed094cc277b248890278554e",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Bear API token",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "BEAR_API_TOKEN"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "742b63fb-a3b4-410a-b681-d676967ddd16",
          "versionId": "e572696f-550b-4e2a-a60c-5e2339e26664",
          "publishedAt": "2025-09-18T02:53:22.271904561Z",
          "updatedAt": "2025-09-18T02:53:22.271904561Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.devcycle/mcp",
      "description": "DevCycle MCP server for feature flag management",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "6.0.2",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.devcycle.com/mcp"
        },
        {
          "type": "sse",
          "url": "https://mcp.devcycle.com/sse"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "6083a09f-1557-4e62-971f-ed2f0b692dd9",
          "versionId": "e6f3c597-90f1-42a4-ae3e-5a22662e6ac3",
          "publishedAt": "2025-09-17T19:06:43.362452757Z",
          "updatedAt": "2025-09-17T20:28:36.462391026Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/STUzhy-py_execute_mcp",
      "description": "Run Python code in a secure sandbox without local setup. Declare inline dependencies and execute s…",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@STUzhy/py_execute_mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "00e4c372-54d8-4246-b083-f74005cab347",
          "versionId": "e7ceccf7-af99-447d-a3a6-139b1501c5b5",
          "publishedAt": "2025-09-17T04:55:34.956438187Z",
          "updatedAt": "2025-09-17T04:55:34.956438187Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.morinokami/astro-mcp",
      "description": "MCP server to support Astro project development",
      "status": "active",
      "repository": {
        "url": "https://github.com/morinokami/astro-mcp",
        "source": "github"
      },
      "version": "0.4.2",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "astro-mcp",
          "version": "0.4.2",
          "transport": {
            "type": "sse",
            "url": "http://localhost:4321/__mcp/sse"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "565323c9-db80-4e1b-a79e-f21ae950e9a7",
          "versionId": "e7e2ee65-c9b0-436b-b709-cd909c24f25e",
          "publishedAt": "2025-09-11T17:37:51.51070648Z",
          "updatedAt": "2025-09-11T17:37:51.51070648Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/serkan-ozal-driflyte-mcp-server",
      "description": "Discover available topics and explore up-to-date, topic-tagged web content. Search to surface the…",
      "status": "active",
      "repository": {
        "url": "https://github.com/serkan-ozal/driflyte-mcp-server",
        "source": "github"
      },
      "version": "0.0.20",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@serkan-ozal/driflyte-mcp-server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "43b05fba-bf32-46a1-aa25-56b98e372ba4",
          "versionId": "e8120401-3cae-414e-a30f-7e5878b81891",
          "publishedAt": "2025-09-21T10:34:38.229628586Z",
          "updatedAt": "2025-09-21T10:34:38.229628586Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.vercel/vercel-mcp",
      "description": "An MCP server for connecting to Vercel",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.0.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.vercel.com"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "b0265c63-b74d-4e92-bd28-89fd55a29545",
          "versionId": "e82405a7-01da-410c-911e-1df13b446157",
          "publishedAt": "2025-09-17T21:18:23.966053956Z",
          "updatedAt": "2025-09-17T21:29:22.393251785Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "dev.augments/mcp",
      "description": "Augments MCP Server - A comprehensive framework documentation provider for Claude Code",
      "status": "active",
      "repository": {
        "url": "https://github.com/augmnt/augments-mcp-server",
        "source": "github"
      },
      "version": "2.0.2",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "augments-mcp-server",
          "version": "2.0.2",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.augments.dev/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "16c71293-26ff-48b3-b2aa-bb481f2f27c5",
          "versionId": "e9991cfc-6b4d-40bf-ab93-1a03567afdb4",
          "publishedAt": "2025-09-13T19:11:59.363394215Z",
          "updatedAt": "2025-09-13T19:11:59.363394215Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/CollectiveSpend-collectivespend-smithery-mcp",
      "description": "Connect CollectiveSpend with Xero to manage contacts. Retrieve, create, and update contact records…",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@CollectiveSpend/collectivespend-smithery-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "3c97db05-6df2-4da1-87d1-c5d105b6a792",
          "versionId": "e9fd4b99-b11b-481e-8b72-3a3348f0ca2b",
          "publishedAt": "2025-09-10T17:03:02.996324887Z",
          "updatedAt": "2025-09-10T17:03:02.996324887Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.xorrkaz/cml-mcp",
      "description": "An MCP server that provides access to common Cisco Modeling Labs (CML) operations.",
      "status": "active",
      "repository": {
        "url": "https://github.com/xorrkaz/cml-mcp",
        "source": "github"
      },
      "version": "0.9.0",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "cml-mcp",
          "version": "0.9.0",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "URL for the CML Server",
              "isRequired": true,
              "format": "string",
              "name": "CML_URL"
            },
            {
              "description": "Username for CML authentication",
              "isRequired": true,
              "format": "string",
              "name": "CML_USERNAME"
            },
            {
              "description": "Password for CML authentication",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "CML_PASSWORD"
            },
            {
              "description": "Username for authentication to devices running in CML",
              "format": "string",
              "name": "PYATS_USERNAME"
            },
            {
              "description": "Password for authentication to devices running in CML",
              "format": "string",
              "isSecret": true,
              "name": "PYATS_PASSWORD"
            },
            {
              "description": "Enable password for authentication to devices running in CML",
              "format": "string",
              "isSecret": true,
              "name": "PYATS_AUTH_PASS"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "bd0c41d1-2209-4c3f-8602-d40900053217",
          "versionId": "ec43553f-245d-4229-9736-71609128ad5e",
          "publishedAt": "2025-09-19T15:45:51.269663071Z",
          "updatedAt": "2025-09-20T04:37:07.84640443Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.mcpcap/mcpcap",
      "description": "An MCP server for analyzing PCAP files.",
      "status": "active",
      "repository": {
        "url": "https://github.com/mcpcap/mcpcap",
        "source": "github"
      },
      "version": "0.5.6",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "mcpcap",
          "version": "0.4.4",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "1a77c0fe-c133-468d-aad0-52c60574d088",
          "versionId": "ec8a6ef0-99ae-4c1d-a83b-23f5c793af0f",
          "publishedAt": "2025-09-12T02:03:43.941695432Z",
          "updatedAt": "2025-09-12T04:24:04.029498004Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/brave",
      "description": "Visit https://brave.com/search/api/ for a free API key. Search the web, local businesses, images,…",
      "status": "active",
      "repository": {
        "url": "https://github.com/brave/brave-search-mcp-server",
        "source": "github"
      },
      "version": "2.0.10",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/brave/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "72fbc728-2894-4a60-aaf5-44d616ddd249",
          "versionId": "ed9db06a-d7a9-483e-ba41-3483f3d2df54",
          "publishedAt": "2025-09-19T13:27:13.182402057Z",
          "updatedAt": "2025-09-19T13:27:13.182402057Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.priyankark/lighthouse-mcp",
      "description": "MCP server for Google Lighthouse performance metrics",
      "status": "active",
      "repository": {
        "url": "https://github.com/priyankark/lighthouse-mcp",
        "source": "github"
      },
      "version": "0.1.7",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "lighthouse-mcp",
          "version": "0.1.7",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "00115c3f-4478-431b-9752-a6438a66cadc",
          "versionId": "edc83edd-076f-4b36-ab2b-be86395d1486",
          "publishedAt": "2025-09-09T08:43:00.133473658Z",
          "updatedAt": "2025-09-09T10:02:57.251229005Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.indragiek/uniprof",
      "description": "Universal CPU profiler designed for humans and AI agents",
      "status": "active",
      "repository": {
        "url": "https://github.com/indragiek/uniprof",
        "source": "github"
      },
      "version": "0.3.3",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "uniprof",
          "version": "0.3.3",
          "transport": {
            "type": "stdio"
          },
          "packageArguments": [
            {
              "value": "mcp",
              "type": "positional"
            },
            {
              "value": "run",
              "type": "positional"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "8c32fd44-3a81-4866-9f18-4b7af91690e0",
          "versionId": "ef18922c-2269-41c8-9e37-770f5dc2fbb6",
          "publishedAt": "2025-09-10T15:16:37.815857232Z",
          "updatedAt": "2025-09-11T00:59:36.881548344Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.shawndurrani/mcp-registry",
      "description": "Search the public MCP Registry; discover servers and copy SSE URLs.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.1.2",
      "remotes": [
        {
          "type": "sse",
          "url": "https://mcp-registry.shawndurrani.ai/sse"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "195ea7e4-8fce-4575-b2c1-8b266ba67149",
          "versionId": "ef42161e-89a0-45f2-8daf-3c1ffb9e9eaf",
          "publishedAt": "2025-09-15T04:20:53.726246251Z",
          "updatedAt": "2025-09-16T23:02:09.747665936Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/Nekzus-npm-sentinel-mcp",
      "description": "Provide AI-powered real-time analysis and intelligence on NPM packages, including security, depend…",
      "status": "active",
      "repository": {
        "url": "https://github.com/Nekzus/npm-sentinel-mcp",
        "source": "github"
      },
      "version": "1.11.8",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@Nekzus/npm-sentinel-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "a10fab8f-cce3-42a0-b3e4-e34e2f71c41c",
          "versionId": "f037b08c-1a70-43fd-af0e-243190ffcc17",
          "publishedAt": "2025-09-20T23:26:41.744482233Z",
          "updatedAt": "2025-09-20T23:26:41.744482233Z",
          "isLatest": true
        }
      }
    },
    {
      "name": "io.github.OtherVibes/mcp-as-a-judge",
      "description": "MCP as a Judge: a behavioral MCP that strengthens AI coding assistants via explicit LLM evaluations",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.3.14",
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "e8b7a95e-e0b7-44d1-9830-1ef945eed29d",
          "versionId": "f0660545-d885-4892-a54a-f86134e56047",
          "publishedAt": "2025-09-18T22:05:09.292804039Z",
          "updatedAt": "2025-09-20T10:35:19.813843542Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/exa-labs-exa-code-mcp",
      "description": "Find open-source libraries and fetch contextual code snippets by version to accelerate development…",
      "status": "active",
      "repository": {
        "url": "https://github.com/exa-labs/exa-code-mcp",
        "source": "github"
      },
      "version": "0.0.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@exa-labs/exa-code-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "bfe1540b-c084-47f5-8a9e-ca2ea85968bc",
          "versionId": "f0cb5880-9aec-40ae-8388-97f8b63d4370",
          "publishedAt": "2025-09-17T20:44:09.235886235Z",
          "updatedAt": "2025-09-17T20:44:09.235886235Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.dubuqingfeng/gitlab-mcp-server",
      "description": "GitLab MCP (Model Context Protocol) server for AI agents",
      "status": "active",
      "repository": {
        "url": "https://github.com/dubuqingfeng/gitlab-mcp-server",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@dubuqingfeng/gitlab-mcp-server",
          "version": "2.0.12",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your API key for the service",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "YOUR_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "0afec94a-7743-46bd-8a5e-f4a0580fb0ca",
          "versionId": "f0e93c38-849c-4cb5-baee-04077afc48ea",
          "publishedAt": "2025-09-11T09:34:47.415483452Z",
          "updatedAt": "2025-09-11T09:41:43.917858507Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.zenml-io/mcp-zenml",
      "description": "MCP server for ZenML - browse stacks, pipelines, runs, artifacts & trigger pipeline runs via API",
      "status": "active",
      "repository": {
        "url": "https://github.com/zenml-io/mcp-zenml",
        "source": "github"
      },
      "version": "1.0.3",
      "packages": [
        {
          "registryType": "oci",
          "registryBaseUrl": "https://docker.io",
          "identifier": "zenmldocker/mcp-zenml",
          "version": "1.0.3",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Base URL of your ZenML server (e.g., https://<workspace-id>-zenml.cloudinfra.zenml.io).",
              "isRequired": true,
              "format": "string",
              "name": "ZENML_STORE_URL"
            },
            {
              "description": "API key used to authenticate with your ZenML server (ideally a service account key).",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "ZENML_STORE_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "6d64bd95-ee87-476c-8bc3-a36e65cfcee2",
          "versionId": "f15adbff-4318-4751-acbe-8361dfb17f1f",
          "publishedAt": "2025-09-10T13:56:29.446726607Z",
          "updatedAt": "2025-09-18T20:48:56.233589049Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.mcpcap/mcpcap",
      "description": "An MCP server for analyzing PCAP files.",
      "status": "active",
      "repository": {
        "url": "https://github.com/mcpcap/mcpcap",
        "source": "github"
      },
      "version": "0.5.2",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "mcpcap",
          "version": "0.4.4",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "1a77c0fe-c133-468d-aad0-52c60574d088",
          "versionId": "f181c9a0-74c1-44b2-841c-fa0561074d1d",
          "publishedAt": "2025-09-12T01:41:27.474864739Z",
          "updatedAt": "2025-09-12T01:50:59.06860546Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.huoshuiai42/huoshui-file-converter",
      "description": "An MCP server that provides document format conversion",
      "status": "active",
      "repository": {
        "url": "https://github.com/huoshuiai42/huoshui-file-converter",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "huoshui-file-converter",
          "version": "1.0.0",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your workding directory",
              "format": "string",
              "name": "HUOSHUI_WORKING_DIR"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "22ffe7fe-3f25-49a2-a109-11d8b51227b7",
          "versionId": "f1820b4a-0c7f-4198-b15c-bbc316af3429",
          "publishedAt": "2025-09-11T01:34:28.334413427Z",
          "updatedAt": "2025-09-11T01:34:28.334413427Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.macuse-app/macuse",
      "description": "Bridges AI assistants with native macOS functionality through the Model Context Protocol (MCP).",
      "status": "active",
      "repository": {
        "url": "https://github.com/macuse-app/macuse",
        "source": "github"
      },
      "version": "1.0.1",
      "packages": [
        {
          "registryType": "mcpb",
          "identifier": "https://github.com/macuse-app/macuse/releases/download/v1.0.1/macuse-1.0.1.mcpb",
          "version": "1.0.1",
          "fileSha256": "9e3444c567c66a57d15657dca437dbdb9560d16f00e6d4ac3d95ea795b9b482e",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "a455293b-e253-41df-b711-6569dc5eb957",
          "versionId": "f243a724-e41c-4616-887e-93520187cf34",
          "publishedAt": "2025-09-18T05:18:13.769559Z",
          "updatedAt": "2025-09-18T05:18:13.769559Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.apple-rag/mcp-server",
      "description": "Apple Developer Documentation with Semantic Search, RAG, and AI reranking for MCP clients",
      "status": "active",
      "repository": {
        "url": "https://github.com/BingoWon/apple-rag-mcp",
        "source": "github"
      },
      "version": "2.5.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.apple-rag.com",
          "headers": [
            {
              "description": "MCP Token for authentication (optional - free tier available without token)",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "803e4dc4-c3d4-43d2-b6a3-65885c8eefb4",
          "versionId": "f2550c4a-7aeb-4af9-93c5-8e92b0c7087e",
          "publishedAt": "2025-09-17T15:08:38.002759406Z",
          "updatedAt": "2025-09-17T15:11:26.214637982Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/kkjdaniel-bgg-mcp",
      "description": "BGG MCP provides access to the BoardGameGeek API through the Model Context Protocol, enabling retr…",
      "status": "active",
      "repository": {
        "url": "https://github.com/kkjdaniel/bgg-mcp",
        "source": "github"
      },
      "version": "1.3.2",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@kkjdaniel/bgg-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "6ddafd3a-8aa7-4df5-ae80-3f94e86d2d05",
          "versionId": "f25aa5fa-263a-4662-885d-35f2ea58fcb5",
          "publishedAt": "2025-09-16T00:14:29.642755949Z",
          "updatedAt": "2025-09-16T00:14:29.642755949Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.mintmcp/gmail",
      "description": "A MCP server for Gmail that lets you search, read, and draft emails and replies.",
      "status": "active",
      "repository": {
        "url": "https://github.com/mintmcp/servers",
        "source": "github"
      },
      "version": "1.0.4",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://gmail.mintmcp.com/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "108ee330-287d-40a7-98c6-6806dbb9eeac",
          "versionId": "f2712336-6ab8-4d62-8e75-63b1da189866",
          "publishedAt": "2025-09-09T19:49:24.175897882Z",
          "updatedAt": "2025-09-09T19:53:13.48979916Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.shawndurrani/mcp-merchant",
      "description": "Search-only commerce MCP server backed by Stripe (test)",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.1.3",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mcp-merchant",
          "version": "0.1.3",
          "runtimeHint": "npx",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Stripe secret key (test mode)",
              "isRequired": true,
              "isSecret": true,
              "name": "STRIPE_SECRET_KEY"
            },
            {
              "description": "Max products to cache",
              "default": "100",
              "name": "PRODUCT_LIMIT"
            },
            {
              "description": "Catalog refresh interval in seconds",
              "default": "600",
              "name": "REFRESH_INTERVAL_SEC"
            }
          ]
        }
      ],
      "remotes": [
        {
          "type": "sse",
          "url": "https://mcp.shawndurrani.ai/sse"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "8681fb6c-725d-4896-b15e-1088ffe74743",
          "versionId": "f307b5a8-fd0a-4cf8-ac0a-8bfcecf9d6d4",
          "publishedAt": "2025-09-16T22:54:28.454307047Z",
          "updatedAt": "2025-09-16T22:54:28.454307047Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/blacklotusdev8-test_m",
      "description": "Greet anyone by name with a friendly hello. Scrape webpages to extract content for quick reference…",
      "status": "active",
      "repository": {
        "url": "https://github.com/blacklotusdev8/test_m",
        "source": "github"
      },
      "version": "1.14.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@blacklotusdev8/test_m/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "49357ee9-f3b2-4703-a64f-a12f563a334b",
          "versionId": "f3238a01-c19e-43a2-8bfb-de3d3878c18c",
          "publishedAt": "2025-09-19T19:12:16.602435454Z",
          "updatedAt": "2025-09-19T19:12:16.602435454Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.imbenrabi/financial-modeling-prep-mcp-server",
      "description": "MCP server for Financial Modeling Prep API with 250+ financial data tools",
      "status": "active",
      "repository": {
        "url": "https://github.com/imbenrabi/Financial-Modeling-Prep-MCP-Server",
        "source": "github",
        "id": "988409529"
      },
      "version": "2.4.0",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "financial-modeling-prep-mcp-server",
          "version": "2.4.0",
          "runtimeHint": "npx",
          "transport": {
            "type": "streamable-http",
            "url": "https://financial-modeling-prep-mcp-server-production.up.railway.app/mcp"
          },
          "packageArguments": [
            {
              "description": "Financial Modeling Prep API access token",
              "format": "string",
              "type": "named",
              "name": "--fmp-token"
            },
            {
              "description": "Port number for HTTP server mode",
              "format": "number",
              "type": "named",
              "name": "--port"
            },
            {
              "description": "Enable dynamic tool discovery mode",
              "format": "boolean",
              "type": "named",
              "name": "--dynamic-tool-discovery"
            },
            {
              "description": "Comma-separated list of tool sets to load",
              "format": "string",
              "type": "named",
              "name": "--fmp-tool-sets"
            }
          ],
          "environmentVariables": [
            {
              "description": "Financial Modeling Prep API access token",
              "format": "string",
              "isSecret": true,
              "name": "FMP_ACCESS_TOKEN"
            },
            {
              "description": "Port number for HTTP server mode",
              "format": "number",
              "name": "PORT"
            },
            {
              "description": "Enable dynamic tool discovery mode",
              "format": "boolean",
              "name": "DYNAMIC_TOOL_DISCOVERY"
            },
            {
              "description": "Comma-separated list of tool sets to load",
              "format": "string",
              "name": "FMP_TOOL_SETS"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "daa52088-0263-4021-8208-270d479bdd0a",
          "versionId": "f6b2f17e-e856-4a38-ae94-bba78d25fbb7",
          "publishedAt": "2025-09-11T08:26:14.672007798Z",
          "updatedAt": "2025-09-11T12:44:51.220271633Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.b1ff/atlassian-dc-mcp-jira",
      "description": "MCP server for Atlassian Jira Data Center - search, view, and create issues",
      "status": "active",
      "repository": {
        "url": "https://github.com/b1ff/atlassian-dc-mcp",
        "source": "github"
      },
      "version": "0.9.8",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@atlassian-dc-mcp/jira",
          "version": "0.9.8",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Jira host domain (e.g. your-instance.atlassian.net)",
              "format": "string",
              "name": "JIRA_HOST"
            },
            {
              "description": "Jira API base path (alternative to JIRA_HOST)",
              "format": "string",
              "name": "JIRA_API_BASE_PATH"
            },
            {
              "description": "Jira Personal Access Token or API token",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "JIRA_API_TOKEN"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "775c0931-3153-4181-bada-77b597b58221",
          "versionId": "f7dc49e8-f522-49ef-8c83-ac14a51f5989",
          "publishedAt": "2025-09-13T13:18:50.716321679Z",
          "updatedAt": "2025-09-13T13:29:18.034212935Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.nickzren/opentargets",
      "description": "Open Targets MCP server for targets, diseases, drugs, variants, and evidence",
      "status": "active",
      "repository": {
        "url": "https://github.com/nickzren/opentargets-mcp",
        "source": "github",
        "id": "984363568"
      },
      "version": "0.2.0",
      "websiteUrl": "https://nickzren.github.io/opentargets-mcp/",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "opentargets-mcp",
          "version": "0.2.0",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "224e7593-863e-4ec9-8b77-ef5b6b011250",
          "versionId": "f89004b6-43a1-45b6-9f72-ccecbe1cbbc3",
          "publishedAt": "2025-09-22T16:27:58.086742779Z",
          "updatedAt": "2025-09-22T16:27:58.086742779Z",
          "isLatest": true
        }
      }
    },
    {
      "name": "io.github.neilberkman/clippy",
      "description": "Copy AI-generated content to macOS clipboard. Handles text, code, files & recent downloads.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "",
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "0a5af804-e2d3-4122-8dae-9cee2fc636a8",
          "versionId": "f8aa37fe-f542-4ad6-9534-e4203d142f08",
          "publishedAt": "2025-09-20T18:52:02.074995978Z",
          "updatedAt": "2025-09-20T18:52:02.074995978Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.yifancong/rsdoctor",
      "description": "An MCP server that provides build analysis and optimization recommendations for Rspack projects.",
      "status": "active",
      "repository": {
        "url": "https://github.com/web-infra-dev/rsdoctor",
        "source": "github"
      },
      "version": "0.1.0",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@rsdoctor/mcp-server",
          "version": "0.1.2-beta.0",
          "runtimeHint": "node",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "7cf63a0d-c3fd-45df-ac2b-90336369660c",
          "versionId": "f98c9041-8158-4e97-92a7-f511e1a41bfb",
          "publishedAt": "2025-09-22T11:06:11.810760737Z",
          "updatedAt": "2025-09-22T11:06:11.810760737Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.rfdez/pvpc-mcp-server",
      "description": "Retrieve daily PVPC electricity tariffs for 2.0 TD consumers, published by Red Eléctrica.",
      "status": "active",
      "repository": {
        "url": "https://github.com/rfdez/pvpc-mcp-server",
        "source": "github"
      },
      "version": "3.2.3",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@rfdez/pvpc-mcp-server",
          "version": "3.2.3",
          "runtimeHint": "npx",
          "transport": {
            "type": "stdio"
          },
          "packageArguments": [
            {
              "description": "Use stdio transport type for MCP server",
              "value": "stdio",
              "type": "named",
              "name": "--transport"
            },
            {
              "description": "ESIOS API key for authentication",
              "isRequired": true,
              "isSecret": true,
              "type": "named",
              "name": "--api-key"
            }
          ]
        },
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@rfdez/pvpc-mcp-server",
          "version": "3.2.3",
          "runtimeHint": "npx",
          "transport": {
            "type": "streamable-http",
            "url": "http://127.0.0.1:8080/mcp",
            "headers": [
              {
                "description": "ESIOS API key for authentication",
                "isRequired": true,
                "isSecret": true,
                "name": "X-API-Key"
              }
            ]
          },
          "packageArguments": [
            {
              "description": "Use HTTP transport type for MCP server",
              "value": "http",
              "type": "named",
              "name": "--transport"
            },
            {
              "description": "Port for HTTP transport",
              "default": "8080",
              "type": "named",
              "name": "--port"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "9c2d3dad-6914-4484-b9e2-2393f397e1cf",
          "versionId": "f9fca6a5-fbdc-4dbe-b28c-ff352d059d7b",
          "publishedAt": "2025-09-10T16:53:23.880648467Z",
          "updatedAt": "2025-09-10T16:53:23.880648467Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/brave",
      "description": "Visit https://brave.com/search/api/ for a free API key. Search the web, local businesses, images,…",
      "status": "active",
      "repository": {
        "url": "https://github.com/brave/brave-search-mcp-server",
        "source": "github"
      },
      "version": "2.0.3",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/brave/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "72fbc728-2894-4a60-aaf5-44d616ddd249",
          "versionId": "fa09d041-465b-4104-9854-cd897040806d",
          "publishedAt": "2025-09-19T09:07:32.526636285Z",
          "updatedAt": "2025-09-19T09:19:58.337669647Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.1stdibs/1stDibs",
      "description": "MCP server for browsing and searching items on 1stDibs marketplace.",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://www.1stdibs.com/soa/mcp/"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "dc63a098-92a2-4d21-b7ce-d5cc85d3cc39",
          "versionId": "fa2dcb23-c912-4aba-8296-c65162809bbf",
          "publishedAt": "2025-09-16T23:01:22.451131743Z",
          "updatedAt": "2025-09-16T23:01:22.451131743Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.cmpxchg16/mcp-ethical-hacking",
      "description": "An MCP server that provides LinkedIn & Reddit data",
      "status": "active",
      "repository": {
        "url": "https://github.com/cmpxchg16/mcp-ethical-hacking",
        "source": "github"
      },
      "version": "1.2.0",
      "packages": [
        {
          "registryType": "mcpb",
          "identifier": "https://github.com/cmpxchg16/mcp-ethical-hacking/releases/download/v1.0.0/server.mcpb",
          "version": "1.2.0",
          "fileSha256": "294365cbf53a602df093e3757e6a31cca6c50dd6af343fefa4a528ab869d24a0",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "ebe9848e-d092-4007-88bc-09b67823681b",
          "versionId": "fa434ba2-0704-4420-859e-2a5aa9fa14d9",
          "publishedAt": "2025-09-15T12:55:00.133512333Z",
          "updatedAt": "2025-09-15T12:56:52.963416323Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "app.getdialer/dialer",
      "description": "An MCP server that provides lets you make outbound phone calls using your own phone number",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://getdialer.app/mcp"
        },
        {
          "type": "sse",
          "url": "https://getdialer.app/sse"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "c8eaffb8-57a8-4d66-8a32-fa6e25f5bcb9",
          "versionId": "faa26cb9-3aad-415e-aece-f715fff5fe5e",
          "publishedAt": "2025-09-09T00:16:49.107842808Z",
          "updatedAt": "2025-09-09T00:16:49.107842808Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/smithery-ai-cookbook-python-quickstart",
      "description": "A simple MCP server built with FastMCP and python",
      "status": "active",
      "repository": {
        "url": "https://github.com/smithery-ai/smithery-cookbook",
        "source": "github",
        "subfolder": "servers/python/quickstart"
      },
      "version": "1.13.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@smithery-ai/cookbook-python-quickstart/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "5706bb0e-05a5-41cf-84d4-f2d1f88c7e0e",
          "versionId": "fb85b1a6-168c-4775-ae6b-2ab63c5506c2",
          "publishedAt": "2025-09-10T16:07:02.461934808Z",
          "updatedAt": "2025-09-10T16:07:02.461934808Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.notion/mcp",
      "description": "Official Notion MCP server",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.notion.com/mcp"
        },
        {
          "type": "sse",
          "url": "https://mcp.notion.com/sse"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "18044703-a51d-4947-9112-9aff34f8f7a2",
          "versionId": "fb955a62-b750-4145-926a-824b47307d13",
          "publishedAt": "2025-09-11T22:25:50.737872147Z",
          "updatedAt": "2025-09-11T22:25:50.737872147Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.dubuqingfeng/gitlab-mcp-server",
      "description": "GitLab MCP (Model Context Protocol) server for AI agents",
      "status": "active",
      "repository": {
        "url": "https://github.com/dubuqingfeng/gitlab-mcp-server",
        "source": "github"
      },
      "version": "1.0.1",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@dubuqingfeng/gitlab-mcp-server",
          "version": "2.0.12",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your API key for the gitlab",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "GITLAB_TOKEN"
            },
            {
              "description": "Gitlab URL",
              "format": "string",
              "name": "GITLAB_URL"
            },
            {
              "description": "Lark 机器人 Webhook URL",
              "format": "string",
              "isSecret": true,
              "name": "LARK_WEBHOOK_URL"
            },
            {
              "description": "可选：签名密钥（如果机器人启用了签名验证）",
              "format": "string",
              "isSecret": true,
              "name": "LARK_SECRET_KEY"
            },
            {
              "description": "可选：是否启用通知，默认为 true",
              "format": "boolean",
              "name": "LARK_ENABLE_NOTIFICATION"
            },
            {
              "description": "可选：通知模式 - gitlab_only(仅GitLab)、lark_only(仅Lark)、both(两者都发)，默认为 gitlab_only",
              "format": "string",
              "name": "GITLAB_NOTE_MODE"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "0afec94a-7743-46bd-8a5e-f4a0580fb0ca",
          "versionId": "fbae7b01-59cc-4777-a9e6-22b171703fe7",
          "publishedAt": "2025-09-11T09:41:43.896888413Z",
          "updatedAt": "2025-09-11T09:41:43.896888413Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.SnowLeopard-AI/bigquery-mcp",
      "description": "A SnowLeopardAI-managed MCP server that provides access to Google BigQuery data.",
      "status": "active",
      "repository": {
        "url": "https://github.com/SnowLeopard-AI/bigquery-mcp",
        "source": "github"
      },
      "version": "0.1.0",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "sl-bigquery-mcp",
          "version": "0.1.8",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "891420b0-24b0-4cce-86d4-5ac33d255aa4",
          "versionId": "fc1a3aad-1f9b-4a33-9a96-3f19509d4419",
          "publishedAt": "2025-09-15T22:35:28.327511086Z",
          "updatedAt": "2025-09-15T22:35:28.327511086Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.mcpcap/mcpcap",
      "description": "An MCP server for analyzing PCAP files.",
      "status": "active",
      "repository": {
        "url": "https://github.com/mcpcap/mcpcap",
        "source": "github"
      },
      "version": "0.4.4",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "mcpcap",
          "version": "0.4.4",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "1a77c0fe-c133-468d-aad0-52c60574d088",
          "versionId": "fc7be6d0-3fb9-4f63-9858-86a62c456a15",
          "publishedAt": "2025-09-11T01:06:15.722886488Z",
          "updatedAt": "2025-09-12T01:41:27.484537348Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/kesslerio-attio-mcp-server",
      "description": "Enable AI assistants to interact directly with your Attio CRM data through natural language querie…",
      "status": "active",
      "repository": {
        "url": "https://github.com/kesslerio/attio-mcp-server",
        "source": "github"
      },
      "version": "0.2.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@kesslerio/attio-mcp-server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "c51d51d3-40b1-40ff-bf9f-d7564e1c3872",
          "versionId": "fca4551c-4c86-485f-a548-9263a147effb",
          "publishedAt": "2025-09-10T17:52:23.110357722Z",
          "updatedAt": "2025-09-10T17:52:23.110357722Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.devopness.mcp/server",
      "description": "Devopness MCP server for DevOps happiness! Empower AI Agents to deploy apps and infra, to any cloud.",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.devopness.com/mcp/"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "bc4ee5b3-ef7a-4c6b-b1b0-f7b248a65512",
          "versionId": "fcb40418-d81d-40ce-9726-7ca47af47ac1",
          "publishedAt": "2025-09-18T17:29:14.559764254Z",
          "updatedAt": "2025-09-18T17:29:14.559764254Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.Synclub-tech/synclub-dxt",
      "description": "SynClub MCP Server for AI-powered comic creation with script generation and image tools",
      "status": "active",
      "repository": {
        "url": "https://github.com/Synclub-tech/Synclub-dxt",
        "source": "github"
      },
      "version": "0.6.0",
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "321cc940-43bb-4872-bb8f-69113a2801c0",
          "versionId": "fcbfdd48-ec43-41b0-b8b0-ed36c8d0436d",
          "publishedAt": "2025-09-20T11:20:51.672215792Z",
          "updatedAt": "2025-09-20T11:20:51.672215792Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.r-huijts/strava-mcp",
      "description": "MCP server for accessing Strava API",
      "status": "active",
      "repository": {
        "url": "https://github.com/r-huijts/strava-mcp",
        "source": "github"
      },
      "version": "1.0.1",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "strava-mcp-server",
          "version": "1.0.1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your Strava API client ID",
              "isRequired": true,
              "format": "string",
              "name": "STRAVA_CLIENT_ID"
            },
            {
              "description": "Your Strava API client secret",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "STRAVA_CLIENT_SECRET"
            },
            {
              "description": "Your Strava API access token",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "STRAVA_ACCESS_TOKEN"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "487c1cfc-fc8c-4487-94ba-68abf09a0e90",
          "versionId": "fce998d0-3374-49ad-ab92-a1dce675be47",
          "publishedAt": "2025-09-17T13:52:27.488577467Z",
          "updatedAt": "2025-09-17T13:52:27.488577467Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/CryptoCultCurt-appfolio-mcp-server",
      "description": "Provide seamless access to Appfolio Property Manager Reporting API through a standardized MCP serv…",
      "status": "active",
      "repository": {
        "url": "https://github.com/CryptoCultCurt/appfolio-mcp-server",
        "source": "github"
      },
      "version": "1.0.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@CryptoCultCurt/appfolio-mcp-server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "0f143383-471c-4fcd-87b3-6e81e77f7873",
          "versionId": "fd5f5556-3f1d-46a1-8b5d-90f1f3d66078",
          "publishedAt": "2025-09-11T00:42:54.55597845Z",
          "updatedAt": "2025-09-11T00:42:54.55597845Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.smartbear/smartbear-mcp",
      "description": "MCP server for AI access to SmartBear tools, including BugSnag, Reflect, API Hub, PactFlow.",
      "status": "active",
      "repository": {
        "url": "https://github.com/SmartBear/smartbear-mcp",
        "source": "github"
      },
      "version": "0.6.0",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@smartbear/mcp",
          "version": "0.6.0",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "BugSnag auth token. Leave empty to disable BugSnag tools. Learn more: https://developer.smartbear.com/smartbear-mcp/docs/bugsnag-integration",
              "isSecret": true,
              "name": "BUGSNAG_AUTH_TOKEN"
            },
            {
              "description": "BugSnag project API key (optional; narrows interactions to a single project). Learn more: https://developer.smartbear.com/smartbear-mcp/docs/bugsnag-integration",
              "name": "BUGSNAG_PROJECT_API_KEY"
            },
            {
              "description": "Reflect API token. Leave empty to disable Reflect tools. Learn more: https://developer.smartbear.com/smartbear-mcp/docs/test-hub-integration",
              "isSecret": true,
              "name": "REFLECT_API_TOKEN"
            },
            {
              "description": "API Hub API key. Leave empty to disable API Hub tools. Learn more: https://developer.smartbear.com/smartbear-mcp/docs/api-hub-integration",
              "isSecret": true,
              "name": "API_HUB_API_KEY"
            },
            {
              "description": "PactFlow/Pact Broker base URL. Leave empty to disable Pact tools. Learn more: https://developer.smartbear.com/smartbear-mcp/docs/contract-testing-with-pactflow",
              "name": "PACT_BROKER_BASE_URL"
            },
            {
              "description": "PactFlow authentication token. Learn more: https://developer.smartbear.com/smartbear-mcp/docs/contract-testing-with-pactflow",
              "isSecret": true,
              "name": "PACT_BROKER_TOKEN"
            },
            {
              "description": "Pact Broker username (alternative to token). Learn more: https://developer.smartbear.com/smartbear-mcp/docs/contract-testing-with-pactflow",
              "name": "PACT_BROKER_USERNAME"
            },
            {
              "description": "Pact Broker password (alternative to token). Learn more: https://developer.smartbear.com/smartbear-mcp/docs/contract-testing-with-pactflow",
              "isSecret": true,
              "name": "PACT_BROKER_PASSWORD"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "6a483f7b-2acb-49e3-82ab-1a8ea387be43",
          "versionId": "fdba73cd-2ed0-4c2d-8b14-abe89267820e",
          "publishedAt": "2025-09-22T12:40:01.386189691Z",
          "updatedAt": "2025-09-22T12:40:01.386189691Z",
          "isLatest": true
        }
      }
    },
    {
      "name": "io.github.OtherVibes/mcp-as-a-judge",
      "description": "MCP as a Judge: a behavioral MCP that strengthens AI coding assistants via explicit LLM evaluations",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.3.13",
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "e8b7a95e-e0b7-44d1-9830-1ef945eed29d",
          "versionId": "fe00dad0-f665-453b-a667-ff147be8ff07",
          "publishedAt": "2025-09-18T22:00:36.893962101Z",
          "updatedAt": "2025-09-18T22:05:09.298621446Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.henilcalagiya/mcp-apple-notes",
      "description": "MCP server for Apple Notes integration using AppleScript with full CRUD operations",
      "status": "active",
      "repository": {
        "url": "https://github.com/henilcalagiya/mcp-apple-notes",
        "source": "github"
      },
      "version": "0.1.2",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "mcp-apple-notes",
          "version": "0.1.2",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "612b3ba8-e026-4bf7-a6e8-24441c68b46a",
          "versionId": "fe025150-d0bd-42e5-8c5f-3ea6ec61db33",
          "publishedAt": "2025-09-11T05:36:33.726309509Z",
          "updatedAt": "2025-09-11T05:36:33.726309509Z",
          "isLatest": true
        }
      }
    }
  ]
}