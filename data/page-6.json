{
  "servers": [
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/browserbasehq-mcp-browserbase",
      "description": "Provides cloud browser automation capabilities using Stagehand and Browserbase, enabling LLMs to i…",
      "status": "active",
      "repository": {
        "url": "https://github.com/browserbase/mcp-server-browserbase",
        "source": "github"
      },
      "version": "2.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@browserbasehq/mcp-browserbase/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "1c32a561-afc2-44be-bedf-1618da2447fe",
          "versionId": "b35a6287-b91e-4a86-9eaa-776fc7d272dc",
          "publishedAt": "2025-09-16T17:17:18.587291714Z",
          "updatedAt": "2025-09-16T17:17:18.587291714Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.AungMyoKyaw/betterprompt-mcp",
      "description": "MCP server for AI-enhanced prompt engineering and request conversion.",
      "status": "active",
      "repository": {
        "url": "https://github.com/AungMyoKyaw/betterprompt-mcp",
        "source": "github"
      },
      "version": "0.2.1",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "betterprompt-mcp",
          "version": "0.2.1",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "2720ff16-3e16-48b4-9450-f19565e8436c",
          "versionId": "b361137f-582b-4748-8f7f-eb144fd4ed2c",
          "publishedAt": "2025-09-17T17:15:50.170627394Z",
          "updatedAt": "2025-09-17T17:15:50.170627394Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.getclockwise/clockwise-mcp",
      "description": "An MCP server for managing your calendar, via Clockwise",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.getclockwise.com/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "0f879882-e77f-4b37-8fda-ed0a58934871",
          "versionId": "b3c4cf45-bfc9-44b2-8b0f-d2b07f801567",
          "publishedAt": "2025-09-15T23:12:29.67036488Z",
          "updatedAt": "2025-09-15T23:12:29.67036488Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.mcpcap/mcpcap",
      "description": "An MCP server for analyzing PCAP files.",
      "status": "active",
      "repository": {
        "url": "https://github.com/mcpcap/mcpcap",
        "source": "github"
      },
      "version": "0.5.5",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "mcpcap",
          "version": "0.4.4",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "1a77c0fe-c133-468d-aad0-52c60574d088",
          "versionId": "b3f3ce4a-be05-4483-ace1-854555225f00",
          "publishedAt": "2025-09-12T01:55:40.782813803Z",
          "updatedAt": "2025-09-12T02:03:43.967160658Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/duvomike-mcp",
      "description": "Transform numbers by doubling them and adding 5. Get instant results with a clear breakdown of the…",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@duvomike/mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "0b495a18-7c1c-4ddf-9345-6dd23338d345",
          "versionId": "b4258295-044b-4e99-9bb9-758b499017d3",
          "publishedAt": "2025-09-21T03:33:47.332417515Z",
          "updatedAt": "2025-09-21T03:33:47.332417515Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.stefanoamorelli/fred-mcp-server",
      "description": "Federal Reserve Economic Data (FRED) MCP Server - Access all 800,000+ economic time series",
      "status": "active",
      "repository": {
        "url": "https://github.com/stefanoamorelli/fred-mcp-server",
        "source": "github"
      },
      "version": "1.0.1",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "fred-mcp-server",
          "version": "1.0.1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your FRED API key to access the API",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "FRED_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "a5d0ce37-1375-4d4e-ba5a-2fc31c5083a0",
          "versionId": "b5251106-16c6-40e7-89d7-b123841d18ea",
          "publishedAt": "2025-09-14T11:16:38.3334627Z",
          "updatedAt": "2025-09-14T11:16:38.3334627Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/zwldarren-akshare-one-mcp",
      "description": "Provide access to Chinese stock market data including historical prices, real-time data, news, and…",
      "status": "active",
      "repository": {
        "url": "https://github.com/zwldarren/akshare-one-mcp",
        "source": "github"
      },
      "version": "1.14.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@zwldarren/akshare-one-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "7def3fc1-33a9-45bc-b17b-81126c448a27",
          "versionId": "b54429bf-2285-4bc9-bd62-ec79299fc34b",
          "publishedAt": "2025-09-11T19:15:39.848820116Z",
          "updatedAt": "2025-09-11T19:15:39.848820116Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.dynatrace-oss/Dynatrace-mcp",
      "description": "Model Context Protocol server for Dynatrace - access logs, events, metrics from Dynatrace via MCP.",
      "status": "active",
      "repository": {
        "url": "https://github.com/dynatrace-oss/Dynatrace-mcp",
        "source": "github"
      },
      "version": "0.6.0-rc.1",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@dynatrace-oss/dynatrace-mcp-server",
          "version": "0.6.0-rc.1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your Dynatrace Platform Token",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "DT_PLATFORM_TOKEN"
            },
            {
              "description": "The URL of your Dynatrace environment (e.g. 'https://abc12345.apps.dynatrace.com')",
              "format": "string",
              "name": "DT_ENVIRONMENT"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "d7b297de-f1e3-4ea7-979e-291bff370620",
          "versionId": "b5557497-4ef1-4ae1-a7af-08ebce3f5870",
          "publishedAt": "2025-09-15T11:13:59.272010592Z",
          "updatedAt": "2025-09-18T08:07:03.507178909Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.enigma/enigma-mcp-server",
      "description": "An MCP server that provides access to trusted data about business identity and activity",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0-build1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.enigma.com/http"
        },
        {
          "type": "streamable-http",
          "url": "https://mcp.enigma.com/http-key",
          "headers": [
            {
              "description": "Token of Enigma API key. Used to enable authentication without presenting the user with an oAuth login.",
              "isRequired": true,
              "isSecret": true,
              "name": "x-api-key"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://mcp.enigma.com/sse"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "2a1822b0-c0d6-414c-9ee2-ea1851f35f28",
          "versionId": "b5c49bdf-07bc-478b-9048-23590f4052fb",
          "publishedAt": "2025-09-10T19:23:14.035830574Z",
          "updatedAt": "2025-09-10T19:23:14.035830574Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/fengyinxia-jimeng-mcp",
      "description": "Create images and videos from prompts, with options for image mixing, reference images, and start/…",
      "status": "active",
      "repository": {
        "url": "https://github.com/fengyinxia/jimeng-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@fengyinxia/jimeng-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "1421db43-87bc-46b4-a587-99d203ebaf4f",
          "versionId": "b6c1667c-b54f-4fdf-80cf-3185aa22cc0a",
          "publishedAt": "2025-09-12T13:13:51.71154341Z",
          "updatedAt": "2025-09-12T13:13:51.71154341Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.jkawamoto/mcp-florence2",
      "description": "An MCP server for processing images using Florence-2",
      "status": "active",
      "repository": {
        "url": "https://github.com/jkawamoto/mcp-florence2",
        "source": "github"
      },
      "version": "0.3.3",
      "packages": [
        {
          "registryType": "mcpb",
          "identifier": "https://github.com/jkawamoto/mcp-florence2/releases/download/v0.3.3/mcp-florence2.mcpb",
          "version": "0.3.3",
          "fileSha256": "4e176c58148fde7ef8a548b5ba2ca5d6b4a2f496fb3ab3b84c7329e1c732147b",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "dcf30ab3-ffde-4a3f-8d36-522b9e3016e3",
          "versionId": "b6d97b5e-f822-4f10-b6fe-1c5d2210e3aa",
          "publishedAt": "2025-09-19T00:50:28.842922547Z",
          "updatedAt": "2025-09-19T00:50:28.842922547Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "com.gibsonai/mcp",
      "description": "GibsonAI MCP server: manage your databases with natural language",
      "status": "active",
      "repository": {
        "url": "https://github.com/gibsonai/mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.gibsonai.com/"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "a136b4b2-643a-4374-a70f-c490b07bbf90",
          "versionId": "b74b994f-aced-4deb-b0a1-74b976056214",
          "publishedAt": "2025-09-22T18:43:05.221834159Z",
          "updatedAt": "2025-09-22T18:43:05.221834159Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.jcucci/dotnet-sherlock-mcp",
      "description": ".NET assembly introspection MCP server with advanced reflection and type analysis capabilities",
      "status": "active",
      "repository": {
        "url": "https://github.com/jcucci/dotnet-sherlock-mcp",
        "source": "github"
      },
      "version": "2.3.0",
      "packages": [
        {
          "registryType": "nuget",
          "identifier": "Sherlock.MCP.Server",
          "version": "2.3.0",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "bd0e05aa-5448-4051-a532-08accbde80de",
          "versionId": "b77cb67a-bf01-4197-b889-e7cfd4c5d094",
          "publishedAt": "2025-09-24T21:21:37.075081266Z",
          "updatedAt": "2025-09-24T21:21:37.075081266Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.windowsforum/mcp-server",
      "description": "MCP server for WindowsForum.com with search, document retrieval, and real-time forum analytics.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "sse",
          "url": "https://mcp.windowsforum.com"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "f9cf3fb8-4d15-4be5-a6f0-e8de8c767e62",
          "versionId": "b7a28107-65d9-4139-a093-7b19c7ab5e01",
          "publishedAt": "2025-09-26T10:44:10.416999243Z",
          "updatedAt": "2025-09-26T10:44:10.416999243Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.habedi/omni-lpr",
      "description": "An MCP server for automatic license plate recognition",
      "status": "active",
      "repository": {
        "url": "https://github.com/habedi/omni-lpr",
        "source": "github"
      },
      "version": "0.3.2",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "omni-lpr",
          "version": "0.3.2",
          "transport": {
            "type": "streamable-http",
            "url": "http://127.0.0.1:8000/mcp/"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "0128b7ed-e370-4fdd-8dbf-13375620ea58",
          "versionId": "b862651a-49ab-4a83-909a-c75a33a44a6e",
          "publishedAt": "2025-09-27T08:52:54.853352758Z",
          "updatedAt": "2025-09-27T08:52:54.853352758Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.burningion/video-editing-mcp",
      "description": "An MCP server that provides [describe what your server does]",
      "status": "active",
      "repository": {
        "url": "https://github.com/burningion/video-editing-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "video-editor-mcp",
          "version": "1.0.0",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Video Jungle API Key (found at https://www.video-jungle.com/user/settings)",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "VJ_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "456da657-9a02-4b87-9e16-4eee6db55092",
          "versionId": "b8b7c038-1a6f-4152-9282-6de6ea3fe0ff",
          "publishedAt": "2025-09-10T13:57:16.410605636Z",
          "updatedAt": "2025-09-12T12:58:23.995884425Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/Danushkumar-V-mcp-discord",
      "description": "An MCP server that integrates with Discord to provide AI-powered features.",
      "status": "active",
      "repository": {
        "url": "https://github.com/Danushkumar-V/mcp-discord",
        "source": "github"
      },
      "version": "1.2.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@Danushkumar-V/mcp-discord/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "0e45649f-58fd-4a9e-a707-943a46fbe688",
          "versionId": "b946c91b-b9b9-49af-b32a-f47f20484a85",
          "publishedAt": "2025-09-13T22:54:39.805524875Z",
          "updatedAt": "2025-09-13T22:54:39.805524875Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/magenie33-quality-dimension-generator",
      "description": "Generate tailored quality criteria and scoring guides from your task descriptions. Refine objectiv…",
      "status": "active",
      "repository": {
        "url": "https://github.com/magenie33/quality-dimension-generator",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@magenie33/quality-dimension-generator/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "fb74c0f6-fb5f-4998-a29a-1b2dcf77e1e4",
          "versionId": "b966b9e6-0904-4305-9d1e-016bfedbf891",
          "publishedAt": "2025-09-20T15:11:34.739057896Z",
          "updatedAt": "2025-09-20T15:11:34.739057896Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.motherduckdb/mcp-server-motherduck",
      "description": "Fast analytics and data processing with DuckDB and MotherDuck",
      "status": "active",
      "repository": {
        "url": "https://github.com/motherduckdb/mcp-server-motherduck",
        "source": "github"
      },
      "version": "0.6.4",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "mcp-server-motherduck",
          "version": "0.6.4",
          "transport": {
            "type": "stdio"
          },
          "packageArguments": [
            {
              "description": "Transport type for MCP server",
              "default": "stdio",
              "choices": [
                "stdio",
                "sse",
                "stream"
              ],
              "type": "named",
              "name": "--transport"
            },
            {
              "description": "Port to listen on for sse and stream transport mode",
              "format": "number",
              "default": "8000",
              "type": "named",
              "name": "--port"
            },
            {
              "description": "Path to local DuckDB database file or MotherDuck database",
              "default": "md:",
              "type": "named",
              "name": "--db-path"
            },
            {
              "description": "Access token to use for MotherDuck database connections",
              "isSecret": true,
              "type": "named",
              "name": "--motherduck-token"
            },
            {
              "description": "Flag for connecting to DuckDB or MotherDuck in read-only mode",
              "type": "named",
              "name": "--read-only"
            },
            {
              "description": "Home directory for DuckDB",
              "type": "named",
              "name": "--home-dir"
            },
            {
              "description": "Flag for connecting to MotherDuck in SaaS mode (disables filesystem and write permissions for local DuckDB)",
              "type": "named",
              "name": "--saas-mode"
            },
            {
              "description": "Enable JSON responses for HTTP stream (only supported for stream transport)",
              "type": "named",
              "name": "--json-response"
            }
          ],
          "environmentVariables": [
            {
              "description": "Access token to use for MotherDuck database connections",
              "isSecret": true,
              "name": "motherduck_token"
            },
            {
              "description": "Home directory for DuckDB (used as default if --home-dir not specified)",
              "name": "HOME"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "304e5985-b5e2-4759-ac4b-cf56b86e8c64",
          "versionId": "b9848a83-605f-4cb3-a9b1-2ed5dd02dd56",
          "publishedAt": "2025-09-10T15:38:28.952824815Z",
          "updatedAt": "2025-09-10T15:38:28.952824815Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.kevincogan/demo-mcp-server",
      "description": "Demo server entry for local testing",
      "status": "active",
      "repository": {
        "url": "https://github.com/kevincogan/demo-mcp-server",
        "source": "github"
      },
      "version": "1.0.2",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://kevincogan.github.io/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "78162e28-0738-46be-b2ef-b1c6469a1616",
          "versionId": "b9c67f43-e6e5-412b-b3bf-49d3ea88c530",
          "publishedAt": "2025-09-21T13:59:09.345933804Z",
          "updatedAt": "2025-09-22T08:33:07.216891447Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.BenAHammond/code-auditor-mcp",
      "description": "Code Quality Auditor: Analyze code for SOLID principles, DRY violations, and more",
      "status": "active",
      "repository": {
        "url": "https://github.com/BenAHammond/code-auditor-mcp",
        "source": "github"
      },
      "version": "1.0.3",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "code-auditor-mcp",
          "version": "1.17.4",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "da4e7c0a-854f-46b7-86ab-35564aa3069f",
          "versionId": "b9d37bed-a586-4c23-b846-2d02c6ee8190",
          "publishedAt": "2025-09-28T23:04:51.324391164Z",
          "updatedAt": "2025-09-29T01:21:09.062792598Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.timheuer/sampledotnetmcpserver",
      "description": "Sample .NET MCP Server",
      "repository": {
        "url": "https://github.com/timheuer/sampledotnetmcpserver",
        "source": "github"
      },
      "version": "0.1.46-beta",
      "packages": [
        {
          "registryType": "nuget",
          "identifier": "TimHeuer.SampleDotnetMcpServer",
          "version": "0.1.46-beta",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "98619929-a570-46c1-8e35-4cde888731ee",
          "versionId": "b9d93fa8-9d3f-474b-9f50-54c61731bd01",
          "publishedAt": "2025-09-18T21:24:07.737452346Z",
          "updatedAt": "2025-09-18T23:12:00.040130344Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "co.pipeboard/meta-ads-mcp",
      "description": "Facebook / Meta Ads automation with AI: analyze performance, test creatives, optimize spend.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.13",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "meta-ads-mcp",
          "version": "1.0.13",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.pipeboard.co/meta-ads-mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "51e23615-8cdd-47f0-84d3-df448e34a4e7",
          "versionId": "b9e12cd8-2660-4dc1-9e63-de7491c63002",
          "publishedAt": "2025-09-24T16:24:17.268236123Z",
          "updatedAt": "2025-09-24T16:24:17.268236123Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.spences10/mcp-omnisearch",
      "description": "MCP server for integrating Omnisearch with LLMs",
      "status": "active",
      "repository": {
        "url": "https://github.com/spences10/mcp-omnisearch",
        "source": "github"
      },
      "version": "0.0.15",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mcp-omnisearch",
          "version": "0.0.15",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "573a18a8-3a1e-494b-a88d-dff1af7226e8",
          "versionId": "b9e152e0-8f25-4edb-96be-81e19075dbe6",
          "publishedAt": "2025-09-10T19:32:04.459621013Z",
          "updatedAt": "2025-09-10T19:32:04.459621013Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/MisterSandFR-supabase-mcp-selfhosted",
      "description": "Manage Supabase projects end to end across database, auth, storage, realtime, and migrations. Moni…",
      "status": "active",
      "repository": {
        "url": "https://github.com/MisterSandFR/Supabase-MCP-SelfHosted",
        "source": "github"
      },
      "version": "1.14.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@MisterSandFR/supabase-mcp-selfhosted/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "d07e588e-585e-44b0-a8d4-4cf7ad928ba0",
          "versionId": "babb48c9-0ae5-4436-b957-3fd988656ac2",
          "publishedAt": "2025-09-18T14:42:06.197814736Z",
          "updatedAt": "2025-09-18T14:42:06.197814736Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.flarco/sling-cli",
      "description": "Sling CLI MCP server for data pipeline and replication management",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.4.24",
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "b0be8bf2-c3a0-4db1-91a2-69f6cb3473d0",
          "versionId": "bafa676c-5113-443c-a63c-cebb9693b329",
          "publishedAt": "2025-09-28T21:44:03.912575371Z",
          "updatedAt": "2025-09-28T21:44:03.912575371Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.saucelabs-sample-test-frameworks/sauce-api-mcp",
      "description": "An open-source MCP server that provides LLM access to the Sauce Labs API",
      "status": "active",
      "repository": {
        "url": "https://github.com/saucelabs/sauce-api-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "sauce-api-mcp",
          "version": "1.0.1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "value": "<sauce-user-name>",
              "name": "SAUCE_USERNAME"
            },
            {
              "value": "<sauce-access-key>",
              "name": "SAUCE_ACCESS_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "8b7288a5-d7e6-4139-9ad8-fcb85c1a20df",
          "versionId": "bb04de05-3784-4641-a864-e8eb37b1a901",
          "publishedAt": "2025-09-12T22:36:40.555152268Z",
          "updatedAt": "2025-09-12T22:36:40.555152268Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.Nekzus/npm-sentinel-mcp",
      "description": "NPM Sentinel MCP - AI-powered NPM package analysis for security, dependencies, and performance.",
      "status": "active",
      "repository": {
        "url": "https://github.com/Nekzus/npm-sentinel-mcp",
        "source": "github"
      },
      "version": "1.11.0",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@nekzus/mcp-server",
          "version": "1.11.0",
          "runtimeHint": "npx",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "364d771b-c515-4071-805d-75513fa308ce",
          "versionId": "bb9ad48f-71d3-4e68-8701-43bc9eb97cc1",
          "publishedAt": "2025-09-20T21:15:29.259860449Z",
          "updatedAt": "2025-09-20T21:30:51.466951132Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.nrwl/nx-console",
      "description": "A Model Context Protocol server implementation for Nx",
      "status": "active",
      "repository": {
        "url": "https://github.com/nrwl/nx-console",
        "source": "github"
      },
      "version": "0.6.12",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "nx-mcp",
          "version": "0.6.12",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "02e518c5-4348-4600-b521-7a09364276c3",
          "versionId": "bbc51e33-09d6-4830-8406-1712d1907cc1",
          "publishedAt": "2025-09-23T09:55:22.303227162Z",
          "updatedAt": "2025-09-23T09:55:22.303227162Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "io.github.kevincogan/demo-mcp-server",
      "description": "Demo server entry for local testing",
      "status": "active",
      "repository": {
        "url": "https://github.com/kevincogan/demo-mcp-server",
        "source": "github"
      },
      "version": "1.0.3",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://kevincogan.github.io/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "78162e28-0738-46be-b2ef-b1c6469a1616",
          "versionId": "bbcdf831-c7bf-4c52-affb-3750b146a001",
          "publishedAt": "2025-09-22T08:33:07.198215918Z",
          "updatedAt": "2025-09-22T11:43:15.249644873Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.burningion/video-editing-mcp",
      "description": "MCP Server for Video Jungle - Analyze, Search, Generate, and Edit Videos",
      "status": "active",
      "repository": {
        "url": "https://github.com/burningion/video-editing-mcp",
        "source": "github"
      },
      "version": "1.0.1",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "video-editor-mcp",
          "version": "1.0.1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Video Jungle API Key (found at https://www.video-jungle.com/user/settings)",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "VJ_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "456da657-9a02-4b87-9e16-4eee6db55092",
          "versionId": "bbf32ba9-5e10-40ed-ba62-186b509b87c5",
          "publishedAt": "2025-09-12T12:58:23.949572999Z",
          "updatedAt": "2025-09-12T12:58:23.949572999Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.waystation/supabase",
      "description": "Connect to your Supabase database to query data and schemas.",
      "status": "active",
      "repository": {
        "url": "https://github.com/waystation-ai/mcp",
        "source": "github"
      },
      "version": "0.3.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://waystation.ai/supabase/mcp"
        },
        {
          "type": "sse",
          "url": "https://waystation.ai/supabase/mcp/sse"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "731d8422-a4d1-4783-95aa-1e17b05099b2",
          "versionId": "bc101c44-3702-449a-b569-74f3078eac9d",
          "publishedAt": "2025-09-09T14:46:10.221625416Z",
          "updatedAt": "2025-09-09T14:46:10.221625416Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.timheuer/sampledotnetmcpserver",
      "description": "Sample .NET MCP Server",
      "repository": {
        "url": "https://github.com/timheuer/sampledotnetmcpserver",
        "source": "github"
      },
      "version": "0.1.27-beta",
      "packages": [
        {
          "registryType": "nuget",
          "identifier": "TimHeuer.SampleDotnetMcpServer",
          "version": "0.1.27-beta",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "98619929-a570-46c1-8e35-4cde888731ee",
          "versionId": "bcafddd0-d2f1-4dfd-8411-433242ee6202",
          "publishedAt": "2025-09-16T22:30:54.35634821Z",
          "updatedAt": "2025-09-17T01:27:02.860023046Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.Antonytm/mcp-all",
      "description": "A Model Context Protocol server to run other MCP servers",
      "status": "active",
      "repository": {
        "url": "https://github.com/Antonytm/mcp-all",
        "source": "github"
      },
      "version": "0.1.19",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@antonytm/mcp-all",
          "version": "0.1.19",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "name": "TRANSPORT"
            }
          ]
        },
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@antonytm/mcp-all",
          "version": "0.1.19",
          "transport": {
            "type": "streamable-http",
            "url": "http://localhost:3001/mcp"
          },
          "environmentVariables": [
            {
              "name": "TRANSPORT"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "f88dbaa2-7e10-4957-a53b-7ed8b511d77c",
          "versionId": "bcb806ba-05a7-4b8a-b23b-d6b1b41c6114",
          "publishedAt": "2025-09-28T15:27:54.805308465Z",
          "updatedAt": "2025-09-28T15:38:53.939531929Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.pab1it0/prometheus-mcp-server",
      "description": "MCP server for Prometheus, enabling AI assistants to query metrics and monitor system health",
      "status": "active",
      "repository": {
        "url": "https://github.com/pab1it0/prometheus-mcp-server",
        "source": "github"
      },
      "version": "1.2.6",
      "packages": [
        {
          "registryType": "oci",
          "registryBaseUrl": "https://ghcr.io",
          "identifier": "pab1it0/prometheus-mcp-server",
          "version": "1.2.6",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Prometheus server URL (e.g., http://localhost:9090)",
              "isRequired": true,
              "format": "string",
              "name": "PROMETHEUS_URL"
            },
            {
              "description": "Username for Prometheus basic authentication",
              "format": "string",
              "name": "PROMETHEUS_USERNAME"
            },
            {
              "description": "Password for Prometheus basic authentication",
              "format": "string",
              "isSecret": true,
              "name": "PROMETHEUS_PASSWORD"
            },
            {
              "description": "Bearer token for Prometheus authentication",
              "format": "string",
              "isSecret": true,
              "name": "PROMETHEUS_TOKEN"
            },
            {
              "description": "Organization ID for multi-tenant Prometheus setups",
              "format": "string",
              "name": "ORG_ID"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "e50bf758-19d5-4384-8623-dce5d3e16cf4",
          "versionId": "bd4e9779-1903-456c-b749-4c60e515240a",
          "publishedAt": "2025-09-20T14:17:36.936419738Z",
          "updatedAt": "2025-09-21T08:44:02.056360531Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/arjunkmrm-lta-mcp",
      "description": "Provide real-time transportation data including bus arrivals, train service alerts, carpark availa…",
      "status": "active",
      "repository": {
        "url": "https://github.com/arjunkmrm/lta-mcp",
        "source": "github"
      },
      "version": "0.1.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@arjunkmrm/lta-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "c11e357b-2b62-4fc7-a6ba-16214082ee0e",
          "versionId": "bdbc5988-0d10-4957-8c87-45678bf5d404",
          "publishedAt": "2025-09-11T16:52:48.059122135Z",
          "updatedAt": "2025-09-11T16:52:48.059122135Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.mintmcp/gcal",
      "description": "A MCP server that works with Google Calendar to manage event listing, reading, and updates.",
      "status": "active",
      "repository": {
        "url": "https://github.com/mintmcp/servers",
        "source": "github"
      },
      "version": "1.0.3",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://gcal.mintmcp.com/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "7b265ff1-5cd1-43fe-92c4-54cc6a0fd4d7",
          "versionId": "bde26216-0984-4c1d-bc1c-7d9096688a79",
          "publishedAt": "2025-09-09T19:42:00.464295781Z",
          "updatedAt": "2025-09-09T19:49:54.017385171Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.Nekzus/npm-sentinel-mcp",
      "description": "NPM Sentinel MCP - AI-powered NPM package analysis for security, dependencies, and performance.",
      "status": "active",
      "repository": {
        "url": "https://github.com/Nekzus/npm-sentinel-mcp",
        "source": "github"
      },
      "version": "1.11.8",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@nekzus/mcp-server",
          "version": "1.11.8",
          "runtimeHint": "npx",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "364d771b-c515-4071-805d-75513fa308ce",
          "versionId": "bdf01b68-714f-43fc-95b0-0b8a50edbcc7",
          "publishedAt": "2025-09-20T23:23:20.779152666Z",
          "updatedAt": "2025-09-20T23:23:20.779152666Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.GitHub30/zenn-mcp-server",
      "description": "MCP server that posts to Zenn.",
      "status": "active",
      "repository": {
        "url": "https://github.com/GitHub30/zenn-mcp-server",
        "source": "github"
      },
      "version": "0.1.0",
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "b8d7738c-c90e-4426-94e8-9cb1cf29d458",
          "versionId": "bf0fd3c3-28a7-4e05-b631-2ea81e208dc4",
          "publishedAt": "2025-09-23T09:04:05.123481393Z",
          "updatedAt": "2025-09-23T09:04:05.123481393Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/faithk7-gmail-mcp",
      "description": "Manage Gmail messages, threads, labels, drafts, and settings from your workflows. Send and organiz…",
      "status": "active",
      "repository": {
        "url": "https://github.com/faithk7/gmail-mcp",
        "source": "github"
      },
      "version": "1.7.4",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@faithk7/gmail-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "8b9fdc45-5231-49ec-8790-36c3708802e7",
          "versionId": "bf89e9e0-a6aa-417a-9295-ac03d9493dd3",
          "publishedAt": "2025-09-14T13:42:20.13425818Z",
          "updatedAt": "2025-09-14T13:42:20.13425818Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/cc25a-openai-api-agent-project123123123",
      "description": "Look up the latest stock prices by ticker symbol across global markets. Get current price and esse…",
      "status": "active",
      "repository": {
        "url": "https://github.com/cc25a/openai-api-agent-project",
        "source": "github"
      },
      "version": "1.14.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@cc25a/openai-api-agent-project123123123/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "2e9a1e51-a18b-4599-b56e-b49e1c42c0c2",
          "versionId": "bfcc47f4-8a2f-4c3a-8767-9ab71d609fb1",
          "publishedAt": "2025-09-17T03:32:54.14301964Z",
          "updatedAt": "2025-09-17T03:32:54.14301964Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.CodeAlive-AI/codealive-mcp",
      "description": "Semantic code search and analysis from CodeAlive for AI assistants and agents.",
      "repository": {
        "url": "https://github.com/CodeAlive-AI/codealive-mcp.git",
        "source": "github"
      },
      "version": "0.3.0",
      "packages": [
        {
          "registryType": "oci",
          "registryBaseUrl": "https://ghcr.io",
          "identifier": "codealive-ai/codealive-mcp",
          "version": "0.3.0",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "48848dbc-3035-4c48-a26c-40d390ee5c3c",
          "versionId": "c03cf326-c479-4ce5-b02e-b42b8fd936bf",
          "publishedAt": "2025-09-26T22:23:43.446371147Z",
          "updatedAt": "2025-09-26T22:23:43.446371147Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/pythondev-pro-egw_writings_mcp_server",
      "description": "Search Ellen G. White’s writings by keyword to surface relevant quotations. Retrieve exact passage…",
      "status": "active",
      "repository": {
        "url": "https://github.com/pythondev-pro/egw_writings_mcp_server",
        "source": "github"
      },
      "version": "1.12.4",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@pythondev-pro/egw_writings_mcp_server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "cfa49893-4e64-430d-8ea1-d3af4f8379f9",
          "versionId": "c0a8366b-7531-4a2d-990e-6ba630cd3712",
          "publishedAt": "2025-09-11T12:48:16.278544327Z",
          "updatedAt": "2025-09-11T12:48:16.278544327Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.agilitycms/mcp-server",
      "description": "An MCP server that provides access to Agility CMS.  See https://mcp.agilitycms.com for more details.",
      "status": "active",
      "repository": {
        "url": "https://github.com/agility/agility-mcp-server",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.agilitycms.com/api/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "41d78708-a8ad-459b-9dd4-d7fd1824c6bc",
          "versionId": "c0d0e773-8e78-437f-a9d5-b417e26aa3fa",
          "publishedAt": "2025-09-15T21:00:43.348780132Z",
          "updatedAt": "2025-09-15T21:00:43.348780132Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.pubnub/mcp-server",
      "description": "PubNub MCP for Real-time messaging. API Access and SDK documentation.",
      "status": "active",
      "repository": {
        "url": "https://github.com/pubnub/pubnub-mcp-server",
        "source": "github"
      },
      "version": "1.0.106",
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "1319578e-b112-443f-9938-68f2527a10b4",
          "versionId": "c13d8c60-bd55-4837-9f65-2eb2a95d5430",
          "publishedAt": "2025-09-19T21:08:36.523099568Z",
          "updatedAt": "2025-09-19T21:08:36.523099568Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-07-09/server.schema.json",
      "name": "dev.composio.rube/rube",
      "description": "Connect your AI to 500+ apps like Gmail, Slack, GitHub, and Notion with streamable HTTP transport.",
      "status": "active",
      "repository": {
        "url": "https://github.com/ComposioHQ/Rube",
        "source": "github"
      },
      "version": "0.0.2",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://rube.composio.dev/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "2a705690-7684-4f32-9c2d-05a9080c5b72",
          "versionId": "c1c6f9d2-07ef-4d93-a5e6-67ddbfbd33bb",
          "publishedAt": "2025-09-22T06:16:36.167908046Z",
          "updatedAt": "2025-09-22T06:16:36.167908046Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/brave",
      "description": "Visit https://brave.com/search/api/ for a free API key. Search the web, local businesses, images,…",
      "status": "active",
      "repository": {
        "url": "https://github.com/brave/brave-search-mcp-server",
        "source": "github"
      },
      "version": "2.0.8",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/brave/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "72fbc728-2894-4a60-aaf5-44d616ddd249",
          "versionId": "c1cf7f4d-85bc-46c9-8cad-a3e6a88c651e",
          "publishedAt": "2025-09-19T11:38:30.012331726Z",
          "updatedAt": "2025-09-19T12:13:23.265366973Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.Nekzus/npm-sentinel-mcp",
      "description": "NPM Sentinel MCP - AI-powered NPM package analysis for security, dependencies, and performance.",
      "status": "active",
      "repository": {
        "url": "https://github.com/Nekzus/npm-sentinel-mcp",
        "source": "github"
      },
      "version": "1.11.1",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@nekzus/mcp-server",
          "version": "1.11.1",
          "runtimeHint": "npx",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "364d771b-c515-4071-805d-75513fa308ce",
          "versionId": "c1e3a2ec-14d0-4f26-acf2-7788cf47e553",
          "publishedAt": "2025-09-20T21:30:51.461180027Z",
          "updatedAt": "2025-09-20T22:17:46.118774702Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.CursorTouch/Windows-MCP",
      "description": "An MCP Server for computer-use in Windows OS",
      "status": "active",
      "repository": {
        "url": "https://github.com/CursorTouch/Windows-MCP",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "windows_mcp",
          "version": "0.3.0",
          "runtimeHint": "uvx",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "357d625e-8b12-4ae1-8915-ee77d3dc9a38",
          "versionId": "c20de9bf-9464-472b-8dcb-32503b984d56",
          "publishedAt": "2025-09-17T13:24:08.521350318Z",
          "updatedAt": "2025-09-17T13:24:08.521350318Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.sellisd/mcp-units",
      "description": "An MCP server that provides some common units conversions for cooking",
      "status": "active",
      "repository": {
        "url": "https://github.com/sellisd/mcp-units",
        "source": "github"
      },
      "version": "0.3.3",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "mcp-units",
          "version": "0.3.3",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "997f7d99-a6fc-43f4-85f9-0ec32c82a5eb",
          "versionId": "c27639e0-88b6-45c9-8fcd-8b2caa82e59e",
          "publishedAt": "2025-09-26T19:21:00.556532893Z",
          "updatedAt": "2025-09-26T19:21:00.556532893Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.mcpcap/mcpcap",
      "description": "An MCP server for analyzing PCAP files.",
      "status": "active",
      "repository": {
        "url": "https://github.com/mcpcap/mcpcap",
        "source": "github"
      },
      "version": "0.5.8",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "mcpcap",
          "version": "0.4.4",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "1a77c0fe-c133-468d-aad0-52c60574d088",
          "versionId": "c29777b7-3957-42a7-8000-d675c0ecb2b2",
          "publishedAt": "2025-09-12T04:28:40.558477428Z",
          "updatedAt": "2025-09-12T04:48:10.705163493Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.huoshuiai42/huoshui-pdf-converter",
      "description": "An MCP server that provides PDF file conversion",
      "status": "active",
      "repository": {
        "url": "https://github.com/huoshuiai42/huoshui-pdf-converter",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "huoshui-pdf-converter",
          "version": "1.0.0",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "f70f6219-ec6f-4df8-9458-b621fe94e8af",
          "versionId": "c2c0a8ed-6ad8-42fd-97d8-5da83965d302",
          "publishedAt": "2025-09-11T01:34:53.40476072Z",
          "updatedAt": "2025-09-11T01:34:53.40476072Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.formulahendry/code-runner",
      "description": "Code Runner MCP Server which can run code in various programming languages.",
      "status": "active",
      "repository": {
        "url": "https://github.com/formulahendry/mcp-server-code-runner",
        "source": "github"
      },
      "version": "0.1.9",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mcp-server-code-runner",
          "version": "0.1.8",
          "transport": {
            "type": "stdio"
          }
        },
        {
          "registryType": "oci",
          "registryBaseUrl": "https://docker.io",
          "identifier": "formulahendry/mcp-server-code-runner",
          "version": "0.1.8",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "b835c535-cd49-4a14-85b0-88f2aa27738d",
          "versionId": "c30f4ddd-0cda-44a9-b0e2-6720ace98111",
          "publishedAt": "2025-09-25T12:04:21.59819118Z",
          "updatedAt": "2025-09-25T12:04:21.59819118Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.zhongweili/nanobanana-mcp-server",
      "description": "An MCP server that provides image generation and editing capabilities",
      "status": "active",
      "repository": {
        "url": "https://github.com/zhongweili/nanobanana-mcp-server",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "nanobanana-mcp-server",
          "version": "1.0.0",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your Gemini API key",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "GEMINI_API_KEY"
            },
            {
              "description": "The image output directory",
              "format": "string",
              "name": "IMAGE_OUTPUT_DIR"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "879d5644-ec2a-4627-9918-8043302684a4",
          "versionId": "c339f751-fd5c-487a-b5c2-14971011acb4",
          "publishedAt": "2025-09-09T13:45:29.896269404Z",
          "updatedAt": "2025-09-09T13:45:29.896269404Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/arjunkmrm-ahoy",
      "description": "Send friendly, personalized greetings by name. Switch to a playful pirate voice for themed salutat…",
      "status": "active",
      "repository": {
        "url": "https://github.com/arjunkmrm/ahoy",
        "source": "github"
      },
      "version": "1.13.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@arjunkmrm/ahoy/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "a835b54b-4d1d-4eb1-98c5-4c7d2b0e0f50",
          "versionId": "c372a906-9758-46ce-8211-602c545dffc3",
          "publishedAt": "2025-09-14T03:11:31.224722296Z",
          "updatedAt": "2025-09-14T03:11:31.224722296Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.minnas/mcp",
      "description": "Share prompts and context with your team and discover community collections.",
      "status": "active",
      "repository": {
        "url": "https://github.com/sensoris/minnas-service",
        "source": "github"
      },
      "version": "1.1.0",
      "remotes": [
        {
          "type": "sse",
          "url": "https://api.minnas.io/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "33e1232b-4b00-46fc-9460-452cae6bdcb5",
          "versionId": "c3bda903-da17-48a7-b7ec-e2195c38e78c",
          "publishedAt": "2025-09-18T16:40:24.146729603Z",
          "updatedAt": "2025-09-18T16:40:24.146729603Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.variflight/variflight-mcp",
      "description": "Variflight MCP Server",
      "status": "active",
      "repository": {
        "url": "https://github.com/variflight/variflight-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@variflight-ai/variflight-mcp",
          "version": "1.0.0",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your API key for the service",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "VARIFLIGHT_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "314291ab-1ff5-4c6b-9879-9a236748c272",
          "versionId": "c41fdf1c-b9b0-4101-ba38-7584f2e6135a",
          "publishedAt": "2025-09-09T13:30:29.381063731Z",
          "updatedAt": "2025-09-09T13:43:56.537303875Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.iggredible/vim-mcp",
      "description": "Connect Claude Code to Vim/Neovim - query state, execute commands, search help, record macros",
      "status": "active",
      "repository": {
        "url": "https://github.com/iggredible/vim-mcp",
        "source": "github"
      },
      "version": "0.1.2",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "vim-mcp",
          "version": "0.1.2",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "ca864f0d-6915-41cb-b140-e85aa129c987",
          "versionId": "c44d9512-b4f0-426b-b603-57c416ad9db9",
          "publishedAt": "2025-09-26T22:02:08.877551484Z",
          "updatedAt": "2025-09-26T22:02:08.877551484Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/lineex-pubmed-mcp-smithery",
      "description": "Search PubMed with precision using keyword and journal filters and smart sorting. Uncover MeSH ter…",
      "status": "active",
      "repository": {
        "url": "https://github.com/lineex/pubmed-mcp-smithery",
        "source": "github"
      },
      "version": "1.14.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@lineex/pubmed-mcp-smithery/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "c6aea640-d696-4be9-b86f-5e789e46d166",
          "versionId": "c477c6e2-388e-43a1-892d-250cbf90120c",
          "publishedAt": "2025-09-16T01:10:37.458958533Z",
          "updatedAt": "2025-09-16T01:10:37.458958533Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/adamamer20-paper-search-mcp-openai",
      "description": "Search and download academic papers from arXiv, PubMed, bioRxiv, medRxiv, Google Scholar, Semantic…",
      "status": "active",
      "repository": {
        "url": "https://github.com/adamamer20/paper-search-mcp-openai",
        "source": "github"
      },
      "version": "1.14.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@adamamer20/paper-search-mcp-openai/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "1b9d8596-bc91-4ff3-811e-e3a0d7964759",
          "versionId": "c4eee19a-f32f-4400-b996-0386fb66c46e",
          "publishedAt": "2025-09-18T10:21:35.77628635Z",
          "updatedAt": "2025-09-18T10:21:35.77628635Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.biodnd/agent-ip",
      "description": "Agent IP: MCP server with patents search tools",
      "repository": {
        "url": "https://github.com/markchiang/go-agents",
        "source": "github",
        "subfolder": "src/go_agents/agents/ip"
      },
      "version": "0.1.0",
      "remotes": [
        {
          "type": "sse",
          "url": "https://agent-ip.biodnd.com/sse"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "30c71c78-e9f2-480d-969f-a352e650a85c",
          "versionId": "c5d23469-63b2-4347-8fe8-f3b14875f334",
          "publishedAt": "2025-09-23T08:27:01.316623608Z",
          "updatedAt": "2025-09-23T09:08:13.513992098Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/kodey-ai-mapwise-mcp",
      "description": "Send friendly, personalized greetings on demand. Generate quick salutations with a simple prompt.…",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@kodey-ai/mapwise-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "5f480031-7f5d-472d-a622-0e42344857f2",
          "versionId": "c5e7c259-731f-42f5-959c-b2f423acbffc",
          "publishedAt": "2025-09-18T21:55:01.522892141Z",
          "updatedAt": "2025-09-18T21:55:01.522892141Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.OtherVibes/mcp-as-a-judge",
      "description": "MCP as a Judge: a behavioral MCP that strengthens AI coding assistants via explicit LLM evaluations",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.3.3",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "mcp-as-a-judge",
          "version": "0.3.3",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "e8b7a95e-e0b7-44d1-9830-1ef945eed29d",
          "versionId": "c5f3c013-d154-4bbf-ad6f-f68c247c3371",
          "publishedAt": "2025-09-18T20:23:31.611474327Z",
          "updatedAt": "2025-09-18T21:45:57.098844508Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/minionszyw-bazi",
      "description": "Generate BaZi charts from birth details. Explore Four Pillars, solar terms, and Luck Pillars for d…",
      "status": "active",
      "repository": {
        "url": "https://github.com/minionszyw/bazi",
        "source": "github"
      },
      "version": "1.14.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@minionszyw/bazi/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "fba076e0-91b9-4c9a-8cca-ded71a0adb61",
          "versionId": "c6a1f6a6-e9c1-47cc-a280-e67cf0015f96",
          "publishedAt": "2025-09-18T08:13:10.601277709Z",
          "updatedAt": "2025-09-18T08:13:10.601277709Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.cameroncooke/XcodeBuildMCP",
      "description": "XcodeBuildMCP provides tools for Xcode project management, simulator management, and app utilities.",
      "status": "active",
      "repository": {
        "url": "https://github.com/cameroncooke/XcodeBuildMCP",
        "source": "github"
      },
      "version": "1.12.8",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "xcodebuildmcp",
          "version": "1.12.8",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "18e95b25-4c50-4d4f-836b-0d47f4ef98f4",
          "versionId": "c6f34744-715a-490d-996c-7e87596b8681",
          "publishedAt": "2025-09-09T19:54:23.228606748Z",
          "updatedAt": "2025-09-09T19:54:23.228606748Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.jkawamoto/mcp-youtube-transcript",
      "description": "An MCP server retrieving transcripts of YouTube videos",
      "status": "active",
      "repository": {
        "url": "https://github.com/jkawamoto/mcp-youtube-transcript",
        "source": "github"
      },
      "version": "0.5.1",
      "packages": [
        {
          "registryType": "mcpb",
          "identifier": "https://github.com/jkawamoto/mcp-youtube-transcript/releases/download/v0.5.1/mcp-youtube-transcript.mcpb",
          "version": "0.5.1",
          "fileSha256": "3356e741d4dafa24b0e931e3afd773c64d503f6624338beec62885f0dde59695",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "3ea19f39-944b-44bd-8cc7-dfb2f5150768",
          "versionId": "c6fe5633-4091-4018-8fd7-57b555f568ec",
          "publishedAt": "2025-09-17T08:10:03.858868083Z",
          "updatedAt": "2025-09-17T08:10:03.858868083Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/devbrother2024-typescript-mcp-server-boilerplate",
      "description": "Kickstart development with a customizable TypeScript template featuring sample tools for greeting,…",
      "status": "active",
      "repository": {
        "url": "https://github.com/devbrother2024/typescript-mcp-server-boilerplate",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@devbrother2024/typescript-mcp-server-boilerplate/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "67692a7a-a90a-4b1f-8005-f224079d6a31",
          "versionId": "c90bf24a-325b-49d6-92ef-4a0a56a57ae4",
          "publishedAt": "2025-09-20T16:12:55.711868952Z",
          "updatedAt": "2025-09-20T16:12:55.711868952Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.estruyf/vscode-demo-time",
      "description": "Enables AI assistants to interact with Demo Time and helps build presentations and demos.",
      "status": "active",
      "repository": {
        "url": "https://github.com/estruyf/vscode-demo-time",
        "source": "github"
      },
      "version": "0.0.55",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@demotime/mcp",
          "version": "0.0.55",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "20dee53d-4ec0-45dd-b5e7-fb3c71fa6352",
          "versionId": "c965417f-fe89-47ce-bbd6-914ffdac121a",
          "publishedAt": "2025-09-19T07:45:12.638193269Z",
          "updatedAt": "2025-09-19T07:45:12.638193269Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.spences10/mcp-turso-cloud",
      "description": "MCP server for integrating Turso with LLMs",
      "status": "active",
      "repository": {
        "url": "https://github.com/spences10/mcp-turso-cloud",
        "source": "github"
      },
      "version": "0.0.9",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mcp-turso-cloud",
          "version": "0.0.9",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Turso Platform API token for authentication",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "TURSO_API_TOKEN"
            },
            {
              "description": "Turso organization name",
              "isRequired": true,
              "format": "string",
              "name": "TURSO_ORGANIZATION"
            },
            {
              "description": "Default database name (optional)",
              "format": "string",
              "name": "TURSO_DEFAULT_DATABASE"
            },
            {
              "description": "Token expiration time (default: 7d)",
              "format": "string",
              "name": "TOKEN_EXPIRATION"
            },
            {
              "description": "Default token permission level (default: full-access)",
              "format": "string",
              "name": "TOKEN_PERMISSION"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "6e207d30-93d4-4a85-b486-358dd6c50cc3",
          "versionId": "c9fd1a85-4447-4cac-8612-6b9d15f8329f",
          "publishedAt": "2025-09-26T21:22:07.399039955Z",
          "updatedAt": "2025-09-26T21:22:07.399039955Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.close/close-mcp",
      "description": "Close CRM to manage your sales pipeline. Learn more at https://close.com or https://mcp.close.com",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.close.com/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "770f5812-1f2f-46c7-bef9-e05f6d62f304",
          "versionId": "c9fdc775-1ff6-4c60-a696-58b5a07ab59e",
          "publishedAt": "2025-09-09T18:15:23.108331317Z",
          "updatedAt": "2025-09-22T21:07:57.610560832Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/arjunkmrm-ahoy2",
      "description": "Create friendly greetings by name, with an optional pirate tone. Explore the origin of 'Hello, Wor…",
      "status": "active",
      "repository": {
        "url": "https://github.com/arjunkmrm/ahoy",
        "source": "github"
      },
      "version": "1.13.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@arjunkmrm/ahoy2/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "d2eaf7dd-1510-4035-9779-7b4820662dbd",
          "versionId": "ca5f80fd-1eab-4967-b9a3-c921b0319446",
          "publishedAt": "2025-09-18T09:44:13.762613275Z",
          "updatedAt": "2025-09-18T09:44:13.762613275Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.cyanheads/mcp-ts-template",
      "description": "A production-grade TypeScript template for scalable MCP servers with built-in observability.",
      "status": "active",
      "repository": {
        "url": "https://github.com/cyanheads/mcp-ts-template",
        "source": "github"
      },
      "version": "2.1.7",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mcp-ts-template",
          "version": "2.1.7",
          "runtimeHint": "bun",
          "transport": {
            "type": "stdio"
          },
          "packageArguments": [
            {
              "value": "run",
              "type": "positional"
            },
            {
              "value": "start:stdio",
              "type": "positional"
            }
          ],
          "environmentVariables": [
            {
              "description": "Sets the minimum log level for output (e.g., 'debug', 'info', 'warn').",
              "format": "string",
              "default": "info",
              "name": "MCP_LOG_LEVEL"
            }
          ]
        },
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mcp-ts-template",
          "version": "2.1.7",
          "runtimeHint": "bun",
          "transport": {
            "type": "streamable-http",
            "url": "http://localhost:3010/mcp"
          },
          "packageArguments": [
            {
              "value": "run",
              "type": "positional"
            },
            {
              "value": "start:http",
              "type": "positional"
            }
          ],
          "environmentVariables": [
            {
              "description": "The hostname for the HTTP server.",
              "format": "string",
              "default": "127.0.0.1",
              "name": "MCP_HTTP_HOST"
            },
            {
              "description": "The port to run the HTTP server on.",
              "format": "string",
              "default": "3010",
              "name": "MCP_HTTP_PORT"
            },
            {
              "description": "The endpoint path for the MCP server.",
              "format": "string",
              "default": "/mcp",
              "name": "MCP_HTTP_ENDPOINT_PATH"
            },
            {
              "description": "Authentication mode to use: 'none', 'jwt', or 'oauth'.",
              "format": "string",
              "default": "none",
              "name": "MCP_AUTH_MODE"
            },
            {
              "description": "Sets the minimum log level for output (e.g., 'debug', 'info', 'warn').",
              "format": "string",
              "default": "info",
              "name": "MCP_LOG_LEVEL"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "b1a7bd6b-21e2-4cd8-8531-37dddc5fa3f4",
          "versionId": "ca715aa0-178c-40e2-a230-5ccc4bc46a0e",
          "publishedAt": "2025-09-27T22:01:57.920713864Z",
          "updatedAt": "2025-09-28T04:06:34.163937911Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.vercel/vercel-mcp",
      "description": "An MCP server for Vercel",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.0.2",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.vercel.com"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "b0265c63-b74d-4e92-bd28-89fd55a29545",
          "versionId": "ca97ce9f-45a6-4249-a6de-d2a1797adf0f",
          "publishedAt": "2025-09-17T21:29:22.383255285Z",
          "updatedAt": "2025-09-17T21:29:22.383255285Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.domdomegg/time-mcp-pypi",
      "description": "Get the current UTC time in RFC 3339 format.",
      "status": "active",
      "repository": {
        "url": "https://github.com/domdomegg/time-mcp-pypi.git",
        "source": "github"
      },
      "version": "1.0.6",
      "packages": [
        {
          "registryType": "pypi",
          "identifier": "time-mcp-pypi",
          "version": "1.0.6",
          "runtimeHint": "python",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "5edcfca6-43c2-4859-a7a5-19e0f2d17ef3",
          "versionId": "cc123f69-0820-4c87-b304-99e82175a541",
          "publishedAt": "2025-09-12T02:14:45.618237925Z",
          "updatedAt": "2025-09-12T02:14:45.618237925Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.pshivapr/selenium-mcp",
      "description": "Selenium Tools for MCP",
      "status": "active",
      "repository": {
        "url": "https://github.com/pshivapr/selenium-mcp",
        "source": "github"
      },
      "version": "0.3.9",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "selenium-webdriver-mcp",
          "version": "0.3.9",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your API key for the service",
              "format": "string",
              "isSecret": true,
              "name": "YOUR_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "e6648a72-6a2f-4b64-991e-4be3ed59ed3c",
          "versionId": "cc6f63b8-d592-4ca8-9440-9e3be35be2c8",
          "publishedAt": "2025-09-09T19:08:26.435100548Z",
          "updatedAt": "2025-09-11T13:43:51.367329854Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.ChiR24/unreal-engine-mcp",
      "description": "Production-ready MCP server for Unreal Engine with comprehensive game development tools",
      "repository": {
        "url": "https://github.com/ChiR24/Unreal_mcp.git",
        "source": "github"
      },
      "version": "0.3.0",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "unreal-engine-mcp-server",
          "version": "0.3.0",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Unreal Engine host address",
              "value": "127.0.0.1",
              "name": "UE_HOST"
            },
            {
              "description": "Remote Control HTTP port",
              "value": "30010",
              "name": "UE_RC_HTTP_PORT"
            },
            {
              "description": "Remote Control WebSocket port",
              "value": "30020",
              "name": "UE_RC_WS_PORT"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "49c64feb-2e4c-406d-b39f-1236bf2212a6",
          "versionId": "ccdf5061-3cb1-4dfe-a36a-f6bbbf6c3abf",
          "publishedAt": "2025-09-17T12:43:41.483739766Z",
          "updatedAt": "2025-09-19T06:42:00.165667265Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.mcpanalytics/analytics",
      "description": "MCP Analytics, searchable tools and reports with interactive HTML visualization",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://api.mcpanalytics.ai/auth0"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "219a2fa3-ba26-4574-9c45-44886d4ff9e8",
          "versionId": "cd5b8366-f0bb-42fd-98bb-e8e467db2554",
          "publishedAt": "2025-09-17T02:38:18.067163459Z",
          "updatedAt": "2025-09-17T03:00:38.275209785Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.schemacrawler/schemacrawler-ai",
      "description": "Enables natural language schema queries — explore tables, keys, procedures, and get SQL help fast",
      "status": "active",
      "repository": {
        "url": "https://github.com/schemacrawler/SchemaCrawler-AI",
        "source": "github"
      },
      "version": "v16.28.2-1",
      "packages": [
        {
          "registryType": "oci",
          "registryBaseUrl": "https://docker.io",
          "identifier": "schemacrawler/schemacrawler-ai",
          "version": "v16.28.2-1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Database user name. Can be optional depending on the database connection type.",
              "format": "string",
              "isSecret": true,
              "name": "SCHCRWLR_DATABASE_USER"
            },
            {
              "description": "Database user password. Can be optional depending on the database connection type.",
              "format": "string",
              "isSecret": true,
              "name": "SCHCRWLR_DATABASE_PASSWORD"
            },
            {
              "description": "JDBC URL for database connection. If this is provided, the server, host, port and database are not used.",
              "format": "string",
              "name": "SCHCRWLR_JDBC_URL"
            },
            {
              "description": "SchemaCrawler database plugin, for example, 'sqlserver' or 'sqlite'. Used only if the JDBC URL is not provided.",
              "format": "string",
              "name": "SCHCRWLR_SERVER"
            },
            {
              "description": "Database host. Defaults to localhost. Used only if the JDBC URL is not provided.",
              "format": "string",
              "name": "SCHCRWLR_HOST"
            },
            {
              "description": "Database port. Defaults to the default port for the server type. Used only if the JDBC URL is not provided.",
              "format": "string",
              "name": "SCHCRWLR_PORT"
            },
            {
              "description": "Database to connect to (optional). Used only if the JDBC URL is not provided.",
              "format": "string",
              "name": "SCHCRWLR_DATABASE"
            },
            {
              "description": "How much database metadata to retrieve. Values are 'minimum', 'standard', 'detailed' or 'maximum'.",
              "format": "string",
              "name": "SCHCRWLR_INFO_LEVEL"
            },
            {
              "description": "Logging verbosity level. Values are 'SEVERE', 'WARNING', 'INFO', 'CONFIG', or 'FINE'.",
              "format": "string",
              "name": "SCHCRWLR_LOG_LEVEL"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "3616e073-7a15-42cb-ae02-4c6d64c92905",
          "versionId": "ce887e38-e3cd-41e6-9823-baa601f36c7c",
          "publishedAt": "2025-09-20T13:17:42.501613163Z",
          "updatedAt": "2025-09-27T01:18:14.979887202Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.cloudflare.mcp/mcp",
      "description": "Cloudflare MCP servers",
      "status": "active",
      "repository": {
        "url": "https://github.com/cloudflare/mcp-server-cloudflare",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://docs.mcp.cloudflare.com/mcp"
        },
        {
          "type": "streamable-http",
          "url": "https://observability.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://bindings.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://builds.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://radar.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://containers.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://browser.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://logs.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://ai-gateway.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://autorag.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://auditlogs.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://dns-analytics.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://dex.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://casb.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://graphql.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://docs.mcp.cloudflare.com/sse"
        },
        {
          "type": "sse",
          "url": "https://observability.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://bindings.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://builds.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://radar.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://containers.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://browser.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://logs.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://ai-gateway.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://autorag.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://auditlogs.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://dns-analytics.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://dex.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://casb.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://graphql.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "isSecret": true,
              "name": "Authentication"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "ae4bba89-5a64-4d7d-8d8d-92b9b4b4d15b",
          "versionId": "ceb6f1e9-0f6b-4668-aa74-a7308963775f",
          "publishedAt": "2025-09-16T22:06:29.987728525Z",
          "updatedAt": "2025-09-16T22:06:29.987728525Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.cyanheads/pubmed-mcp-server",
      "description": "Comprehensive PubMed MCP Server to search, retrieve, and analyze biomedical literature from NCBI.",
      "status": "active",
      "repository": {
        "url": "https://github.com/cyanheads/pubmed-mcp-server",
        "source": "github"
      },
      "version": "1.4.4",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@cyanheads/pubmed-mcp-server",
          "version": "1.4.4",
          "runtimeHint": "node",
          "transport": {
            "type": "stdio"
          },
          "packageArguments": [
            {
              "value": "dist/index.js",
              "type": "positional"
            }
          ],
          "environmentVariables": [
            {
              "description": "Specifies the transport mechanism for the server.",
              "isRequired": true,
              "format": "string",
              "default": "stdio",
              "name": "MCP_TRANSPORT_TYPE"
            },
            {
              "description": "Sets the minimum log level for output (e.g., 'debug', 'info', 'warn').",
              "format": "string",
              "default": "info",
              "name": "MCP_LOG_LEVEL"
            },
            {
              "description": "Your NCBI API key for higher rate limits.",
              "format": "string",
              "name": "NCBI_API_KEY"
            }
          ]
        },
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@cyanheads/pubmed-mcp-server",
          "version": "1.4.4",
          "runtimeHint": "node",
          "transport": {
            "type": "streamable-http",
            "url": "http://localhost:3017/mcp"
          },
          "packageArguments": [
            {
              "value": "dist/index.js",
              "type": "positional"
            }
          ],
          "environmentVariables": [
            {
              "description": "Specifies the transport mechanism for the server.",
              "isRequired": true,
              "format": "string",
              "default": "http",
              "name": "MCP_TRANSPORT_TYPE"
            },
            {
              "description": "The host for the HTTP server.",
              "format": "string",
              "default": "localhost",
              "name": "MCP_HTTP_HOST"
            },
            {
              "description": "The port for the HTTP server.",
              "format": "string",
              "default": "3017",
              "name": "MCP_HTTP_PORT"
            },
            {
              "description": "The endpoint path for MCP requests.",
              "format": "string",
              "default": "/mcp",
              "name": "MCP_HTTP_ENDPOINT_PATH"
            },
            {
              "description": "Authentication mode: 'none', 'jwt', or 'oauth'.",
              "format": "string",
              "default": "none",
              "name": "MCP_AUTH_MODE"
            },
            {
              "description": "Sets the minimum log level (e.g., 'debug', 'info', 'warn').",
              "format": "string",
              "default": "info",
              "name": "MCP_LOG_LEVEL"
            },
            {
              "description": "Your NCBI API key for higher rate limits.",
              "format": "string",
              "name": "NCBI_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "3330804b-b80f-4333-93ae-c578e7848b26",
          "versionId": "cee0c5a8-9a97-455d-91c4-14135d905e43",
          "publishedAt": "2025-09-15T13:34:11.145838692Z",
          "updatedAt": "2025-09-15T13:34:11.145838692Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/neverinfamous-memory-journal-mcp",
      "description": "A MCP server built for developers enabling Git based project management with project and personal…",
      "status": "active",
      "repository": {
        "url": "https://github.com/neverinfamous/memory-journal-mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@neverinfamous/memory-journal-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "04da7ca4-7f41-4cdb-98e5-12c4f7a5bd12",
          "versionId": "cf109d3d-025a-4fad-82ce-701c2741df50",
          "publishedAt": "2025-09-15T03:39:21.908030323Z",
          "updatedAt": "2025-09-15T03:39:21.908030323Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.himorishige/hatago-mcp-hub",
      "description": "Unified MCP Hub for managing multiple Model Context Protocol servers",
      "status": "active",
      "repository": {
        "url": "https://github.com/himorishige/hatago-mcp-hub",
        "source": "github"
      },
      "version": "0.0.16",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@himorishige/hatago-mcp-hub",
          "version": "0.0.16",
          "runtimeHint": "npx",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "27980499-f44a-453a-8b3c-6450b5c0947b",
          "versionId": "cf1ae9e0-e572-47a9-961b-21c516bb7606",
          "publishedAt": "2025-09-14T14:57:18.596180971Z",
          "updatedAt": "2025-09-14T14:57:18.596180971Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.shawndurrani/mcp-merchant",
      "description": "Search-only commerce MCP server backed by Stripe (test)",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.1.0",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mcp-merchant",
          "version": "0.1.0",
          "runtimeHint": "npx",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Stripe secret key (test mode)",
              "isRequired": true,
              "isSecret": true,
              "name": "STRIPE_SECRET_KEY"
            },
            {
              "description": "Max products to cache",
              "default": "100",
              "name": "PRODUCT_LIMIT"
            },
            {
              "description": "Catalog refresh interval in seconds",
              "default": "600",
              "name": "REFRESH_INTERVAL_SEC"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "8681fb6c-725d-4896-b15e-1088ffe74743",
          "versionId": "cfe9b2c3-e001-4c33-8cb8-1a6aca43b309",
          "publishedAt": "2025-09-09T10:36:46.541849731Z",
          "updatedAt": "2025-09-14T02:22:00.59735517Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.pedro-rivas/android-puppeteer-mcp",
      "description": "MCP server for Android automation with UI interaction, screenshots, and device control",
      "status": "active",
      "repository": {
        "url": "https://github.com/pedro-rivas/android-puppeteer-mcp",
        "source": "github"
      },
      "version": "1.0.1",
      "packages": [
        {
          "registryType": "pypi",
          "registryBaseUrl": "https://pypi.org",
          "identifier": "android-puppeteer-mcp",
          "version": "1.0.1",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "1358a9af-ccab-47f5-8176-1892168954f0",
          "versionId": "d01babcd-d7a6-44b9-b5bd-0e0b8f6cb969",
          "publishedAt": "2025-09-18T02:09:11.965570935Z",
          "updatedAt": "2025-09-18T02:09:11.965570935Z",
          "isLatest": true
        }
      }
    },
    {
      "name": "io.github.ruvnet/claude-flow",
      "description": "AI orchestration with hive-mind swarms, neural networks, and 87 MCP tools for enterprise dev.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "2.0.0-alpha.104",
      "packages": [
        {
          "registryType": "npm",
          "identifier": "claude-flow",
          "version": "2.0.0-alpha.104",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "8362811b-c6cc-401d-92d9-6288295e9104",
          "versionId": "d04e69ef-3bd3-4216-8145-928c3c775ee8",
          "publishedAt": "2025-09-10T16:20:48.985187906Z",
          "updatedAt": "2025-09-10T16:46:39.972611608Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.timeslope/timeslope-mcp",
      "description": "Equip AI with tools for researching economic data from Federal Reserve Economic Data (FRED).",
      "status": "active",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "0.1.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.timeslope.com/mcp",
          "headers": [
            {
              "description": "Authorization Bearer header containing API key or OAuth token",
              "isRequired": true,
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "66353cf7-acae-4942-8828-0f7615f3a31c",
          "versionId": "d0551f52-173b-4443-8125-a58153f8f82e",
          "publishedAt": "2025-09-11T18:16:25.262687063Z",
          "updatedAt": "2025-09-11T18:16:25.262687063Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/brave",
      "description": "Visit https://brave.com/search/api/ for a free API key. Search the web, local businesses, images,…",
      "status": "active",
      "repository": {
        "url": "https://github.com/brave/brave-search-mcp-server",
        "source": "github"
      },
      "version": "2.0.6",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/brave/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "72fbc728-2894-4a60-aaf5-44d616ddd249",
          "versionId": "d0cdf20e-831c-4de3-b2eb-8dad26a1e866",
          "publishedAt": "2025-09-19T09:40:01.083925747Z",
          "updatedAt": "2025-09-19T11:31:51.128068889Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.driflyte/driflyte-mcp-server",
      "description": "Driflyte MCP server which lets AI assistants query topic-specific knowledge from web and GitHub.",
      "status": "active",
      "repository": {
        "url": "https://github.com/serkan-ozal/driflyte-mcp-server",
        "source": "github"
      },
      "version": "0.0.19",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@driflyte/mcp-server",
          "version": "0.0.19",
          "runtimeHint": "npx",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.driflyte.com/mcp"
        },
        {
          "type": "streamable-http",
          "url": "https://mcp.driflyte.com/openai"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "e4bf9279-bd3f-43d4-8c82-8b26d237876b",
          "versionId": "d0fe6fb4-46e7-466d-b031-907f3e2a104f",
          "publishedAt": "2025-09-20T16:12:47.912694714Z",
          "updatedAt": "2025-09-21T10:31:49.276749534Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.ycjcl868/mcp-server-fear-greed",
      "description": "An MCP server for mcp-server-fear-greed",
      "status": "active",
      "repository": {
        "url": "https://github.com/ycjcl868/mcp-server-fear-greed",
        "source": "github"
      },
      "version": "1.0.1",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mcp-server-fear-greed",
          "version": "1.0.1",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "44863cea-e132-4d11-a92d-e6f1d531b079",
          "versionId": "d1378e5e-f1cf-4eeb-bbb1-9e9527654acf",
          "publishedAt": "2025-09-09T03:01:43.052528327Z",
          "updatedAt": "2025-09-09T04:08:35.763104718Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.overstarry/qweather-mcp",
      "description": "a qweather mcp server",
      "status": "active",
      "repository": {
        "url": "https://github.com/overstarry/qweather-mcp",
        "source": "github"
      },
      "version": "1.0.12",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "qweather-mcp",
          "version": "1.0.12",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your qweather api host",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "QWEATHER_API_BASE"
            },
            {
              "description": "Your qweather api key",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "QWEATHER_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "76511fb8-3c99-44cd-903a-fe5ef2370b03",
          "versionId": "d19619da-84d8-4b62-a2f4-766eca866ea2",
          "publishedAt": "2025-09-10T14:28:10.30769765Z",
          "updatedAt": "2025-09-10T14:28:10.30769765Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.pubnub/mcp-server",
      "description": "PubNub MCP for Real-time messaging. API Access and SDK documentation.",
      "repository": {
        "url": "",
        "source": ""
      },
      "version": "1.0.104",
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "1319578e-b112-443f-9938-68f2527a10b4",
          "versionId": "d1e7a64f-300f-4506-bf0f-30e8684b857b",
          "publishedAt": "2025-09-19T02:42:31.411220651Z",
          "updatedAt": "2025-09-19T21:08:36.529344207Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "com.supabase/mcp",
      "description": "MCP server for interacting with the Supabase platform",
      "status": "active",
      "repository": {
        "url": "https://github.com/supabase-community/supabase-mcp",
        "source": "github",
        "subfolder": "packages/mcp-server-supabase"
      },
      "version": "0.5.5",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "@supabase/mcp-server-supabase",
          "version": "0.5.5",
          "runtimeHint": "npx",
          "transport": {
            "type": "stdio"
          },
          "runtimeArguments": [
            {
              "description": "Supabase project reference ID",
              "format": "string",
              "type": "named",
              "name": "--project-ref"
            },
            {
              "description": "Enable read-only mode",
              "format": "boolean",
              "type": "named",
              "name": "--read-only"
            },
            {
              "description": "Comma-separated list of features to enable",
              "format": "string",
              "type": "named",
              "name": "--features"
            },
            {
              "description": "Custom API URL",
              "format": "string",
              "type": "named",
              "name": "--api-url"
            }
          ],
          "environmentVariables": [
            {
              "description": "Personal access token for Supabase API",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "SUPABASE_ACCESS_TOKEN"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "b7c21a79-6a4a-42e2-a194-944a1d1ed9f7",
          "versionId": "d1eeec4d-9cad-4acb-8d79-4f44332fe3f9",
          "publishedAt": "2025-09-18T21:32:17.512331682Z",
          "updatedAt": "2025-09-18T21:32:17.512331682Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.cyanheads/mcp-ts-template",
      "description": "A production-grade TypeScript template for scalable MCP servers with built-in observability.",
      "status": "active",
      "repository": {
        "url": "https://github.com/cyanheads/mcp-ts-template",
        "source": "github"
      },
      "version": "2.1.5",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mcp-ts-template",
          "version": "2.1.5",
          "runtimeHint": "bun",
          "transport": {
            "type": "stdio"
          },
          "packageArguments": [
            {
              "value": "run",
              "type": "positional"
            },
            {
              "value": "start:stdio",
              "type": "positional"
            }
          ],
          "environmentVariables": [
            {
              "description": "Sets the minimum log level for output (e.g., 'debug', 'info', 'warn').",
              "format": "string",
              "default": "info",
              "name": "MCP_LOG_LEVEL"
            }
          ]
        },
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "mcp-ts-template",
          "version": "2.1.5",
          "runtimeHint": "bun",
          "transport": {
            "type": "streamable-http",
            "url": "http://localhost:3010/mcp"
          },
          "packageArguments": [
            {
              "value": "run",
              "type": "positional"
            },
            {
              "value": "start:http",
              "type": "positional"
            }
          ],
          "environmentVariables": [
            {
              "description": "The hostname for the HTTP server.",
              "format": "string",
              "default": "127.0.0.1",
              "name": "MCP_HTTP_HOST"
            },
            {
              "description": "The port to run the HTTP server on.",
              "format": "string",
              "default": "3010",
              "name": "MCP_HTTP_PORT"
            },
            {
              "description": "The endpoint path for the MCP server.",
              "format": "string",
              "default": "/mcp",
              "name": "MCP_HTTP_ENDPOINT_PATH"
            },
            {
              "description": "Authentication mode to use: 'none', 'jwt', or 'oauth'.",
              "format": "string",
              "default": "none",
              "name": "MCP_AUTH_MODE"
            },
            {
              "description": "Sets the minimum log level for output (e.g., 'debug', 'info', 'warn').",
              "format": "string",
              "default": "info",
              "name": "MCP_LOG_LEVEL"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "b1a7bd6b-21e2-4cd8-8531-37dddc5fa3f4",
          "versionId": "d28f6046-21eb-41c0-a679-3a51fd12e495",
          "publishedAt": "2025-09-26T16:00:37.862170934Z",
          "updatedAt": "2025-09-27T21:00:38.116997504Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.waystation/wrike",
      "description": "Manage projects, tasks, and workflows with Wrike project management.",
      "status": "active",
      "repository": {
        "url": "https://github.com/waystation-ai/mcp",
        "source": "github"
      },
      "version": "0.3.1",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://waystation.ai/wrike/mcp"
        },
        {
          "type": "sse",
          "url": "https://waystation.ai/wrike/mcp/sse"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "5fccc166-4608-4928-b6a6-df708e455cd0",
          "versionId": "d2fa299a-65ac-4c2d-8d48-b30826140fb3",
          "publishedAt": "2025-09-09T14:37:01.216778711Z",
          "updatedAt": "2025-09-09T14:37:01.216778711Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/yuna0x0-hackmd-mcp",
      "description": "Interact with your HackMD notes and teams seamlessly. Manage your notes, view reading history, and…",
      "status": "active",
      "repository": {
        "url": "https://github.com/yuna0x0/hackmd-mcp",
        "source": "github"
      },
      "version": "1.4.2",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@yuna0x0/hackmd-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "a85afd07-0178-49e6-b962-178f24839d99",
          "versionId": "d300fcf6-437a-444d-ac42-f7e55f9d5380",
          "publishedAt": "2025-09-13T08:37:37.613854961Z",
          "updatedAt": "2025-09-15T03:33:42.700252156Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.Raistlin82/btp-sap-odata-to-mcp-server-optimized",
      "description": "Enterprise SAP OData to MCP Server with AI capabilities and Cloud Foundry integration",
      "status": "active",
      "repository": {
        "url": "https://github.com/Raistlin82/btp-sap-odata-to-mcp-server-optimized",
        "source": "github"
      },
      "version": "1.0.1",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "btp-sap-odata-to-mcp-server",
          "version": "1.0.1",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "URL of the SAP Identity Authentication Service tenant",
              "isRequired": true,
              "format": "string",
              "name": "SAP_IAS_URL"
            },
            {
              "description": "Client ID for the OAuth application in IAS",
              "isRequired": true,
              "format": "string",
              "name": "SAP_IAS_CLIENT_ID"
            },
            {
              "description": "Client Secret for the OAuth application in IAS",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "SAP_IAS_CLIENT_SECRET"
            },
            {
              "description": "Name of the BTP destination used for service discovery",
              "isRequired": true,
              "format": "string",
              "name": "SAP_DESTINATION_NAME"
            },
            {
              "description": "OData discovery mode: pattern, business, whitelist, or all",
              "format": "string",
              "name": "ODATA_DISCOVERY_MODE"
            },
            {
              "description": "Comma-separated patterns to include (pattern mode)",
              "format": "string",
              "name": "ODATA_INCLUDE_PATTERNS"
            },
            {
              "description": "Comma-separated patterns to exclude (pattern mode)",
              "format": "string",
              "name": "ODATA_EXCLUDE_PATTERNS"
            },
            {
              "description": "The port on which the Express server will listen",
              "format": "string",
              "name": "PORT"
            },
            {
              "description": "The application's operating environment",
              "format": "string",
              "name": "NODE_ENV"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "c1c29016-edf6-4fea-987b-c64b862d94d2",
          "versionId": "d30be744-00fd-4763-bb3f-a9d4dea1e17f",
          "publishedAt": "2025-09-21T04:33:38.866274995Z",
          "updatedAt": "2025-09-21T04:33:38.866274995Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.rbonestell/ap-mcp-server",
      "description": "Model Context Protocol (MCP) server for the Associated Press Media API",
      "status": "active",
      "repository": {
        "url": "https://github.com/rbonestell/ap-mcp-server",
        "source": "github"
      },
      "version": "1.2.6",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "ap-mcp-server",
          "version": "1.2.6",
          "transport": {
            "type": "stdio"
          },
          "environmentVariables": [
            {
              "description": "Your API key for the service",
              "isRequired": true,
              "format": "string",
              "isSecret": true,
              "name": "YOUR_API_KEY"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "15b5d5c8-7445-4376-a09b-d1951dccc90b",
          "versionId": "d50ffd11-3650-48ce-ba9b-6aaaea10ee1c",
          "publishedAt": "2025-09-09T14:57:28.79470971Z",
          "updatedAt": "2025-09-09T14:57:28.79470971Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.ignission/mcp",
      "description": "TikTok video data analytics and content strategy tools",
      "status": "active",
      "repository": {
        "url": "https://github.com/ignission-io/mcp",
        "source": "github"
      },
      "version": "1.0.0",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.ignission.io/mcp"
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "83c33312-203b-4245-a0d8-94f9a453b4fa",
          "versionId": "d544bbcc-44e2-4774-b097-e886b50dd022",
          "publishedAt": "2025-09-10T16:49:33.978580087Z",
          "updatedAt": "2025-09-10T16:49:33.978580087Z",
          "isLatest": true
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "ai.smithery/pinkpixel-dev-web-scout-mcp",
      "description": "Search the web and extract clean, readable text from webpages. Process multiple URLs at once to sp…",
      "status": "active",
      "repository": {
        "url": "https://github.com/pinkpixel-dev/web-scout-mcp",
        "source": "github"
      },
      "version": "1.5.3",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@pinkpixel-dev/web-scout-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "isRequired": true,
              "value": "Bearer {smithery_api_key}",
              "isSecret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "b81da317-d978-4f5f-9532-fa88b6a5799a",
          "versionId": "d5ec1a21-49f5-4bf7-b4e5-4bc8cd746213",
          "publishedAt": "2025-09-20T02:41:17.173406544Z",
          "updatedAt": "2025-09-20T03:20:23.189855739Z",
          "isLatest": false
        }
      }
    },
    {
      "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
      "name": "io.github.taurgis/sfcc-dev-mcp",
      "description": "MCP server for Salesforce B2C Commerce Cloud development assistance",
      "status": "active",
      "repository": {
        "url": "https://github.com/taurgis/sfcc-dev-mcp",
        "source": "github"
      },
      "version": "1.0.14",
      "packages": [
        {
          "registryType": "npm",
          "registryBaseUrl": "https://registry.npmjs.org",
          "identifier": "sfcc-dev-mcp",
          "version": "1.0.14",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "serverId": "e3c84b64-c6e1-49dc-9ca2-8909e36ac408",
          "versionId": "d76fb4c9-af0a-4588-9de3-2dd0856ba874",
          "publishedAt": "2025-09-17T07:22:50.583895618Z",
          "updatedAt": "2025-09-17T07:22:50.583895618Z",
          "isLatest": true
        }
      }
    }
  ]
}